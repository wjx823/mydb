(load "rmresign")

; -----------------------------------------------------------------
; AGE OF EMPIRES II - AGE OF KINGS -  ... AI SCRIPT
;       [ NightMare -3rd Edition- ]
;
;   Script Written By Shigeto Nakazawa(じゃわ＠中沢重人)
;   MyHomePage: http://www7.big.or.jp/~jawa/ [CGI-StaTion]
;   ( AoK の情報は扱っておりません、悪しからず(^-^; )
;
; ------------------------------------------------------------------
;
;   [感謝・感激！]
;
;   この AI を作成するに当たって
;       http://www.omn.ne.jp/~cat/index.htm [AOK AI Colosseum]
;       を参考にさせて頂きました。
;       とくに"リファレンス"は大変貴重な資料で、非常に助かりました。
;
;   また仮想敵として、主に以下のＡＩを利用させていただきました。
;       海戦の調整  …  Coteti_bot,Macchaシリーズ,Turbine,南天騎士団
;       陸戦の調整  …  Macchaシリーズ,杏騎士団
;       hvh で動作するほとんどのＡＩの製作者に感謝します。
;
; -----------------------------------------------------------------
;
;   [AIの特徴]
;
;   ゲーム          : ランダムゲーム専用(他不可)
;   文明            : バイキング、中国推奨
;   チーム戦        : 未対応
;   マップ          : 全マップ対応(アラビア、流域推奨)
;   マップの大きさ  : 小さいのみ
;   人口            : 100人から200人(125人推奨)
;   資源            : 標準
;   制限            : 暗黒の時代から始める必要があります。
;
;       ※ 現時点では AOK,AOC での動作を確認しております。
;          それ以外の拡張パックでの動作は保証できません。
;
;       ※ このＡＩは対人戦以外ではチートコマンドを使用しません。
;          また、タウンサイズアタックを使っています。
;
;   AI              : Aok and Aok TC pack.
;   map Style       : Random Map Only.
;   Civilization    : any       (best: Viking,Chinese)
;   Team Battle     : No
;   Map Type        : All-round (Ex: Arabia, Rivers)
;   Pop             : 100-200 (ex:125)
;   Resource        : normal
;   Start Age       : dark-age
;
;   This AI do not use cc-XXX command(Vs AI Only).
;   This AI do not use attack-now command.(TownSize Attak!)
; -----------------------------------------------------------------

; -----------------------
; ■ バージョン情報 ■
; -----------------------
;   バージョン情報
(defrule
    (true)
=>
    (chat-to-all " NightMare -3rd Edition- ver 2000.12.06 (AOK,AOC)")
    (disable-self)
)

; -----------------------
; ■ 動作環境チェック ■
; -----------------------
;; #load-if-not-defined DARK-AGE-START
;; (defrule
;;     (true)
;; =>
;;     (chat-to-all "■ 暗黒の時代がありません。降伏します")
;;     (disable-self)
;; )
;; (defrule
;;     (game-time > 30)
;; =>
;;     (resign)
;; )
;; #end-if
;; #load-if-not-defined POPULATION-CAP-100
;; #load-if-not-defined POPULATION-CAP-125
;; #load-if-not-defined POPULATION-CAP-150
;; #load-if-not-defined POPULATION-CAP-175
;; #load-if-not-defined POPULATION-CAP-200
;; (defconst POP-100 0)
;; (defconst POP-80  0)
;; (defrule
;;     (true)
;; =>
;;     (chat-to-all "制限人口が少なすぎます。降伏します")
;;     (disable-self)
;; )
;; (defrule
;;     (game-time > 30)
;; =>
;;     (resign)
;; )
;; #end-if
;; #end-if
;; #end-if
;; #end-if
;; #end-if

; -----------------------
; ■ 定数 ■
; -----------------------
;   フラグ
(defconst FALSE 0)
(defconst TRUE  1)
;   状態判断用
(defconst NONE  0)
(defconst SMALL 1)
(defconst BIG   2)
;   領主資源調整用
(defconst NOT_FEUDAL    0)
(defconst NO_FOOD       1)
(defconst NEED_FOOD     2)
(defconst NEED_ATTACK   3)
(defconst NO_FOOD2      4)
(defconst NEED_FOOD2    5)
(defconst NEED_ATTACK2  6)
;   戦略決定用
(defconst NEXTAGE  0)
(defconst ATTACK   1)
(defconst DEFENCE  2)
(defconst SERVER   3)
(defconst CLIENT   4)
(defconst HELP     5)
(defconst RESCUE   6)
;   マップタイプ
(defconst UNKNOWNMAP    0)
(defconst SEAMAP        1)
(defconst LANDMAP       2)
;   ＴＣ用特殊定数 ■
(defconst eagle-warrior-line        267)
(defconst halberdier                359)
(defconst ri-halberdier             429)
(defconst ri-bloodlines             435)

; -----------------------
; ■ タイマー ■
; -----------------------
;   タイマー宣言
(defconst TIMER_RESIGN          1)  ; 降伏用
(defconst TIMER_RESOURCE        2)  ; 資源調整用
(defconst TIMER_BUILDING        3)  ; 建築制御用
(defconst TIMER_DISTANCE        4)  ; 資源搾取距離調整用
(defconst TIMER_ARMY_ATTACK     5)  ; 陸軍攻撃判断用
(defconst TIMER_EXPANSION       6)  ; タウンサイズアタック用
(defconst TIMER_RESET_EXPANSION 7)  ; タウンサイズアタック用
;   タイマー初期化
(defrule
    (true)
=>
    (disable-timer      TIMER_RESIGN)
    (disable-timer    TIMER_RESOURCE)
    (disable-timer    TIMER_BUILDING)
    (disable-timer    TIMER_DISTANCE)
    (disable-timer TIMER_ARMY_ATTACK)
    (disable-self)
)

; -----------------------
;   人数チェック
; -----------------------
#load-if-defined POPULATION-CAP-100
(defconst POP-100 100)
(defconst POP-80   80)
#end-if
#load-if-defined POPULATION-CAP-125
(defconst POP-100 125)
(defconst POP-80  100)
#end-if
#load-if-defined POPULATION-CAP-150
(defconst POP-100 150)
(defconst POP-80  120)
#end-if
#load-if-defined POPULATION-CAP-175
(defconst POP-100 175)
(defconst POP-80  140)
#end-if
#load-if-defined POPULATION-CAP-200
(defconst POP-100 200)
(defconst POP-80  160)
#end-if

; -----------------------
; ■ 変数 ■
; -----------------------
;   変数宣言
(defconst FEUDAL_AGE_FLAG       1)  ; 領主時代の研究フラグ
(defconst CASTLE_AGE_FLAG       2)  ; 城主時代の研究フラグ
(defconst IMPERIAL_AGE_FLAG     3)  ; 帝王時代の研究フラグ
(defconst STRATEGY              4)  ; 戦略決定用
(defconst MAPTYPE               5)  ; マップタイプ(進化に利用)
(defconst BUILDING              6)  ; 建築制御用
(defconst DISTANCE              7)  ; 資源距離調整用
(defconst RESOURCE              8)  ; 領主資源制御用
(defconst RESEARCH              9)  ; 重要な研究用
(defconst RESET_EXPANTION      10)  ; タウンサイズアタック用
(defconst FORMATION_SOLDIER    11)  ; 戦士系の編成に変更するか(標準:騎士編成)
(defconst RESEARCH_SOLDIER     12)  ; (鉄工所等の)剣士系のテクノロジー
(defconst RESEARCH_ARCHER      13)  ; (鉄工所等の)射手系のテクノロジー
(defconst ARMY_UNIT            20)  ; 陸軍生産制御
(defconst NAVY_UNIT            21)  ; 海軍生産制御
(defconst ARMY_ATTACK          22)  ; 陸軍攻撃制御
(defconst NAVY_ATTACK          23)  ; 海軍攻撃制御
(defconst ARMY_LEVEL           24)  ; 陸軍の支配力
(defconst NAVY_LEVEL           25)  ; 海軍の支配力
(defconst NEED_SIEGH_UNIT      26)  ; 攻城兵器が必要かどうか
;   変数初期化
(defrule
    (true)
=>
    (set-goal FEUDAL_AGE_FLAG   FALSE)
    (set-goal CASTLE_AGE_FLAG   FALSE)
    (set-goal IMPERIAL_AGE_FLAG FALSE)
    (set-goal STRATEGY        NEXTAGE)
    (set-goal MAPTYPE      UNKNOWNMAP)
    (set-goal BUILDING           TRUE)
    (set-goal DISTANCE           TRUE)
    (set-goal RESOURCE     NOT_FEUDAL)
    (set-goal RESEARCH          FALSE)
    (set-goal RESET_EXPANTION   FALSE)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal FORMATION_SOLDIER FALSE)
    (set-goal RESEARCH_SOLDIER  FALSE)
    (set-goal RESEARCH_ARCHER   FALSE)
    (disable-self)
)
(defrule
    (true)
=>
    (set-goal ARMY_UNIT         FALSE)
    (set-goal NAVY_UNIT         FALSE)
    (set-goal ARMY_ATTACK       FALSE)
    (set-goal NAVY_ATTACK       FALSE)
    (set-goal ARMY_LEVEL        FALSE)
    (set-goal NAVY_LEVEL        FALSE)
    (set-goal NEED_SIEGH_UNIT   FALSE)
    (disable-self)
)

; -----------------------
; ■ 戦略数値 ■
; -----------------------
(defrule
    (true)
=>
    ; 資源を取る距離(基本)
    (set-strategic-number sn-food-dropsite-distance  3)             ; 羊、苺
    (set-strategic-number sn-wood-dropsite-distance  3)             ; 木
    (set-strategic-number sn-gold-dropsite-distance  3)             ; 金
    (set-strategic-number sn-stone-dropsite-distance 3)             ; 石
    ; 資源を取る距離(最大)
    (set-strategic-number sn-maximum-food-drop-distance       5)    ; 羊、苺
    (set-strategic-number sn-maximum-hunt-drop-distance       0)    ; 狩り
    (set-strategic-number sn-maximum-fish-boat-drop-distance -1)    ; 漁
    (set-strategic-number sn-maximum-wood-drop-distance      -1)    ; 木
    (set-strategic-number sn-maximum-gold-drop-distance      15)    ; 金
    (set-strategic-number sn-maximum-stone-drop-distance     15)    ; 石
    ; 町の人が次の仕事までにしなければいけない仕事量
    (set-strategic-number sn-retask-gather-amount             1)    ; 最小
    (set-strategic-number sn-max-retask-gather-amount     32767)    ; 最大
    (disable-self)
)
(defrule
    (true)
=>
    ; 中心からの距離（数）
    (set-strategic-number sn-camp-max-distance  0)                  ; 伐採所、採掘所
    (set-strategic-number sn-mill-max-distance 25)                  ; 粉ひき所
    ; 立てる時必要な大きさ
    (set-strategic-number sn-required-forest-tiles             300) ; 森の大きさ
    (set-strategic-number sn-minimum-water-body-size-for-dock 2000) ; 海の大きさ
    ; 町の大きさ
    (set-strategic-number sn-minimum-town-size  1)                  ; 町の最小範囲
    (set-strategic-number sn-maximum-town-size 12)                  ; 町の最大範囲
    (disable-self)
)
(defrule
    (true)
=>
    (set-strategic-number sn-percent-civilian-explorers 100)        ; 策敵
    (set-strategic-number sn-percent-civilian-builders  100)        ; 建物
    (set-strategic-number sn-percent-civilian-gatherers 100)        ; 生産

    (set-strategic-number sn-cap-civilian-explorers   2)            ; 策敵
    (set-strategic-number sn-cap-civilian-builders  200)            ; 建物
    (set-strategic-number sn-cap-civilian-gatherers 200)            ; 生産

    (set-strategic-number sn-minimum-civilian-explorers 2)          ; 町の人索敵数
    (set-strategic-number sn-number-explore-groups      3)          ; 索敵グループ
    (set-strategic-number sn-minimum-explore-group-size 1)          ; 索敵最小人数
    (set-strategic-number sn-maximum-explore-group-size 1)          ; 索敵最大人数
    (set-strategic-number sn-total-number-explorers     3)          ; 索敵合計人数
    (disable-self)
)
(defrule
    (true)
=>
    (set-strategic-number sn-percent-exploration-required   100)    ; 索敵割合
    (set-strategic-number sn-percentage-explore-exterminators 0)    ; 索敵攻撃割合
    (set-strategic-number sn-blot-size                        1)    ; 未開拓移動距離
    (set-strategic-number sn-blot-exploration-map             0)    ; 再索敵設定
    (set-strategic-number sn-initial-exploration-required     0)    ; 初期索敵範囲
    (disable-self)
)
(defrule
    (true)
=>                                                                  ; 陸軍
    (set-strategic-number sn-number-attack-groups              0)   ; 攻撃グループ
    (set-strategic-number sn-number-defend-groups            200)   ; 防御グループ
    (set-strategic-number sn-minimum-defend-group-size         5)   ; 防御最小人数
    (set-strategic-number sn-maximum-defend-group-size        15)   ; 防御最大人数
    (disable-self)
)
(defrule
    (true)
=>                                                                  ; 海軍
    (set-strategic-number sn-minimum-boat-attack-group-size   5)    ; 攻撃最小人数
    (set-strategic-number sn-maximum-boat-attack-group-size   8)    ; 攻撃最大人数
    (set-strategic-number sn-minimum-boat-defend-group-size   4)    ; 防御最小人数
    (set-strategic-number sn-maximum-boat-defend-group-size   6)    ; 防御最大人数
    (set-strategic-number sn-minimum-boat-explore-group-size  1)    ; 索敵最小人数
    (set-strategic-number sn-maximum-boat-explore-group-size  1)    ; 索敵最大人数
    (disable-self)
)
(defrule
    (true)
=>
    (set-strategic-number sn-group-commander-selection-method    2) ; リーダー
    (set-strategic-number sn-group-form-distance                15) ; 攻撃時人数
    (set-strategic-number sn-attack-group-gather-spacing        30) ; グループ範囲
    (set-strategic-number sn-ignore-attack-group-under-attack    1) ; 攻撃無視
    (set-strategic-number sn-attack-separation-time-randomness   0) ; 攻撃間隔
;    (set-strategic-number sn-percent-enemy-sighted-response     10) ; 救援割合
;    (set-strategic-number sn-enemy-sighted-response-distance    30) ; 攻撃反応
    (set-strategic-number sn-percent-enemy-sighted-response     80) ; 救援割合
    (set-strategic-number sn-enemy-sighted-response-distance    15) ; 攻撃反応
    (set-strategic-number sn-attack-group-size-randomness        0) ; +ﾗﾝﾀﾞﾑ人数
    (disable-self)
)
(defrule
    (true)
=>                                                                  ; 防衛優先順位
    (set-strategic-number sn-gold-defend-priority     7)            ; 金
    (set-strategic-number sn-stone-defend-priority    7)            ; 石
    (set-strategic-number sn-forage-defend-priority   7)            ; 飯
    (set-strategic-number sn-relic-defend-priority    7)            ; 聖なる箱
    (set-strategic-number sn-town-defend-priority     0)            ; 町
    (set-strategic-number sn-dock-defend-priority     7)            ; 港
    (set-strategic-number sn-zero-priority-distance 32767)          ; 防衛距離
    (set-strategic-number sn-defend-overlap-distance       1)       ; 防御範囲
    (set-strategic-number sn-group-leader-defense-distance 1)       ; 護衛範囲
    (set-strategic-number sn-defense-distance              1)       ; 町以外との距離
    (set-strategic-number sn-sentry-distance               1)       ; 町との距離
    (set-strategic-number sn-sentry-distance-variation     1)       ; 上のランダム化
    (disable-self)
)
(defrule
    (true)
=>
    (set-strategic-number sn-allow-civilian-defense              0) ; 町の人の防衛
    (set-strategic-number sn-gather-defense-units                1) ; 町の人の防衛数
    (set-strategic-number sn-random-placement-factor            30) ; 建築ランダム
    (set-difficulty-parameter ability-to-maintain-distance     100) ; 矢を避ける
    (set-difficulty-parameter ability-to-dodge-missiles          0) ; 弓系が離れる
    (set-strategic-number sn-minimum-dropsite-buffer         32767) ; 貯蔵庫位置
    (set-strategic-number sn-number-build-attempts-before-skip 100) ; 無視する建物
    (disable-self)
)
(defrule
    (true)
=>
    (set-strategic-number sn-special-attack-type1               1)  ; 特別な目標
    (set-strategic-number sn-attack-intelligence                1)  ; かしこい攻撃
    (set-strategic-number sn-intelligent-gathering              1)  ; かしこい収集
    (set-strategic-number sn-consecutive-idle-unit-limit     -100)  ; 待機
    (set-strategic-number sn-maximum-gaia-attack-response       0)  ; 狼への抵抗
    (set-strategic-number sn-coop-share-information             1)  ; 情報の共有
    (set-strategic-number sn-max-build-plan-gatherer-percentage 0)  ; 収集者建設割合
    (set-strategic-number sn-task-ungrouped-soldiers            0)  ; 散開防衛
    (set-strategic-number sn-attack-winning-player              1)  ; 勝利国攻撃
    (set-strategic-number sn-attack-winning-player-factor       0)  ; その割合
    (disable-self)
)
; -----------------------
; ■ 最高司令部 ■
; -----------------------
;   編成の決定
(defrule
    (game-time < 30)
    (or
        (unit-type-count scout-cavalry-line == 0)
        (goal FORMATION_SOLDIER TRUE)
    )
=>
    (set-goal FORMATION_SOLDIER TRUE)
    (set-goal RESEARCH_SOLDIER TRUE)
    (chat-local-to-self "【剣士系で軍備します】")
    (disable-self)
)
;   攻撃準備指令
(defrule
    (goal NAVY_UNIT TRUE)
    (not (goal STRATEGY ATTACK))
=>
    (set-goal STRATEGY ATTACK)
    (chat-local-to-self "9 【最高指令本部】全力で攻撃せよ！")
)
(defrule
    (goal ARMY_UNIT TRUE)
    (not (goal STRATEGY ATTACK))
=>
    (set-goal STRATEGY ATTACK)
    (chat-local-to-self "9 【最高指令本部】全力で攻撃せよ！")
)
;   進化優先指令
(defrule
    (goal NAVY_UNIT FALSE)
    (goal ARMY_UNIT FALSE)
    (not (goal STRATEGY NEXTAGE))
=>
    (set-goal STRATEGY NEXTAGE)
    (chat-local-to-self "9 【最高指令本部】全力で進化せよ！")
)

;   マップタイプ判別
(defrule
    (goal MAPTYPE UNKNOWNMAP)
    (building-type-count-total dock == 0)
    (wood-amount >= 200)
    (unit-type-count villager > 14)
=>
    (chat-local-to-self "9 【最高指令本部】陸戦を挑むのだ！")
    (set-goal MAPTYPE LANDMAP)
    (disable-self)
)
(defrule
    (goal MAPTYPE UNKNOWNMAP)
    (building-type-count-total lumber-camp > 0)
    (building-type-count-total mill > 0)
    (building-type-count dock > 0)
=>
    (chat-local-to-self "9 【最高指令本部】海戦を挑むのだ！")
    (set-goal MAPTYPE SEAMAP)
    (disable-self)
)

; -----------------------
; ■ 諜報部 ■
; -----------------------
;   海軍支配力調査(領主まで)
(defrule
    (goal FEUDAL_AGE_FLAG TRUE)
    (players-current-age every-enemy <= feudal-age)
    (players-unit-type-count every-enemy galley-line == 0)
    (not (goal NAVY_LEVEL BIG))
=>
    (set-goal NAVY_LEVEL BIG)
    (chat-local-to-self "【諜報部】我が艦隊に敵なし！")
)
(defrule
    (players-current-age every-enemy <= feudal-age)
    (players-unit-type-count every-enemy galley-line > 0)
    (players-unit-type-count every-enemy galley-line <= 3)
    (not (goal NAVY_LEVEL SMALL))
=>
    (set-goal NAVY_LEVEL SMALL)
    (chat-local-to-self "【諜報部】少数の敵艦を発見、警戒せよ！")
)
(defrule
    (players-current-age every-enemy <= feudal-age)
    (players-unit-type-count every-enemy galley-line > 3)
    (not (goal NAVY_LEVEL NONE))
=>
    (set-goal NAVY_LEVEL NONE)
    (chat-local-to-self "【諜報部】大規模な敵艦を確認。至急、対処せよ！！")
)
;   海軍支配力調査(城主以降)
(defrule
    (players-current-age any-enemy >= castle-age)
    (players-unit-type-count every-enemy galley-line == 0)
    (players-unit-type-count every-enemy fire-ship-line == 0)
    (players-unit-type-count every-enemy demolition-ship-line == 0)
    (players-unit-type-count every-enemy longboat-line == 0)
    (not (goal NAVY_LEVEL BIG))
=>
    (set-goal NAVY_LEVEL BIG)
    (chat-local-to-self "【諜報部】我が艦隊に敵なし！")
)
(defrule
    (players-current-age any-enemy >= castle-age)
    (players-unit-type-count every-enemy galley-line < 4)
    (players-unit-type-count every-enemy fire-ship-line < 2)
    (players-unit-type-count every-enemy demolition-ship-line > 0)
    (players-unit-type-count every-enemy longboat-line > 0)
    (not (goal NAVY_LEVEL SMALL))
=>
    (set-goal NAVY_LEVEL SMALL)
    (chat-local-to-self "【諜報部】少数の敵艦を発見、警戒せよ！")
)
(defrule
    (players-current-age any-enemy >= castle-age)
    (players-unit-type-count every-enemy galley-line >= 4)
    (players-unit-type-count every-enemy fire-ship-line >= 2)
    (players-unit-type-count every-enemy demolition-ship-line > 0)
    (players-unit-type-count every-enemy longboat-line > 0)
    (not (goal NAVY_LEVEL BIG))
=>
    (set-goal NAVY_LEVEL BIG)
    (chat-local-to-self "【諜報部】大規模な敵艦を確認。至急、対処せよ！！")
)

; -----------------------
; ■ 生産指令部 ■
; -----------------------
;   海軍軍隊生産管理
(defrule
    (building-type-count dock > 0)
    (or
        (players-building-type-count any-enemy dock > 0)
        (or
            (players-unit-type-count any-enemy fishing-ship > 0)
            (players-unit-type-count any-enemy galley-line > 0)
        )
    )
    (warboat-count < 14)
    (goal NAVY_UNIT FALSE)
=>
    (set-goal NAVY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】海軍を補強するのだ！")
    (chat-to-allies "34")
)
(defrule
    (building-type-count dock > 0)
    (or
        (players-building-type-count any-enemy dock > 1)
        (or
            (players-unit-type-count any-enemy fishing-ship > 0)
            (players-unit-type-count any-enemy galley-line > 0)
        )
    )
    (warboat-count < 25)
    (goal NAVY_UNIT FALSE)
=>
    (set-goal NAVY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】海軍を補強するのだ！")
    (chat-to-allies "34")
)
(defrule
    (warboat-count >= 14)
    (players-building-type-count every-enemy dock == 0)
    (players-unit-type-count every-enemy fishing-ship == 0)
    (players-unit-type-count every-enemy galley-line == 0)
    (goal NAVY_UNIT TRUE)
=>
    (set-goal NAVY_UNIT FALSE)
    (chat-local-to-self "25 【軍事指令部】海軍の生産は中止だ！")
)
(defrule
    (warboat-count >= 25)
    (goal NAVY_UNIT TRUE)
=>
    (set-goal NAVY_UNIT FALSE)
    (chat-local-to-self "25 【軍事指令部】海軍の生産は中止だ！")
)
;   陸軍軍隊生産管理
(defrule
    (current-age >= castle-age)
    (or
        (or
            (players-building-type-count any-enemy barracks > 0)
            (players-building-type-count any-enemy stable > 0)
        )
        (or
            (players-building-type-count any-enemy archery-range > 0)
            (players-building-type-count any-enemy siege-workshop > 0)
        )
    )
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
(defrule
    (current-age >= castle-age)
    (or
        (or
            (players-unit-type-count any-enemy militiaman-line > 0)
            (players-unit-type-count any-enemy spearman-line > 0)
        )
        (or
            (players-unit-type-count any-enemy skirmisher-line > 0)
            (players-unit-type-count any-enemy knight-line > 0)
        )
    )
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
(defrule
    (current-age >= castle-age)
    (or
        (or
            (players-unit-type-count any-enemy camel-line > 0)
            (players-unit-type-count any-enemy scout-cavalry-line > 2)
        )
        (or
            (players-unit-type-count any-enemy eagle-warrior-line > 2)
            (players-unit-type-count any-enemy battering-ram-line > 0)
        )
    )
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
(defrule
    (current-age >= castle-age)
    (warboat-count >= 9)
    (players-military-population any-enemy < 5)
    (not (players-military-population any-enemy > 14))
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
(defrule
    (current-age >= castle-age)
    (warboat-count >= 9)
    (players-military-population every-enemy < 5)
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
(defrule
    (goal IMPERIAL_AGE_FLAG TRUE)
    (warboat-count >= 5)
    (goal NAVY_LEVEL BIG)
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
(defrule
    (goal IMPERIAL_AGE_FLAG TRUE)
    (wood-amount > 600)
    (food-amount > 800)
    (gold-amount > 800)
    (goal ARMY_UNIT FALSE)
=>
    (set-goal ARMY_UNIT TRUE)
    (chat-local-to-self "16 【軍事指令部】陸軍を補強するのだ！")
)
; -----------------------
; ■ 海軍攻撃指令部 ■
; -----------------------
(defrule
    (warboat-count > 0)
    (goal NAVY_LEVEL BIG)
    (goal NAVY_ATTACK FALSE)
=>
    (set-goal NAVY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】海軍攻撃開始！")
)
(defrule
    (warboat-count >= 5)
    (players-building-type-count every-enemy dock == 0)
    (goal NAVY_LEVEL SMALL)
    (goal NAVY_ATTACK FALSE)
=>
    (set-goal NAVY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】海軍攻撃開始！")
)
(defrule
    (warboat-count >= 8)
    (players-building-type-count every-enemy dock > 0)
    (goal NAVY_LEVEL SMALL)
    (goal NAVY_ATTACK FALSE)
=>
    (set-goal NAVY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】海軍攻撃開始！")
)
(defrule
    (warboat-count > 12)
    (players-building-type-count every-enemy dock == 0)
    (goal NAVY_LEVEL NONE)
    (goal NAVY_ATTACK FALSE)
=>
    (set-goal NAVY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】海軍攻撃開始！")
)
(defrule
    (warboat-count >= 18)
    (players-building-type-count every-enemy dock > 0)
    (goal NAVY_LEVEL NONE)
    (goal NAVY_ATTACK FALSE)
=>
    (set-goal NAVY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】海軍攻撃開始！")
)
(defrule
    (warboat-count < 10)
    (goal NAVY_LEVEL NONE)
    (goal NAVY_ATTACK TRUE)
=>
    (set-strategic-number sn-number-boat-attack-groups   0)
    (set-strategic-number sn-number-boat-defend-groups 200)
    (set-goal NAVY_ATTACK FALSE)
    (chat-local-to-self "24 【軍事指令部】海軍による攻撃を断念します")
)
;   攻撃命令
(defrule
    (players-building-type-count any-enemy dock > 0)
    (goal NAVY_ATTACK TRUE)
=>
    (set-strategic-number sn-number-boat-explore-groups 0)
    (set-strategic-number sn-number-boat-attack-groups 100)
    (set-strategic-number sn-number-boat-defend-groups 100)
    (set-strategic-number sn-percent-attack-soldiers 0)
    (set-strategic-number sn-percent-attack-boats 100)
    (attack-now)
)
(defrule
    (players-building-type-count every-enemy dock == 0)
    (goal NAVY_ATTACK TRUE)
=>
    (set-strategic-number sn-number-boat-explore-groups  5)
    (set-strategic-number sn-number-boat-attack-groups   0)
    (set-strategic-number sn-number-boat-defend-groups 200)
    (set-strategic-number sn-percent-attack-soldiers 0)
    (set-strategic-number sn-percent-attack-boats 100)
    (attack-now)
)
;   矢を避ける距離
(defrule
    (players-current-age every-enemy == feudal-age)
    (players-building-type-count any-enemy watch-tower-line == 0)
=>
    (set-difficulty-parameter ability-to-maintain-distance 100)
    (disable-self)
)
(defrule
    (players-current-age any-enemy == castle-age)
    (warboat-count > 5)
=>
    (set-difficulty-parameter ability-to-maintain-distance 70)
    (disable-self)
)
(defrule
    (players-current-age any-enemy == castle-age)
    (players-building-type-count any-enemy castle > 0)
    (warboat-count > 5)
=>
    (set-difficulty-parameter ability-to-maintain-distance 0)
    (disable-self)
)
(defrule
    (goal MAPTYPE LANDMAP)
    (unit-type-count-total battering-ram-line < 2)
    (soldier-count <= 15)
=>
    (set-difficulty-parameter ability-to-maintain-distance 10)
    (set-strategic-number sn-task-ungrouped-soldiers 1)
    (set-strategic-number sn-percent-enemy-sighted-response 1)
    (set-strategic-number sn-enemy-sighted-response-distance 0)
)
(defrule
    (goal MAPTYPE LANDMAP)
    (unit-type-count-total battering-ram-line < 2)
    (soldier-count > 15)
=>
    (set-difficulty-parameter ability-to-maintain-distance 10)
    (set-strategic-number sn-task-ungrouped-soldiers 0)
    (set-strategic-number sn-percent-enemy-sighted-response 1)
    (set-strategic-number sn-enemy-sighted-response-distance 10)
)
(defrule
    (goal MAPTYPE LANDMAP)
    (unit-type-count-total battering-ram-line >= 2)
=>
    (set-difficulty-parameter ability-to-maintain-distance 0)
    (set-strategic-number sn-task-ungrouped-soldiers 0)
    (set-strategic-number sn-percent-enemy-sighted-response 15)
    (set-strategic-number sn-enemy-sighted-response-distance 80)
)
(defrule
    (players-building-type-count any-enemy dock == 0)
    (strategic-number sn-attack-winning-player == 1)
=>
    (set-strategic-number sn-attack-winning-player 0)
)
(defrule
    (players-building-type-count every-enemy dock > 0)
    (strategic-number sn-attack-winning-player == 0)
=>
    (set-strategic-number sn-attack-winning-player 1)
)

; -----------------------
; ■ 陸軍攻撃指令部 ■
; -----------------------
;   タイマーセット
(defrule
    (goal MAPTYPE LANDMAP)
    (soldier-count > 10)
=>
    (enable-timer TIMER_ARMY_ATTACK 10)
    (disable-self)
)
(defrule
    (goal MAPTYPE LANDMAP)
=>
    (set-goal ARMY_ATTACK FALSE)
    (disable-self)
)
(defrule
    (goal MAPTYPE SEAMAP)
    (current-age >= castle-age)
=>
    (enable-timer TIMER_ARMY_ATTACK 30)
    (disable-self)
)
;   領主様子見
(defrule
    (goal MAPTYPE LANDMAP)
    (soldier-count > 1)
=>
    (attack-now)
    (chat-local-to-self "21 【軍事指令部】敵に先制攻撃を！")
    (disable-self)
)
;   陸戦領主Ｒ
(defrule
    (current-age == feudal-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-military-population any-enemy < 2)
    (soldier-count > 4)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 60)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:RR 4-2")
)
(defrule
    (current-age == feudal-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-military-population any-enemy < 5)
    (soldier-count > 10)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 60)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:RR 10-5")
)
(defrule
    (current-age == feudal-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-military-population any-enemy < 8)
    (soldier-count > 15)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 60)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:RR 15-8")
)
(defrule
    (current-age == feudal-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-military-population any-enemy < 10)
    (soldier-count > 20)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 60)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:RR 20-10")
)
(defrule
    (current-age == feudal-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-military-population any-enemy < 15)
    (soldier-count > 25)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 60)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:RR 25-15")
)
(defrule
    (current-age == feudal-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-current-age every-enemy <= feudal-age)
    (players-military-population any-enemy < 25)
    (soldier-count > 35)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 60)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:RR 25-15")
)
;   敵城なし - 攻撃開始
(defrule
    (current-age >= castle-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (players-military-population any-enemy < 3)
    (soldier-count > 10)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 120)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:城なし 10-3")
)
(defrule
    (current-age >= castle-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (not (goal NAVY_LEVEL NONE))
    (players-military-population any-enemy < 20)
    (soldier-count > 20)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:城なし 20-20")
)
(defrule
    (current-age >= castle-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (goal NAVY_LEVEL BIG)
    (soldier-count > 25)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:城なし 海あり 25-xx")
)
(defrule
    (current-age >= castle-age)
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (soldier-count >= 30)
    (not (goal NAVY_LEVEL NONE))
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:城なし 30-30")
)
;   敵城なし - 攻撃失敗
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (players-military-population any-enemy >= 4)
    (soldier-count < 8)
    (goal ARMY_ATTACK TRUE)
=>
    (set-goal ARMY_ATTACK FALSE)
    (enable-timer TIMER_ARMY_ATTACK 120)
    (chat-local-to-self "24 【軍事指令部】陸軍の侵攻作戦失敗:城なし 8-4")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (players-military-population any-enemy >= 6)
    (soldier-count < 12)
    (goal ARMY_ATTACK TRUE)
=>
    (set-goal ARMY_ATTACK FALSE)
    (enable-timer TIMER_ARMY_ATTACK 120)
    (chat-local-to-self "24 【軍事指令部】陸軍の侵攻作戦失敗:城なし 12-6")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (players-building-type-count every-enemy castle == 0)
    (players-military-population any-enemy >= 10)
    (soldier-count < 22)
    (goal ARMY_ATTACK TRUE)
=>
    (set-goal ARMY_ATTACK FALSE)
    (enable-timer TIMER_ARMY_ATTACK 120)
    (chat-local-to-self "24 【軍事指令部】陸軍の侵攻作戦失敗:城なし 22-10")
)
;   敵城あり - 攻撃開始
;   騎士中心
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (or
        (research-completed ri-cavalier)
        (research-completed ri-heavy-camel)
    )
    (building-type-count castle > 0)
    (players-current-age every-enemy <= castle-age)
    (soldier-count >= 25)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:進化勝ち 25-xx")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (or
        (research-completed ri-cavalier)
        (research-completed ri-heavy-camel)
    )
    (gold-amount > 500)
    (food-amount > 500)
    (wood-amount > 500)
    (building-type-count castle > 2)
    (players-current-age every-enemy <= castle-age)
    (soldier-count >= 30)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:進化勝ち 30-")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (or
        (research-completed ri-cavalier)
        (research-completed ri-heavy-camel)
    )
    (or
        (research-completed ri-paladin)
        (not (research-available ri-paladin))
    )
    (food-amount > 300)
    (wood-amount > 300)
    (gold-amount > 300)
    (soldier-count >= 30)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:帝王標準 30-xx")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (or
        (research-completed ri-cavalier)
        (research-completed ri-heavy-camel)
    )
    (players-military-population every-enemy < 5)
    (soldier-count >= 30)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:絶対有利 30-5")
)
;   進化勝ち
;   戦士中心
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (research-completed ri-two-handed-swordsman)
    (building-type-count castle > 0)
    (players-current-age every-enemy <= castle-age)
    (soldier-count >= 25)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:進化勝ち 25-xx")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (research-completed ri-two-handed-swordsman)
    (gold-amount > 500)
    (food-amount > 500)
    (wood-amount > 500)
    (building-type-count castle > 2)
    (players-current-age every-enemy <= castle-age)
    (soldier-count >= 30)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:進化勝ち 30-")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (research-completed ri-two-handed-swordsman)
    (or
        (research-completed ri-champion)
        (not (research-available ri-champion))
    )
    (food-amount > 300)
    (wood-amount > 300)
    (gold-amount > 300)
    (soldier-count >= 30)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:帝王標準 30-xx")
)
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (research-completed ri-two-handed-swordsman)
    (players-military-population every-enemy < 5)
    (soldier-count >= 30)
    (goal ARMY_ATTACK FALSE)
=>
    (enable-timer TIMER_ARMY_ATTACK 180)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "21 【軍事指令部】陸軍本土攻撃開始:絶対有利 30-5")
)
;   敵城あり - 攻撃失敗
(defrule
    (timer-triggered TIMER_ARMY_ATTACK)
    (soldier-count < 20)
    (players-military-population any-enemy >= 5)
    (players-building-type-count any-enemy castle > 0)
    (goal ARMY_ATTACK TRUE)
=>
    (set-goal ARMY_ATTACK FALSE)
    (enable-timer TIMER_ARMY_ATTACK 120)
    (chat-local-to-self "24 【軍事指令部】陸軍の侵攻作戦失敗:城あり 20-5")
)
;   タイマーリセット
(defrule
    (goal ARMY_ATTACK FALSE)
    (timer-triggered TIMER_ARMY_ATTACK)
=>
    (enable-timer TIMER_ARMY_ATTACK 5)
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (timer-triggered TIMER_ARMY_ATTACK)
=>
    (enable-timer TIMER_ARMY_ATTACK 120)
)
;   攻撃目標
(defrule
    (true)
=>                                                                   ; 攻撃目標
    (set-strategic-number sn-target-evaluation-distance         100) ; 距離
    (set-strategic-number sn-target-evaluation-hitpoints         50) ; 体力
    (set-strategic-number sn-target-evaluation-damage-capability 20) ; 耐性
    (set-strategic-number sn-target-evaluation-kills            100) ; 味方
    (set-strategic-number sn-target-evaluation-rof               10) ; 攻撃速度
    (set-strategic-number sn-target-evaluation-attack-attempts   50) ; 攻撃回数
    (set-strategic-number sn-target-evaluation-range             10) ; 射程
    (set-strategic-number sn-target-evaluation-time-kill-ratio  100) ; 時間
    (set-strategic-number sn-target-evaluation-in-progress      100) ; 攻撃中
    (set-strategic-number sn-target-evaluation-ally-proximity    50) ; 同盟者
    (set-strategic-number sn-target-evaluation-continent         50) ; 司令官
    (set-strategic-number sn-target-evaluation-boat               1) ; 海軍
    (set-strategic-number sn-target-evaluation-siege-weapon       1) ; 建物
    (disable-self)
)
(defrule
    (unit-type-count cannon-galleon-line > 0)
=>                                                                   ; 攻撃目標
    (set-strategic-number sn-target-evaluation-distance          20) ; 距離
    (set-strategic-number sn-target-evaluation-hitpoints       -100) ; 体力
    (set-strategic-number sn-target-evaluation-damage-capability 50) ; 耐性
    (set-strategic-number sn-target-evaluation-kills             50) ; 味方
    (set-strategic-number sn-target-evaluation-rof               70) ; 攻撃速度
    (set-strategic-number sn-target-evaluation-attack-attempts   70) ; 攻撃回数
    (set-strategic-number sn-target-evaluation-range            100) ; 射程
    (set-strategic-number sn-target-evaluation-time-kill-ratio   80) ; 時間
    (set-strategic-number sn-target-evaluation-in-progress     -100) ; 攻撃中
    (set-strategic-number sn-target-evaluation-ally-proximity    30) ; 同盟者
    (set-strategic-number sn-target-evaluation-continent         70) ; 司令官
    (set-strategic-number sn-target-evaluation-boat              70) ; 海軍
    (set-strategic-number sn-target-evaluation-siege-weapon       1) ; 建物
    (disable-self)
)
; -----------------------
; ■ 市場操作 ■
; -----------------------
;   領主(標準)
(defrule
    (not (goal CASTLE_AGE_FLAG TRUE))
    (food-amount > 900)
    (gold-amount < 200)
    (can-sell-commodity food)
=>
    (sell-commodity food)
;;    (chat-local-to-self "市場で食料を売ります(城主進化)")
)
(defrule
    (not (goal CASTLE_AGE_FLAG TRUE))
    (food-amount < 750)
    (gold-amount > 300)
    (can-buy-commodity food)
=>
    (buy-commodity food)
;;    (chat-local-to-self "市場で食料を買います(城主進化)")
)
;   領主(海軍攻撃優先)
(defrule
    (goal STRATEGY ATTACK)
    (goal NAVY_UNIT TRUE)
    (not (goal CASTLE_AGE_FLAG TRUE))
    (wood-amount < 50)
    (gold-amount > 350)
    (can-buy-commodity wood)
=>
    (buy-commodity wood)
;;    (chat-local-to-self "市場で木を買います(木材不足)")
)
;   領主(進化優先)
(defrule
    (goal STRATEGY NEXTAGE)
    (not (goal CASTLE_AGE_FLAG TRUE))
    (or
        (warboat-count > 4)
        (goal MAPTYPE LANDMAP)
    )
    (wood-amount > 300)
    (food-amount < 750)
    (gold-amount < 350)
    (can-sell-commodity wood)
=>
    (sell-commodity wood)
;;    (chat-local-to-self "市場で木を売ります(城主進化)")
)
;   城主(標準)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (food-amount < 800)
    (gold-amount > 600)
    (commodity-buying-price food <= 145)
    (can-buy-commodity food)
=>
    (buy-commodity food)
;;    (chat-local-to-self "市場で食料を買います")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (wood-amount < 100)
    (gold-amount > 350)
    (unit-type-count-total 123 < 3)
    (unit-type-count-total 218 < 3)
    (can-buy-commodity wood)
=>
    (buy-commodity wood)
;;    (chat-local-to-self "市場で木を買います")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (food-amount > 1100)
    (gold-amount < 730)
    (commodity-selling-price food >= 70)
    (can-sell-commodity food)
=>
    (sell-commodity food)
;;    (chat-local-to-self "市場で食料を売ります")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (wood-amount > 1000)
    (gold-amount < 100)
    (can-sell-commodity wood)
=>
    (sell-commodity wood)
;;    (chat-local-to-self "市場で木を売ります")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (wood-amount > 1500)
    (gold-amount < 5000)
    (can-sell-commodity wood)
=>
    (sell-commodity wood)
;;    (chat-local-to-self "市場で木を売ります")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (food-amount > 1600)
    (gold-amount < 5000)
    (can-sell-commodity food)
=>
    (sell-commodity food)
;;    (chat-local-to-self "市場で食料を売ります")
)
(defrule
    (current-age >= castle-age)
    (goal RESEARCH_ARCHER TRUE)
    (current-age-time > 180)
    (food-amount > 1100)
    (gold-amount < 5000)
    (can-sell-commodity food)
=>
    (sell-commodity food)
;;    (chat-local-to-self "市場で食料を売ります")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (unit-type-count-total 579 == 0)
    (unit-type-count-total 581 == 0)
    (wood-amount > 1000)
    (gold-amount < 300)
    (can-sell-commodity wood)
=>
    (sell-commodity wood)
;;    (chat-local-to-self "市場で木を売ります")
)
(defrule
    (current-age >= castle-age)
    (current-age-time > 180)
    (unit-type-count-total 579 == 0)
    (unit-type-count-total 581 == 0)
    (food-amount > 1500)
    (gold-amount < 300)
    (can-sell-commodity food)
=>
    (sell-commodity food)
;;    (chat-local-to-self "市場で食料を売ります")
)
;   遠投のため
(defrule
    (current-age == imperial-age)
    (current-age-time > 180)
    (building-type-count castle > 0)
    (unit-type-count-total trebuchet == 0)
    (unit-type-count-total 42 == 0)
    (wood-amount > 800)
    (gold-amount < 200)
    (can-sell-commodity food)
=>
    (sell-commodity food)
;;    (chat-local-to-self "市場で食料を売ります")
)
(defrule
    (current-age == imperial-age)
    (current-age-time > 180)
    (building-type-count castle > 0)
    (unit-type-count-total trebuchet == 0)
    (unit-type-count-total 42 == 0)
    (wood-amount > 800)
    (gold-amount < 200)
    (can-sell-commodity wood)
=>
    (sell-commodity wood)
;;    (chat-local-to-self "市場で木を売ります")
)

; -----------------------
; ■ 町の人、漁船管理 ■
; -----------------------
;   暗黒(22人まで)
(defrule
    (current-age == dark-age)
    (or
        (research-completed ri-loom)
        (or
            (building-type-count mill == 0)
            (building-type-count lumber-camp == 0)
        )
    )
    (unit-type-count-total villager < 22)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(暗黒時代)")
)
;   暗黒(追加24人まで)
(defrule
    (current-age == dark-age)
    (goal MAPTYPE LANDMAP)
    (food-amount < 500)
    (research-completed ri-loom)
    (unit-type-count-total villager < 24)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(暗黒時代:追加)")
)
;   領主(60人まで)
(defrule
    (current-age == feudal-age)
    (not (can-research castle-age))
    (goal MAPTYPE SEAMAP)
    (research-completed ri-double-bit-axe)
    (unit-type-count-total villager < 60)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(領主時代)")
)
(defrule
    (current-age == feudal-age)
    (not (can-research castle-age))
    (goal MAPTYPE LANDMAP)
    (or
        (and
            (research-completed ri-double-bit-axe)
            (unit-type-count-total villager < 32)
        )
        (and
            (or
                (goal RESEARCH ri-wheel-barrow)
                (not (can-research ri-wheel-barrow))
            )
            (unit-type-count-total villager < 60)
        )
    )
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(領主時代)")
)
;   城主(70人まで)
(defrule
    (current-age == castle-age)
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (or
        (goal RESEARCH ri-wheel-barrow)
        (building-type-count town-center == 1)
    )
    (unit-type-count-total villager < 50)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(城主時代:1)")
)
(defrule
    (current-age == castle-age)
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (population < POP-80)
    (goal RESEARCH ri-wheel-barrow)
    (building-type-count town-center > 1)
    (unit-type-count-total villager < 70)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(城主時代:2)")
)
;   帝王(70人まで)
(defrule
    (current-age == imperial-age)
    (unit-type-count-total villager < 50)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(帝王時代:1)")
)
(defrule
    (current-age == imperial-age)
    (unit-type-count-total villager < 100)
    (population < POP-80)
    (can-train villager)
=>
    (train villager)
;;     (chat-local-to-self "町の人を生産します(帝王時代:2)")
)
(defrule
    (population >= POP-100)
    (unit-type-count-total fishing-ship == 0)
    (unit-type-count-total villager > 60)
=>
    (delete-unit fishing-ship)
;    (chat-local-to-self "町の人を自殺させます")
)
;   暗黒(9隻まで)
(defrule
    (current-age == dark-age)
    (or
        (building-type-count-total mill > 1)
        (wood-amount > 100)
    )
    (unit-type-count-total fishing-ship < 9)
    (can-train fishing-ship)
=>
    (train fishing-ship)
;;    (chat-local-to-self "漁船を生産します")
)
;   領主(14隻まで)
(defrule
    (not (goal CASTLE_AGE_FLAG TRUE))
    (dropsite-min-distance gold <= 5)
    (or
        (warboat-count >= 7)
        (gold-amount < 30)
    )
    (or
        (players-unit-type-count every-enemy galley < 3)
        (warboat-count >= 15)
    )
    (unit-type-count-total fishing-ship < 12)
    (can-train fishing-ship)
=>
    (train fishing-ship)
;;    (chat-local-to-self "漁船を生産します")
)
(defrule
    (population >= POP-100)
    (unit-type-count-total fishing-ship > 0)
=>
    (delete-unit fishing-ship)
;;    (chat-local-to-self "漁船を沈没させます")
)

; -----------------------
; ■ 資源調整 ■
; -----------------------
;   暗黒(標準)
(defrule
    (true)
=>
    (set-strategic-number sn-wood-gatherer-percentage   0)
    (set-strategic-number sn-food-gatherer-percentage   0)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (disable-self)
)
(defrule
    (game-time > 15)
=>
    (set-strategic-number sn-wood-gatherer-percentage   0)
    (set-strategic-number sn-food-gatherer-percentage 100)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (disable-self)
)
(defrule
    (unit-type-count villager > 7)
=>
    (set-strategic-number sn-wood-gatherer-percentage  30)
    (set-strategic-number sn-food-gatherer-percentage  70)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage  0)
;;    (chat-local-to-self "資源調整をします(木を確保)")
    (disable-self)
)
(defrule
    (goal MAPTYPE LANDMAP)
    (unit-type-count villager > 22)
=>
    (set-strategic-number sn-wood-gatherer-percentage  10)
    (set-strategic-number sn-food-gatherer-percentage  90)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage  0)
;;    (chat-local-to-self "資源調整をします(陸進化切り替え)")
    (disable-self)
)
;   暗黒→領主(標準)
(defrule
    (goal FEUDAL_AGE_FLAG TRUE)
    (goal MAPTYPE SEAMAP)
=>
    (set-strategic-number sn-wood-gatherer-percentage  90)
    (set-strategic-number sn-food-gatherer-percentage  10)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage  0)
;;    (chat-local-to-self "資源調整をします(木を確保)")
    (disable-self)
)
;   暗黒→領主(標準)
(defrule
    (goal FEUDAL_AGE_FLAG TRUE)
    (goal MAPTYPE LANDMAP)
=>
    (set-strategic-number sn-wood-gatherer-percentage  55)
    (set-strategic-number sn-food-gatherer-percentage  35)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage  0)
;;    (chat-local-to-self "資源調整をします(木を確保)")
    (disable-self)
)
;   領主(標準)
(defrule
    (goal MAPTYPE SEAMAP)
    (current-age == feudal-age)
    (building-type-count-total market > 0)
    (goal STRATEGY NEXTAGE)
    (sheep-and-forage-too-far)
    (not (goal RESOURCE NO_FOOD))
=>
    (set-strategic-number sn-wood-gatherer-percentage  65)
    (set-strategic-number sn-food-gatherer-percentage   5)
    (set-strategic-number sn-gold-gatherer-percentage  30)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (set-goal RESOURCE NO_FOOD)
;;    (chat-local-to-self "資源調整をします(進化優先:飯なし)")
)
(defrule
    (goal MAPTYPE SEAMAP)
    (current-age == feudal-age)
    (building-type-count-total market > 0)
    (goal STRATEGY NEXTAGE)
    (not (sheep-and-forage-too-far))
    (not (goal RESOURCE NEED_FOOD))
=>
    (set-strategic-number sn-wood-gatherer-percentage  55)
    (set-strategic-number sn-food-gatherer-percentage  25)
    (set-strategic-number sn-gold-gatherer-percentage  20)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (set-goal RESOURCE NEED_FOOD)
;;    (chat-local-to-self "資源調整をします(進化優先:飯あり)")
)
(defrule
    (goal MAPTYPE SEAMAP)
    (current-age == feudal-age)
    (or
        (building-type-count-total market == 0)
        (goal STRATEGY ATTACK)
    )
    (not (goal RESOURCE NEED_ATTACK))
=>
    (set-strategic-number sn-wood-gatherer-percentage  70)
    (set-strategic-number sn-food-gatherer-percentage   5)
    (set-strategic-number sn-gold-gatherer-percentage  25)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (set-goal RESOURCE NEED_ATTACK)
;;    (chat-local-to-self "資源調整をします(攻撃優先)")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (current-age == feudal-age)
    (building-type-count-total blacksmith > 0)
    (unit-type-count-total villager < 35)
    (wood-amount > 220)
    (gold-amount < 180)
    (not (goal RESOURCE NEED_ATTACK))
=>
    (set-strategic-number sn-wood-gatherer-percentage  46)
    (set-strategic-number sn-food-gatherer-percentage  25)
    (set-strategic-number sn-gold-gatherer-percentage  27)
    (set-strategic-number sn-stone-gatherer-percentage  2)
    (set-goal RESOURCE NEED_ATTACK)
    (chat-local-to-self "資源調整をします(金を確保)")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (current-age == feudal-age)
    (building-type-count-total blacksmith > 0)
    (unit-type-count-total villager < 35)
    (wood-amount < 150)
    (not (goal RESOURCE NO_FOOD))
=>
    (set-strategic-number sn-wood-gatherer-percentage  63)
    (set-strategic-number sn-food-gatherer-percentage  25)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage  2)
    (set-goal RESOURCE NO_FOOD)
    (chat-local-to-self "資源調整をします(木を確保)")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (current-age == feudal-age)
    (building-type-count-total blacksmith > 0)
    (unit-type-count-total villager < 35)
    (wood-amount > 230)
    (gold-amount > 200)
    (not (goal RESOURCE NEED_FOOD))
=>
    (set-strategic-number sn-wood-gatherer-percentage  33)
    (set-strategic-number sn-food-gatherer-percentage  55)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage  2)
    (set-goal RESOURCE NEED_FOOD)
    (chat-local-to-self "資源調整をします(食料を確保)")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (current-age == feudal-age)
    (building-type-count-total blacksmith > 0)
    (unit-type-count-total villager >= 35)
    (wood-amount > 220)
    (gold-amount < 180)
    (not (goal RESOURCE NEED_ATTACK2))
=>
    (set-strategic-number sn-wood-gatherer-percentage  27)
    (set-strategic-number sn-food-gatherer-percentage  45)
    (set-strategic-number sn-gold-gatherer-percentage  23)
    (set-strategic-number sn-stone-gatherer-percentage  5)
    (set-goal RESOURCE NEED_ATTACK2)
    (chat-local-to-self "資源調整をします(金を確保:35)")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (current-age == feudal-age)
    (building-type-count-total blacksmith > 0)
    (unit-type-count-total villager >= 35)
    (wood-amount < 150)
    (not (goal RESOURCE NO_FOOD2))
=>
    (set-strategic-number sn-wood-gatherer-percentage  50)
    (set-strategic-number sn-food-gatherer-percentage  35)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage  5)
    (set-goal RESOURCE NO_FOOD2)
    (chat-local-to-self "資源調整をします(木を確保:35)")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (current-age == feudal-age)
    (building-type-count-total blacksmith > 0)
    (unit-type-count-total villager >= 35)
    (wood-amount > 230)
    (gold-amount > 200)
    (not (goal RESOURCE NEED_FOOD2))
=>
    (set-strategic-number sn-wood-gatherer-percentage  25)
    (set-strategic-number sn-food-gatherer-percentage  55)
    (set-strategic-number sn-gold-gatherer-percentage  15)
    (set-strategic-number sn-stone-gatherer-percentage  5)
    (set-goal RESOURCE NEED_FOOD2)
    (chat-local-to-self "資源調整をします(食料を確保:30)")
)
;   城主(タイマー)
(defrule
    (goal CASTLE_AGE_FLAG TRUE)
=>
    (enable-timer TIMER_RESOURCE 1)
;;    (chat-local-to-self "以後、時間を置いて資源を調べ管理します")
    (disable-self)
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (game-time > 3600)
    (dropsite-min-distance gold > 5)
    (dropsite-min-distance stone <= 5)
=>
    (set-strategic-number sn-wood-gatherer-percentage  45)
    (set-strategic-number sn-food-gatherer-percentage  40)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 30)
;;    (chat-local-to-self "資源調整をします(資源金なし)")
)
;   城主(タイマー)
(defrule
    (goal CASTLE_AGE_FLAG TRUE)
=>
    (enable-timer TIMER_RESOURCE 1)
;;    (chat-local-to-self "以後、時間を置いて資源を調べ管理します")
    (disable-self)
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (game-time > 3600)
    (dropsite-min-distance gold > 5)
    (dropsite-min-distance stone <= 5)
=>
    (set-strategic-number sn-wood-gatherer-percentage  45)
    (set-strategic-number sn-food-gatherer-percentage  40)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 30)
;;    (chat-local-to-self "資源調整をします(資源金なし)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (game-time > 3600)
    (dropsite-min-distance gold > 5)
    (dropsite-min-distance stone > 5)
=>
    (set-strategic-number sn-wood-gatherer-percentage  60)
    (set-strategic-number sn-food-gatherer-percentage  40)
    (set-strategic-number sn-gold-gatherer-percentage   0)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (enable-timer TIMER_RESOURCE 30)
;;    (chat-local-to-self "資源調整をします(資源金、石なし)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (current-age < castle-age)
    (wood-amount > 600)
    (dropsite-min-distance stone > 5)
=>
    (set-strategic-number sn-wood-gatherer-percentage  65)
    (set-strategic-number sn-food-gatherer-percentage  20)
    (set-strategic-number sn-gold-gatherer-percentage  15)
    (set-strategic-number sn-stone-gatherer-percentage  0)
    (enable-timer TIMER_RESOURCE 30)
;;    (chat-local-to-self "資源調整をします(木を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count-total castle == 0)
    (dropsite-min-distance stone <= 5)
    (wood-amount > 600)
    (stone-amount < 500)
=>
    (set-strategic-number sn-wood-gatherer-percentage  30)
    (set-strategic-number sn-food-gatherer-percentage  20)
    (set-strategic-number sn-gold-gatherer-percentage  25)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料と金を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count-total castle == 0)
    (dropsite-min-distance stone <= 5)
    (wood-amount > 600)
    (gold-amount > 300)
    (stone-amount < 500)
=>
    (set-strategic-number sn-wood-gatherer-percentage  30)
    (set-strategic-number sn-food-gatherer-percentage  40)
    (set-strategic-number sn-gold-gatherer-percentage  15)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count-total castle == 0)
    (dropsite-min-distance stone <= 5)
    (wood-amount > 600)
    (stone-amount < 500)
=>
    (set-strategic-number sn-wood-gatherer-percentage  30)
    (set-strategic-number sn-food-gatherer-percentage  20)
    (set-strategic-number sn-gold-gatherer-percentage  25)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料と金を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count-total castle == 0)
    (dropsite-min-distance stone <= 5)
    (wood-amount < 300)
    (gold-amount > 200)
    (stone-amount < 500)
=>
    (set-strategic-number sn-wood-gatherer-percentage  60)
    (set-strategic-number sn-food-gatherer-percentage  15)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(木を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count-total castle == 0)
    (dropsite-min-distance stone <= 5)
    (stone-amount < 500)
=>
    (set-strategic-number sn-wood-gatherer-percentage  55)
    (set-strategic-number sn-food-gatherer-percentage  10)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage 15)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(石を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount > 500)
    (food-amount < 800)
    (gold-amount < 600)
=>
    (set-strategic-number sn-wood-gatherer-percentage  15)
    (set-strategic-number sn-food-gatherer-percentage  40)
    (set-strategic-number sn-gold-gatherer-percentage  35)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(木が多い)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount < 200)
    (food-amount > 800)
    (gold-amount < 400)
=>
    (set-strategic-number sn-wood-gatherer-percentage  50)
    (set-strategic-number sn-food-gatherer-percentage  10)
    (set-strategic-number sn-gold-gatherer-percentage  30)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料が多い)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount < 200)
    (food-amount < 800)
    (gold-amount > 600)
=>
    (set-strategic-number sn-wood-gatherer-percentage  50)
    (set-strategic-number sn-food-gatherer-percentage  30)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(金が多い)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount > 500)
    (food-amount < 800)
    (gold-amount > 600)
=>
    (set-strategic-number sn-wood-gatherer-percentage  20)
    (set-strategic-number sn-food-gatherer-percentage  50)
    (set-strategic-number sn-gold-gatherer-percentage  20)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料だけ少ない)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount > 500)
    (food-amount > 800)
    (gold-amount < 600)
=>
    (set-strategic-number sn-wood-gatherer-percentage  20)
    (set-strategic-number sn-food-gatherer-percentage  30)
    (set-strategic-number sn-gold-gatherer-percentage  40)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(金だけ少ない)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count farm < 20)
    (wood-amount < 200)
=>
    (set-strategic-number sn-wood-gatherer-percentage  50)
    (set-strategic-number sn-food-gatherer-percentage  20)
    (set-strategic-number sn-gold-gatherer-percentage  20)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(木を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (building-type-count farm >= 20)
    (wood-amount < 150)
=>
    (set-strategic-number sn-wood-gatherer-percentage  45)
    (set-strategic-number sn-food-gatherer-percentage  25)
    (set-strategic-number sn-gold-gatherer-percentage  20)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(木を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount > 300)
    (gold-amount < 100)
=>
    (set-strategic-number sn-wood-gatherer-percentage  35)
    (set-strategic-number sn-food-gatherer-percentage  25)
    (set-strategic-number sn-gold-gatherer-percentage  30)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(金を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (wood-amount < 200)
    (gold-amount < 100)
=>
    (set-strategic-number sn-wood-gatherer-percentage  45)
    (set-strategic-number sn-food-gatherer-percentage  15)
    (set-strategic-number sn-gold-gatherer-percentage  30)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(木と金を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (food-amount < 200)
    (gold-amount > 300)
=>
    (set-strategic-number sn-wood-gatherer-percentage  30)
    (set-strategic-number sn-food-gatherer-percentage  50)
    (set-strategic-number sn-gold-gatherer-percentage  10)
    (set-strategic-number sn-stone-gatherer-percentage 10)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
    (food-amount < 200)
    (gold-amount < 100)
=>
    (set-strategic-number sn-wood-gatherer-percentage  30)
    (set-strategic-number sn-food-gatherer-percentage  45)
    (set-strategic-number sn-gold-gatherer-percentage  20)
    (set-strategic-number sn-stone-gatherer-percentage  5)
    (enable-timer TIMER_RESOURCE 60)
;;    (chat-local-to-self "資源調整をします(食料と金を確保)")
)
(defrule
    (timer-triggered TIMER_RESOURCE)
=>
    (enable-timer TIMER_RESOURCE 20)
)

; -----------------------
; ■ 建築管理 ■
; -----------------------
;   町の中心
(defrule
    (goal BUILDING TRUE)
    (resource-found wood)
    (building-type-count-total town-center < 2)
    (can-build town-center)
=>
    (set-strategic-number sn-minimum-town-size 20)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 10)
    (build town-center)
    (chat-local-to-self "町の中心を建てます")
)
(defrule
    (goal BUILDING TRUE)
    (wood-amount > 1000)
    (building-type-count castle > 0)
    (building-type-count-total town-center == 2)
    (can-build town-center)
=>
    (set-strategic-number sn-minimum-town-size 24)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 10)
    (build town-center)
    (chat-local-to-self "町の中心を建てます")
)
(defrule
    (goal BUILDING TRUE)
    (wood-amount > 800)
    (dropsite-min-distance stone > 10)
    (building-type-count-total town-center < 5)
    (can-build town-center)
=>
    (set-strategic-number sn-minimum-town-size 30)
    (set-strategic-number sn-maximum-town-size 35)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 10)
    (build town-center)
    (chat-local-to-self "町の中心を建てます")
)
;   家
(defrule
    (current-age >= dark-age)
    (population-headroom > 0)
    (housing-headroom < 5)
    (can-build house)
=>
    (build house)
;;     (chat-local-to-self "家を建てます(5)")
)
(defrule
    (current-age >= feudal-age)
    (population-headroom > 0)
    (housing-headroom < 8)
    (can-build house)
=>
    (build house)
;;     (chat-local-to-self "家を建てます(5)")
)
;   粉ひき所
(defrule
    (game-time > 45)
    (or
        (housing-headroom > 3)
        (wood-amount >= 130)
    )
    (or
        (building-type-count lumber-camp > 0)
        (or
            (and
                (unit-type-count 594 == 0)  ;958
                (unit-type-count 833 == 0)
            )
            (sheep-and-forage-too-far)
        )
    )
    (building-type-count-total mill == 0)
    (resource-found food)
    (can-build mill)
=>
    (build mill)
    (chat-local-to-self "3 食料を獲得するため粉ひき所を建てます")
)
#load-if-defined SCANDANAVIA-MAP
(defrule
    (game-time > 45)
    (sheep-and-forage-too-far)
    (or
        (housing-headroom > 3)
        (wood-amount >= 130)
    )
    (building-type-count-total mill == 0)
    (can-build mill)
=>
    (build mill)
    (chat-local-to-self "3 食料を獲得するため粉ひき所を建てます(スカンジナビア)")
    (disable-self)
)
#end-if
#load-if-defined YUCATAN-MAP
(defrule
    (unit-type-count villager > 15)
    (building-type-count lumber-camp > 0)
    (building-type-count-total mill == 1)
    (or
        (housing-headroom >= 5)
        (wood-amount >= 130)
    )
    (resource-found food)
    (can-build mill)
=>
    (chat-local-to-self "3 食料を獲得するため粉ひき所を建てます(ユカタン)")
    (build mill)
    (disable-self)
)
#end-if
;; (defrule
;;     (or
;;         (unit-type-count 216 > 0)
;;         (unit-type-count 122 > 0)
;;     )
;;     (building-type-count-total lumber-camp > 0)
;;     (building-type-count-total mill == 1)
;;     (can-build mill)
;; =>
;;     (build mill)
;;     (chat-local-to-self "3 食料を獲得するため粉ひき所を建てます(刈り)")
;;     (disable-self)
;; )
;   伐採所(１つ目)
(defrule
    (unit-type-count-total villager > 10)
    (or
        (housing-headroom > 3)
        (wood-amount >= 130)
    )
    (or
        (building-type-count mill > 0)
        (or
            (unit-type-count 594 > 5)  ;958
            (unit-type-count 833 > 5)
        )
    )
    (building-type-count-total lumber-camp == 0)
    (can-build lumber-camp)
=>
    (set-goal DISTANCE lumber-camp)
    (set-strategic-number sn-camp-max-distance 12)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "4 最初の伐採所を建てます(１つ目)")
)
;   伐採所(30分以内:距離)
(defrule
    (goal DISTANCE TRUE)
    (building-type-count lumber-camp < 3)
    (dropsite-min-distance wood > 5)
    (can-build lumber-camp)
=>
    (set-goal DISTANCE lumber-camp)
    (set-strategic-number sn-camp-max-distance 18)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "4 森が遠くにあるので伐採所を建てます:25")
)
;   伐採所(30〜60分:距離)
(defrule
    (goal DISTANCE TRUE)
    (building-type-count lumber-camp < 5)
    (dropsite-min-distance wood > 5)
    (can-build lumber-camp)
=>
    (set-goal DISTANCE lumber-camp)
    (set-strategic-number sn-camp-max-distance 30)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "4 森が遠くにあるので伐採所を建てます:30")
)
;   伐採所(60〜120分:距離)
(defrule
    (goal DISTANCE TRUE)
    (building-type-count lumber-camp < 9)
    (dropsite-min-distance wood > 5)
    (can-build lumber-camp)
=>
    (set-goal DISTANCE lumber-camp)
    (set-strategic-number sn-camp-max-distance 60)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "4 森が遠くにあるので伐採所を建てます:60")
)
;   伐採所(120分以上:距離)
(defrule
    (goal DISTANCE TRUE)
    (building-type-count lumber-camp >= 9)
    (dropsite-min-distance wood > 5)
    (goal ARMY_ATTACK TRUE)
    (can-build lumber-camp)
=>
    (set-goal DISTANCE lumber-camp)
    (set-strategic-number sn-camp-max-distance 999)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "4 森が遠くにあるので伐採所を建てます:999")
)
(defrule
    (resource-found wood)
    (goal DISTANCE lumber-camp)
    (can-build lumber-camp)
=>
    (chat-local-to-self "伐採所を作成")
    (build lumber-camp)
)
;   伐採所削除
(defrule
    (current-age >= castle-age)
    (building-type-count lumber-camp >= 4)
=>
    (delete-unit lumber-camp)
    (chat-local-to-self "7 場所確保のため伐採所を削除します")
    (disable-self)
)
;   採掘所(暗黒〜領主:金を確保)
(defrule
    (goal DISTANCE TRUE)
    (goal MAPTYPE LANDMAP)
    (building-type-count-total barracks > 0)
    (dropsite-min-distance gold > 5)
    (building-type-count-total mining-camp < 3)
    (can-build mining-camp)
=>
    (set-goal DISTANCE mining-camp)
    (set-strategic-number sn-camp-max-distance 20)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 採掘所(金)を建てます")
)
;   採掘所(領主:金を確保)
(defrule
    (goal DISTANCE TRUE)
    (current-age == feudal-age)
    (building-type-count-total dock > 1)
    (dropsite-min-distance gold > 5)
    (building-type-count-total mining-camp < 3)
    (can-build mining-camp)
=>
    (set-goal DISTANCE mining-camp)
    (set-strategic-number sn-camp-max-distance 20)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 採掘所(金)を建てます")
)
;   採掘所(60分以内:余剰回避 -金-)
(defrule
    (goal DISTANCE TRUE)
    (game-time < 3600)
    (wood-amount > 500)
    (dropsite-min-distance gold <= 5)
    (unit-type-count-total 579 > 8)
    (unit-type-count-total 581 > 8)
    (building-type-count-total mining-camp < 5)
    (can-build mining-camp)
=>
    (set-goal DISTANCE mining-camp)
    (set-strategic-number sn-camp-max-distance 40)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 採掘所(金)を建てます")
)
;   採掘所(40分以内:危機回避 -金-)
(defrule
    (goal DISTANCE TRUE)
    (current-age >= feudal-age)
    (game-time < 2400)
    (dropsite-min-distance gold <= 5)
    (unit-type-count-total villager >= 25)
    (unit-type-count-total 579 == 0)
    (unit-type-count-total 581 == 0)
    (resource-found gold)
    (building-type-count-total mining-camp < 6)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 30)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 金が確保できてないので採掘所を建てます:30")
)
;   採掘所(40〜90分:危機回避 -金-)
(defrule
    (goal DISTANCE TRUE)
    (game-time < 2400)
    (game-time >= 5400)
    (dropsite-min-distance gold <= 5)
    (unit-type-count-total 579 < 2)
    (unit-type-count-total 581 < 2)
    (resource-found gold)
    (building-type-count-total mining-camp < 8)
    (unit-type-count-total villager > 30)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 60)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 金が確保できてないので採掘所を建てます:60")
)
;   採掘所(90分以上:危機回避 -金-)
(defrule
    (goal DISTANCE TRUE)
    (game-time >= 5400)
    (goal ARMY_ATTACK TRUE)
    (dropsite-min-distance gold <= 5)
    (unit-type-count-total 579 < 3)
    (unit-type-count-total 581 < 3)
    (resource-found gold)
    (unit-type-count-total villager > 30)
    (building-type-count-total mining-camp < 15)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 999)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 金が確保できてないので採掘所を建てます:999")
)
;   採掘所(40分以内:距離 -金-)
(defrule
    (goal DISTANCE TRUE)
    (current-age >= feudal-age)
    (game-time < 2400)
    (dropsite-min-distance gold > 5)
    (resource-found gold)
    (building-type-count-total mining-camp < 6)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 30)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 金が遠くにあるので、採掘所を建てます:30")
)
;   採掘所(40〜90分以内:距離 -金-)
(defrule
    (goal DISTANCE TRUE)
    (game-time >= 2400)
    (game-time < 5400)
    (dropsite-min-distance gold > 5)
    (resource-found gold)
    (building-type-count-total mining-camp < 8)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 60)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 金が遠くにあるので、採掘所を建てます:60")
)
;   採掘所(90分以上:距離 -金-)
(defrule
    (goal DISTANCE TRUE)
    (game-time >= 5400)
    (goal ARMY_ATTACK TRUE)
    (dropsite-min-distance gold > 5)
    (resource-found gold)
    (building-type-count-total mining-camp < 18)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 999)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "5 金が遠くにあるので、採掘所を建てます:999")
)
;   採掘所(領主:石を確保)
(defrule
    (goal DISTANCE TRUE)
    (goal FEUDAL_AGE_FLAG TRUE)
    (goal MAPTYPE LANDMAP)
    (dropsite-min-distance stone > 5)
    (building-type-count-total blacksmith > 0)
    (building-type-count-total mining-camp < 3)
    (can-build mining-camp)
=>
    (set-goal DISTANCE mining-camp)
    (set-strategic-number sn-camp-max-distance 30)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "6 採掘所(石)を建てます")
)
;   採掘所(領主→城主:石を確保)
(defrule
    (goal DISTANCE TRUE)
    (goal CASTLE_AGE_FLAG TRUE)
    (dropsite-min-distance stone > 5)
    (building-type-count-total mining-camp < 6)
    (or
        (building-type-count-total castle == 0)
        (stone-amount < 650)
    )
    (can-build mining-camp)
=>
    (set-goal DISTANCE mining-camp)
    (set-strategic-number sn-camp-max-distance 30)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "6 採掘所(石)を建てます")
)
;   採掘所(城主:危機回避 -石-)
(defrule
    (goal DISTANCE TRUE)
    (current-age >= castle-age)
    (strategic-number sn-stone-gatherer-percentage > 0)
    (unit-type-count-total 124 == 0)
    (unit-type-count-total 220 == 0)
    (building-type-count-total mining-camp < 6)
    (or
        (building-type-count-total castle == 0)
        (stone-amount < 650)
    )
    (unit-type-count-total villager > 25)
    (can-build mining-camp)
=>
    (set-strategic-number sn-camp-max-distance 60)
    (set-goal DISTANCE mining-camp)
    (enable-timer TIMER_DISTANCE 2)
    (chat-local-to-self "6 石が確保できてないので採掘所を建てます。")
)
(defrule
    (or
        (resource-found gold)
        (resource-found stone)
    )
    (goal DISTANCE mining-camp)
    (can-build mining-camp)
=>
    (chat-local-to-self "採掘所を作成")
    (build mining-camp)
)
;   港(１つ目:暗黒)
(defrule
    (not (goal MAPTYPE LANDMAP))
    (building-type-count mill > 0)
    (building-type-count lumber-camp > 0)
    (building-type-count dock == 0)
    (can-build dock)
=>
    (build dock)
    (chat-local-to-self "29 港を建設します(１つ目)")
)
;   港(２つ目:暗黒→領主)
(defrule
    (not (goal MAPTYPE LANDMAP))
    (goal FEUDAL_AGE_FLAG TRUE)
    (building-type-count-total dock < 2)
    (can-build dock)
=>
    (build dock)
    (chat-local-to-self "29 港を建設します(２つ目)")
)
;   港(３つ目:敵海軍発見)
(defrule
    (not (goal MAPTYPE LANDMAP))
    (goal FEUDAL_AGE_FLAG TRUE)
    (building-type-count blacksmith > 0)
    (building-type-count market > 0)
    (players-building-type-count any-enemy dock > 1)
    (players-unit-type-count any-enemy galley-line > 0)
    (building-type-count-total dock < 3)
    (can-build dock)
=>
    (build dock)
    (chat-local-to-self "29 港を建設します(３つ目)")
)
;   畑(暗黒:予備)
(defrule
    (not (goal FEUDAL_AGE_FLAG TRUE))
    (not (resource-found food))
    (sheep-and-forage-too-far)
    (building-type-count-total farm < 5)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(５枚まで)")
)
;   畑(暗黒:陸進化)
(defrule
    (not (goal FEUDAL_AGE_FLAG TRUE))
    (goal MAPTYPE LANDMAP)
    (building-type-count-total farm < 16)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(１６枚まで)")
)
;   畑(領主:予備)
(defrule
    (current-age == feudal-age)
    (not (goal CASTLE_AGE_FLAG TRUE))
    (building-type-count blacksmith > 0)
    (building-type-count market > 0)
    (wood-amount > 180)
    (idle-farm-count == 0)
    (building-type-count-total farm < 5)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(５枚まで)")
)
;   畑(領主:陸進化)
(defrule
    (current-age ==  feudal-age)
    (goal MAPTYPE LANDMAP)
    (building-type-count-total blacksmith > 0)
    (idle-farm-count < 2)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(陸戦標準)")
)
;   畑(領主:畑)
(defrule
    (goal MAPTYPE LANDMAP)
    (research-completed ri-horse-collar)
    (wood-amount > 300)
    (building-type-count-total farm < 24)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(２４枚まで)")
)
;   畑(領主→城主)
(defrule
    (current-age == feudal-age)
    (goal CASTLE_AGE_FLAG TRUE)
    (wood-amount > 600)
    (building-type-count-total farm < 12)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(１２枚まで)")
)
;   畑(城主:第１期)
(defrule
    (current-age >= castle-age)
    (or
        (wood-amount > 500)
        (food-amount < 50)
    )
    (building-type-count-total farm < 8)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(８枚まで)")
)
;   畑(城主:第２期)
(defrule
    (current-age <= castle-age)
    (wood-amount > 300)
    (building-type-count town-center > 1)
    (research-completed ri-horse-collar)
    (building-type-count-total farm < 16)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(１６枚まで)")
)
;   畑(城主:第３期)
(defrule
    (current-age >= castle-age)
    (wood-amount > 300)
    (building-type-count town-center > 1)
    (research-completed ri-gold-mining)
    (research-completed ri-heavy-plow)
    (building-type-count-total farm < 28)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(２８枚まで)")
)
;   畑(城主:第４期)
(defrule
    (current-age >= castle-age)
    (or
        (wood-amount > 500)
        (idle-farm-count == 0)
    )
    (building-type-count town-center > 1)
    (building-type-count-total farm < 32)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(３２枚まで)")
)
;   畑(帝王)
(defrule
    (current-age == imperial-age)
    (idle-farm-count == 0)
    (can-build farm)
=>
    (build farm)
;;    (chat-local-to-self "畑を耕します(帝王)")
)
;   戦士育成所
(defrule
    (goal BUILDING TRUE)
    (goal FEUDAL_AGE_FLAG TRUE)
    (goal MAPTYPE LANDMAP)
    (building-type-count-total barracks == 0)
    (can-build barracks)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build barracks)
    (chat-local-to-self "29 戦士育成所を建てます(陸戦)")
)
(defrule
    (goal BUILDING TRUE)
    (goal MAPTYPE LANDMAP)
    (not (goal CASTLE_AGE_FLAG TRUE))
    (building-type-count-total archery-range < 2)
    (can-build archery-range)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 12)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build archery-range)
    (chat-local-to-self "29 射手育成所を建てます(陸戦)")
)
(defrule
    (goal BUILDING TRUE)
    (goal MAPTYPE LANDMAP)
    (players-unit-type-count any-enemy skirmisher-line < 3)
    (not (goal CASTLE_AGE_FLAG TRUE))
    (wood-amount > 350)
    (building-type-count-total archery-range < 3)
    (can-build archery-range)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 12)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build archery-range)
    (chat-local-to-self "29 射手育成所を建てます(陸戦)")
)
;   鉄工所
(defrule
    (goal BUILDING TRUE)
    (or
        (goal MAPTYPE SEAMAP)
        (building-type-count-total archery-range > 1)
    )
    (building-type-count-total blacksmith == 0)
    (can-build blacksmith)
=>
    (set-strategic-number sn-minimum-town-size 20)
    (set-strategic-number sn-maximum-town-size 35)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build blacksmith)
    (chat-local-to-self "29 鉄工所を建てます")
)
;   市場
(defrule
    (goal BUILDING TRUE)
    (goal MAPTYPE SEAMAP)
    (building-type-count-total market == 0)
    (can-build market)
=>
    (set-strategic-number sn-minimum-town-size 20)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build market)
    (chat-local-to-self "29 市場を建てます")
)
(defrule
    (goal BUILDING TRUE)
    (goal MAPTYPE LANDMAP)
    (wood-amount > 300)
    (building-type-count blacksmith > 0)
    (building-type-count-total market == 0)
    (can-build market)
=>
    (set-strategic-number sn-minimum-town-size 20)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build market)
    (chat-local-to-self "29 市場を建てます")
)
;   戦士育成所
(defrule
    (goal BUILDING TRUE)
    (warboat-count >= 7)
    (wood-amount > 265)
    (building-type-count-total barracks == 0)
    (can-build barracks)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build barracks)
    (chat-local-to-self "29 戦士育成所を建てます(防衛)")
)
;   神殿
(defrule
    (goal BUILDING TRUE)
    (or
        (building-type-count-total town-center > 1)
        (stone-amount < 100)
    )
    (building-type-count-total monastery == 0)
    (can-build monastery)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 15)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build monastery)
    (chat-local-to-self "29 神殿を建てます")
)
;   包囲攻撃訓練所
(defrule
    (goal BUILDING TRUE)
    (building-type-count-total town-center > 1)
    (building-type-count-total monastery > 0)
    (building-type-count-total siege-workshop == 0)
    (can-build siege-workshop)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build siege-workshop)
    (chat-local-to-self "29 包囲攻撃訓練所を建てます")
)
;   戦士育成所
(defrule
    (goal BUILDING TRUE)
    (goal ARMY_UNIT TRUE)
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (building-type-count-total monastery > 0)
    (building-type-count-total barracks == 0)
    (can-build barracks)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build barracks)
    (chat-local-to-self "29 戦士育成所を建てます(陸軍編成開始)")
)
(defrule
    (goal BUILDING TRUE)
    (goal ARMY_UNIT TRUE)
    (goal FORMATION_SOLDIER TRUE)
    (building-type-count-total monastery > 0)
    (building-type-count-total barracks == 1)
    (can-build barracks)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build barracks)
    (chat-local-to-self "29 戦士育成所を建てます(戦士系)")
)
(defrule
    (goal BUILDING TRUE)
    (goal ARMY_UNIT TRUE)
    (goal FORMATION_SOLDIER TRUE)
    (strategic-number sn-maximum-town-size >= 70)
    (building-type-count-total barracks < 4)
    (wood-amount > 500)
    (can-build barracks)
=>
    (build barracks)
    (chat-local-to-self "29 戦士育成所を建てます(前線)")
)
;   騎兵育成所
(defrule
    (goal BUILDING TRUE)
    (goal ARMY_UNIT TRUE)
    (goal FORMATION_SOLDIER FALSE)
    (building-type-count-total monastery > 0)
    (building-type-count-total stable == 0)
    (can-build stable)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build stable)
    (chat-local-to-self "29 騎兵育成所を建てます(陸軍編成開始)")
)
(defrule
    (goal BUILDING TRUE)
    (goal ARMY_UNIT TRUE)
    (goal FORMATION_SOLDIER FALSE)
    (building-type-count-total castle > 0)
    (building-type-count-total stable == 1)
    (can-build stable)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 20)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build stable)
    (chat-local-to-self "29 騎兵育成所を建てます(騎士系)")
)
(defrule
    (goal ARMY_UNIT TRUE)
    (goal FORMATION_SOLDIER FALSE)
    (strategic-number sn-maximum-town-size >= 70)
    (building-type-count-total stable < 4)
    (wood-amount > 500)
    (can-build stable)
=>
    (build stable)
    (chat-local-to-self "29 騎兵育成所を建てます(前線)")
)
;   学問所
(defrule
    (goal BUILDING TRUE)
    (goal ARMY_UNIT TRUE)
    (building-type-count-total monastery > 0)
    (building-type-count-total barracks > 0)
    (building-type-count-total castle > 1)
    (building-type-count-total siege-workshop > 0)
    (building-type-count-total university == 0)
    (can-build university)
=>
    (set-strategic-number sn-minimum-town-size 20)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build university)
    (chat-local-to-self "29 学門所を建てます")
)
(defrule
    (building-type-count castle > 2)
    (goal ARMY_ATTACK TRUE)
    (can-build castle)
=>
    (build castle)
    (chat-local-to-self "29 城を建てます")
)
(defrule
    (goal BUILDING TRUE)
    (or
        (building-type-count castle < 3)
        (town-under-attack)
    )
    (can-build castle)
=>
    (set-strategic-number sn-minimum-town-size 15)
    (set-strategic-number sn-maximum-town-size 26)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 20)
    (build castle)
    (chat-local-to-self "29 城を建てます")
)
;   前哨
(defrule
    (goal BUILDING TRUE)
    (research-completed ri-loom)
    (unit-type-count-total fishing-ship > 2)
    (can-build outpost)
=>
    (set-strategic-number sn-minimum-town-size 28)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 60)
    (build outpost)
    (chat-local-to-self "前哨を建てます(初期)")
    (disable-self)
)
(defrule
    (soldier-count > 5)
    (goal BUILDING TRUE)
    (goal ARMY_ATTACK FALSE)
    (town-under-attack)
    (building-type-count-total outpost < 6)
    (can-build outpost)
=>
    (set-strategic-number sn-minimum-town-size 28)
    (set-strategic-number sn-maximum-town-size 30)
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 15)
    (build outpost)
    (chat-local-to-self "前哨を建てます(初期)")
)
;   塔
(defrule
    (goal BUILDING TRUE)
    (goal MAPTYPE LANDMAP)
    (enemy-buildings-in-town)
    (building-type-count watch-tower-line < 5)
    (can-build watch-tower-line)
=>
    (build-forward watch-tower-line)
    (chat-local-to-self "23 前線に塔を建てます")
)
(defrule
    (goal BUILDING TRUE)
    (building-type-count town-center > 1)
    (building-type-count castle > 0)
    (building-type-count watch-tower-line < 5)
    (can-build watch-tower-line)
=>
    (build watch-tower-line)
    (chat-local-to-self "29 塔を建てます")
)
(defrule
    (current-age == feudal-age)
    (players-military-population every-enemy < 3)
    (players-building-count any-enemy > 2)
    (can-build watch-tower-line)
=>
    (build-forward watch-tower-line)
    (chat-local-to-self "23 前線に塔を建てます")
    (disable-self)
)
;   --- 城壁 ---
#load-if-not-defined AZTEC-CIV
#load-if-not-defined BYZANTINE-CIV
#load-if-not-defined CELTIC-CIV
#load-if-not-defined FRANKISH-CIV
#load-if-not-defined HUN-CIV
#load-if-not-defined JAPANESE-CIV
#load-if-not-defined PERSIAN-CIV
#load-if-not-defined TEUTONIC-CIV
#load-if-not-defined VIKING-CIV
(defrule
    (true)
=>
    (enable-wall-placement 2)
)
(defrule
    (goal NAVY_LEVEL BIG)
    (can-build-gate 2)
=>
    (build-gate 2)
)
(defrule
    (goal NAVY_LEVEL BIG)
    (building-type-count town-center > 1)
    (can-build-wall 2 stone-wall-line)
=>
    (build-wall 2 stone-wall-line)
)
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
#end-if
; -----------------------
; ■ テクノロジー管理 ■
; -----------------------
;   暗黒
(defrule
    (can-research ri-loom)
=>
    (research ri-loom)
    (chat-local-to-self "「機織り」を研究します")
)
(defrule
    (can-research feudal-age)
=>
    (set-goal FEUDAL_AGE_FLAG TRUE)
    (research feudal-age)
    (chat-local-to-self "30 領主の時代に進化します")
)
;   領主
(defrule
    (goal MAPTYPE LANDMAP)
    (can-research ri-town-watch)
=>
    (chat-local-to-self "「見張り」の研究を開始します")
    (research ri-town-watch)
)
(defrule
    (goal MAPTYPE LANDMAP)
    (research-completed ri-double-bit-axe)
    (can-research ri-wheel-barrow)
=>
    (research ri-wheel-barrow)
    (set-goal RESEARCH ri-wheel-barrow)
    (chat-local-to-self "「手押し車」を研究します")
)(defrule
    (can-research ri-double-bit-axe)
=>
    (research ri-double-bit-axe)
    (chat-local-to-self "「両刃斧」を研究します")
)
(defrule
    (or
        (goal CASTLE_AGE_FLAG TRUE)
        (goal NAVY_UNIT TRUE)
    )
    (can-research ri-fletching)
=>
    (research ri-fletching)
    (chat-local-to-self "「矢羽根」の研究を開始します")
)
(defrule
    (unit-type-count archer-line > 3)
    (food-amount > 200)
    (can-research ri-fletching)
=>
    (research ri-fletching)
    (chat-local-to-self "「矢羽根」の研究を開始します")
)
(defrule
    (can-research castle-age)
=>
    (set-goal CASTLE_AGE_FLAG TRUE)
    (research castle-age)
    (chat-local-to-self "30 城主の時代に進化します")
)
;   城主
(defrule
    (current-age >= castle-age)
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (can-research ri-wheel-barrow)
=>
    (research ri-wheel-barrow)
    (set-goal RESEARCH ri-wheel-barrow)
    (chat-local-to-self "「手押し車」を研究します")
)
(defrule
    (research-completed ri-wheel-barrow)
=>
    (set-goal RESEARCH ri-wheel-barrow)
    (disable-self)
)
(defrule
    (building-type-count-total town-center > 1)
    (can-research ri-hand-cart)
=>
    (research ri-hand-cart)
    (chat-local-to-self "「荷車」の研究を開始します")
)
(defrule
    (can-research ri-war-galley)
=>
    (research ri-war-galley)
    (chat-local-to-self "「大型ガレー船」にアップグレートします")
)
(defrule
    (unit-type-count-total monk > 0)
    (can-research ri-fervor)
=>
    (research ri-fervor)
    (chat-local-to-self "「篤信」を研究します")
)
(defrule
    (goal FORMATION_SOLDIER TRUE)
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (building-type-count-total barracks > 1)
    (can-research ri-man-at-arms)
=>
    (research ri-man-at-arms)
    (chat-local-to-self "「軍兵」にアップグレートします")
)
(defrule
    (goal FORMATION_SOLDIER TRUE)
    (building-type-count-total archery-range > 1)
    (can-research ri-man-at-arms)
=>
    (research ri-man-at-arms)
    (chat-local-to-self "「軍兵」にアップグレートします")
)
(defrule
    (goal FORMATION_SOLDIER TRUE)
    (building-type-count barracks > 1)
    (can-research ri-long-swordsman)
=>
    (research ri-long-swordsman)
    (chat-local-to-self "「長剣戦士」にアップグレートします")
)
(defrule
    (soldier-count > 20)
    (research-completed ri-long-swordsman)
    (can-research ri-pikeman)
=>
    (research ri-pikeman)
    (chat-local-to-self "「長槍兵」にアップグレートします")
)
(defrule
    (unit-type-count spearman-line > 12)
    (can-research ri-pikeman)
=>
    (research ri-pikeman)
    (chat-local-to-self "「長槍兵」にアップグレートします")
)
(defrule
    (unit-type-count archer-line > 20)
    (can-research ri-crossbow)
=>
    (research ri-crossbow)
    (chat-local-to-self "「石弓射手」にアップグレートします")
)
(defrule
    (unit-type-count knight-line > 2)
    (can-research ri-bloodlines)
=>
    (research ri-bloodlines)
    (chat-local-to-self "「血統」を研究します")
)
(defrule
    (building-type-count barracks > 1)
    (unit-type-count militiaman-line > 3)
    (can-research ri-squires)
=>
    (research ri-squires)
    (chat-local-to-self "「武者修業」を研究します")
)
(defrule
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (can-research ri-bow-saw)
=>
    (research ri-bow-saw)
    (chat-local-to-self "「のこぎり」を研究します")
)
(defrule
    (building-type-count town-center > 1)
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (goal RESEARCH ri-wheel-barrow)
    (can-research ri-gold-mining)
=>
    (research ri-gold-mining)
    (chat-local-to-self "「金の採掘」を研究します")
)
(defrule
    (research-completed ri-gold-mining)
    (can-research ri-horse-collar)
=>
    (research ri-horse-collar)
    (chat-local-to-self "「引き具」の研究を開始します")
)
(defrule
    (wood-amount > 300)
    (can-research ri-horse-collar)
=>
    (research ri-horse-collar)
    (chat-local-to-self "「引き具」の研究を開始します")
)
(defrule
    (goal RESEARCH ri-wheel-barrow)
    (can-research ri-heavy-plow)
=>
    (research ri-heavy-plow )
    (chat-local-to-self "「馬鍬」の研究を開始します")
)
(defrule
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (can-research ri-bodkin-arrow)
=>
    (research ri-bodkin-arrow)
    (chat-local-to-self "「錘状矢じり」の研究を開始します")
)
(defrule
    (research-completed ri-bodkin-arrow)
    (can-research ri-careening)
=>
    (research ri-careening)
    (chat-local-to-self "「傾船技術」の研究を開始します")
)
(defrule
    (building-type-count-total stable > 0)
    (can-research ri-scale-barding)
=>
    (research ri-scale-barding)
    (chat-local-to-self "「騎兵用うろこの鎧」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_UNIT TRUE)
        (research-completed ri-padded-archer-armor)
    )
    (goal RESEARCH_SOLDIER TRUE)
    (can-research ri-scale-mail)
=>
    (research ri-scale-mail)
    (chat-local-to-self "「歩兵用うろこの鎧」の研究を開始します")
)
(defrule
    (goal ARMY_UNIT TRUE)
    (goal RESEARCH_ARCHER TRUE)
    (can-research ri-padded-archer-armor)
=>
    (research ri-padded-archer-armor)
    (chat-local-to-self "「射手用胸当ての鎧」の研究を開始します")
)
(defrule
    (goal MAPTYPE LANDMAP)
    (soldier-count > 10)
    (food-amount > 250)
    (can-research ri-padded-archer-armor)
=>
    (research ri-padded-archer-armor)
    (chat-local-to-self "「射手用胸当ての鎧」の研究を開始します")
)
(defrule
    (or
        (research-completed ri-scale-barding)
        (research-completed ri-scale-mail)
    )
    (can-research ri-forging)
=>
    (research ri-forging)
    (chat-local-to-self "「鍛造」の研究を開始します")
)
(defrule
    (can-research-with-escrow imperial-age)
=>
    (set-goal IMPERIAL_AGE_FLAG TRUE)
    (release-escrow food)
    (release-escrow gold)
    (research imperial-age)
    (chat-local-to-self "30 帝王の時代に進化します")
)
;   帝王
(defrule
    (building-type-count castle > 0)
    (town-under-attack)
    (can-research ri-murder-holes)
=>
    (research ri-murder-holes)
    (chat-local-to-self "「迎撃用窓」の研究を開始します")
)
(defrule
    (goal FORMATION_SOLDIER TRUE)
    (can-research ri-two-handed-swordsman)
=>
    (research ri-two-handed-swordsman)
    (chat-local-to-self "「重剣剣士」にアップグレートします")
)
(defrule
    (goal FORMATION_SOLDIER TRUE)
    (can-research ri-champion)
=>
    (research ri-champion)
    (chat-local-to-self "「近衛剣士」にアップグレートします")
)
(defrule
    (soldier-count > 20)
    (research-completed ri-champion)
    (can-research ri-halberdier)
=>
    (research ri-halberdier)
    (chat-local-to-self "「矛槍兵」にアップグレートします")
)
(defrule
    (can-research ri-cavalier)
=>
    (research ri-cavalier)
    (chat-local-to-self "「重騎士」にアップグレードします")
)
(defrule
    (can-research ri-paladin)
=>
    (research ri-paladin)
    (chat-local-to-self "「近衛騎士」にアップグレードします")
)
(defrule
    (or
        (civ-selected saracen)
        (players-unit-type-count any-enemy knight-line > 10)
    )
    (can-research ri-heavy-camel)
=>
    (research ri-heavy-camel)
    (chat-local-to-self "「重装らくだ騎兵」にアップグレードします")
)
(defrule
    (goal NAVY_UNIT TRUE)
    (or
        (players-building-type-count any-enemy dock > 0)
        (warboat-count > 9)
    )
    (can-research ri-galleon)
=>
    (research ri-galleon)
    (chat-local-to-self "「ガリオン船」にアップグレートします")
)
(defrule
    (goal NAVY_UNIT TRUE)
    (players-unit-type-count any-enemy fire-ship-line > 2)
    (research-completed ri-galleon)
    (can-research ri-fast-fire-ship)
=>
    (research ri-fast-fire-ship)
    (chat-local-to-self "「高速火炎船」にアップグレートします")
)
(defrule
    (not (goal NAVY_LEVEL NONE))
    (can-research ri-cannon-galleon)
=>
    (research ri-cannon-galleon)
    (chat-local-to-self "「キャノンガリオン船」の研究を開始します")
)
(defrule
    (goal NAVY_LEVEL BIG)
    (unit-type-count-total cannon-galleon-line == 5)
    (can-research ri-deck-guns)
=>
    (research ri-deck-guns)
    (chat-local-to-self "「機動キャノンガリオン船」にアップグレートします")
)
(defrule
    (can-research ri-guilds)
=>
    (research ri-guilds)
    (chat-local-to-self "「組合」の研究を開始します")
)
(defrule
    (or
        (research-completed ri-guilds)
        (not (research-available ri-guilds))
    )
    (can-research ri-gold-shaft-mining)
=>
    (research ri-gold-shaft-mining)
    (chat-local-to-self "「金の掘削」の研究を開始します")
)
(defrule
    (or
        (research-completed ri-gold-shaft-mining)
        (not (research-available ri-gold-shaft-mining))
    )
    (can-research ri-crop-rotation)
=>
    (research ri-crop-rotation)
    (chat-local-to-self "「輪作」の研究を開始します")
)
(defrule
    (or
        (research-completed ri-crop-rotation)
        (not (research-available ri-crop-rotation))
    )
    (can-research ri-two-man-saw)
=>
    (research ri-two-man-saw)
    (chat-local-to-self "「両ひきのこぎり」の研究を開始します")
)
(defrule
    (can-research ri-chemistry)
=>
    (research ri-chemistry)
    (chat-local-to-self "「化学」の研究を開始します")
)
(defrule
    (can-research ri-ballistics)
=>
    (research ri-ballistics)
    (chat-local-to-self "「弾道学」の研究を開始します")
)
(defrule
    (goal RESEARCH_ARCHER TRUE)
    (can-research ri-bracer)
=>
    (chat-local-to-self "「小手」の研究を開始します")
    (research ri-bracer)
)
(defrule
    (or
        (unit-type-count cannon-galleon-line > 4)
        (unit-type-count 42 > 2)
    )
    (or
        (research-completed ri-two-man-saw)
        (not (research-available ri-two-man-saw))
    )
    (can-research ri-siege-engineers)
=>
    (research ri-siege-engineers)
    (chat-local-to-self "「包囲攻撃技術」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (goal IMPERIAL_AGE_FLAG TRUE)
    )
    (can-research ri-chain-barding)
=>
    (research ri-chain-barding)
    (chat-local-to-self "「騎馬用鎖かたびら」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (soldier-count >= 30)
    )
    (can-research ri-plate-barding)
=>
    (research ri-plate-barding)
    (chat-local-to-self "「騎馬用甲冑」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (goal IMPERIAL_AGE_FLAG TRUE)
    )
    (can-research ri-chain-mail)
=>
    (research ri-chain-mail)
    (chat-local-to-self "「歩兵用鎖かたびら」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (soldier-count >= 30)
    )
    (can-research ri-plate-mail)
=>
    (research ri-plate-mail)
    (chat-local-to-self "「歩兵用甲冑」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (goal IMPERIAL_AGE_FLAG TRUE)
    )
    (can-research ri-leather-archer-armor)
=>
    (research ri-leather-archer-armor)
    (chat-local-to-self "「射手用革の鎧」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (soldier-count >= 30)
    )
    (can-research ri-ring-archer-armor)
=>
    (research ri-ring-archer-armor)
    (chat-local-to-self "「射手用鎖の鎧」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (goal IMPERIAL_AGE_FLAG TRUE)
    )
    (can-research ri-iron-casting)
=>
    (research ri-iron-casting)
    (chat-local-to-self "「鋳造」の研究を開始します")
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (soldier-count >= 30)
    )
    (can-research ri-blast-furnace)
=>
    (research ri-blast-furnace)
    (chat-local-to-self "「高温溶鉱炉」の研究を開始します")
)
(defrule
    (can-research my-unique-unit-upgrade)
=>
    (research my-unique-unit-upgrade)
    (chat-local-to-self "「ユニークユニット」をアップグレードします")
)

; -----------------------
; ■ 軍隊生産管理 ■
; -----------------------
;   攻城兵器が必要か判定
(defrule
    (soldier-count < 10)
    (goal NEED_SIEGH_UNIT TRUE)
=>
    (chat-local-to-self "攻城兵器の生産中止:防衛軍生産開始")
    (set-goal NEED_SIEGH_UNIT FALSE)
)
(defrule
    (soldier-count > 9)
    (unit-type-count-total battering-ram-line == 0)
    (unit-type-count-total trebuchet == 0)
    (unit-type-count-total 42 == 0)
    (goal NEED_SIEGH_UNIT FALSE)
=>
    (chat-local-to-self "攻城兵器の生産開始:防衛軍生産中止")
    (set-goal NEED_SIEGH_UNIT TRUE)
)
;   爺  ... 軍隊なのか？
(defrule
    (or
        (or
            (research-completed ri-war-galley)
            (gold-amount > 230)
        )
        (not (goal NAVY_UNIT TRUE))
    )
    (can-train monk)
=>
    (train monk)
;;    (chat-local-to-self "爺を生産します(一人目)")
    (disable-self)
)
(defrule
    (or
        (research-completed ri-war-galley)
        (not (goal NAVY_UNIT TRUE))
    )
    (can-train monk)
=>
    (train monk)
;;    (chat-local-to-self "爺を生産します(二人目)")
    (disable-self)
)
(defrule
    (or
        (research-completed ri-fervor)
        (unit-type-count-total monk > 1)
    )
    (can-train monk)
=>
    (train monk)
;;    (chat-local-to-self "爺を生産します(三人目)")
    (disable-self)
)
(defrule
    (or
        (goal ARMY_ATTACK TRUE)
        (goal IMPERIAL_AGE_FLAG TRUE)
    )
    (soldier-count > 20)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total monk < 5)
    (can-train monk)
=>
    (train monk)
;;    (chat-local-to-self "爺を生産します(標準)")
)
;   領主(陸戦)
(defrule
    (current-age == feudal-age)
    (can-train spearman-line)
=>
    (train spearman-line)
;;    (chat-local-to-self "槍兵を生産します")
    (disable-self)
)
(defrule
    (current-age == feudal-age)
    (players-unit-type-count every-enemy skirmisher-line < 3)
    (unit-type-count-total archer-line < 10)
    (can-train archer-line)
=>
    (train archer-line)
;;    (chat-local-to-self "射手を生産します")
)
(defrule
    (current-age == feudal-age)
    (or
        (unit-type-count-total skirmisher-line >= 7)
        (unit-type-count-total archer-line < 5)
    )
    (can-train archer-line)
=>
    (train archer-line)
;;    (chat-local-to-self "射手を生産します")
)
(defrule
    (current-age == feudal-age)
    (food-amount > 50)
    (unit-type-count-total skirmisher-line < 12)
    (can-train skirmisher-line)
=>
    (train skirmisher-line)
;;    (chat-local-to-self "散兵を生産します")
)
(defrule
    (current-age == feudal-age)
    (food-amount > 130)
    (soldier-count > 12)
    (unit-type-count-total man-at-arms < 10)
    (can-train man-at-arms)
=>
    (train man-at-arms)
;;    (chat-local-to-self "軍兵を生産します")
)
(defrule
    (current-age == feudal-age)
    (soldier-count > 4)
    (food-amount > 50)
    (unit-type-count-total spearman-line < 15)
    (can-train spearman-line)
=>
    (train spearman-line)
;;    (chat-local-to-self "槍兵を生産します")
)
;   領主(防衛)
(defrule
    (current-age == feudal-age)
    (warboat-count < 7)
    (can-train galley)
=>
    (train galley)
;;    (chat-local-to-self "ガレー船を生産します")
)
(defrule
    (soldier-count < 10)
    (town-under-attack)
    (unit-type-count-total spearman-line < 5)
    (can-train spearman-line)
=>
    (train spearman-line)
;;    (chat-local-to-self "槍兵を生産します")
)
;   領主(海軍強化)
(defrule
    (current-age == feudal-age)
    (goal NAVY_UNIT TRUE)
    (warboat-count < 18)
    (can-train galley)
=>
    (train galley)
;;    (chat-local-to-self "ガレー船を生産します(海軍指令)")
)
;   城主(標準)
(defrule
    (current-age == castle-age)
    (warboat-count < 5)
    (can-train war-galley)
=>
    (train war-galley)
;;    (chat-local-to-self "大型ガレー船を生産します")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (not (town-under-attack))
    (soldier-count > 5)
    (unit-type-count-total battering-ram-line == 0)
    (can-train battering-ram-line)
=>
    (train battering-ram-line)
    (set-goal NEED_SIEGH_UNIT FALSE)
;;    (chat-local-to-self "破壊槌を生産します(常時配備)")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (soldier-count > 9)
    (unit-type-count-total battering-ram-line < 2)
    (can-train battering-ram-line)
=>
    (train battering-ram-line)
    (set-goal NEED_SIEGH_UNIT FALSE)
;;    (chat-local-to-self "破壊槌を生産します(攻撃配備)")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (goal RESEARCH_ARCHER FALSE)
    (unit-type-count-total scorpion-line < 12)
    (or
        (unit-type-count-total scorpion-line >= 7)
        (unit-type-count-total battering-ram-line > 0)
    )
    (can-train scorpion-line)
=>
    (train scorpion-line)
;;    (chat-local-to-self "スコーピオンを生産します")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (players-unit-type-count any-enemy scorpion-line > 0)
    (unit-type-count-total scorpion-line >= 7)
    (unit-type-count-total mangonel-line < 2)
    (can-train mangonel-line)
=>
    (train mangonel-line)
;;    (chat-local-to-self "投石器を生産します")
)
;   城主(海軍強化)
(defrule
    (current-age == castle-age)
    (goal NAVY_UNIT TRUE)
    (research-completed ri-war-galley)
    (or
        (players-unit-type-count any-enemy fire-ship-line > 0)
        (players-unit-type-count any-enemy galley-line > 0)
    )
    (unit-type-count-total fire-ship-line < 6)
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
;;    (chat-local-to-self "火炎船を生産します(海軍指令)")
)
(defrule
    (current-age == castle-age)
    (goal NAVY_UNIT TRUE)
    (or
        (players-unit-type-count any-enemy fire-ship-line > 0)
        (players-unit-type-count any-enemy galley-line > 0)
    )
    (can-train longboat-line)
=>
    (train longboat-line)
;;    (chat-local-to-self "バイキング船を生産します(海軍指令)")
)
(defrule
    (current-age == castle-age)
    (goal NAVY_UNIT TRUE)
    (can-train war-galley)
=>
    (train war-galley)
;;    (chat-local-to-self "大型ガレー船を生産します(海軍指令)")
)
;   城主(陸軍強化)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total knight-line < 12)
    (can-train knight-line)
=>
    (train knight-line)
;;    (chat-local-to-self "騎士を生産します(陸軍指令)")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total militiaman-line < 12)
    (research-completed ri-long-swordsman)
    (can-train militiaman-line)
=>
    (train militiaman-line)
;;    (chat-local-to-self "長剣剣士を生産します(陸軍指令)")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (or
        (civ-selected saracen)
        (players-unit-type-count any-enemy knight-line > 10)
    )
    (unit-type-count-total camel < 12)
    (can-train camel)
=>
    (train camel)
;;    (chat-local-to-self "らくだ騎兵を生産します(陸軍指令)")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (players-unit-type-count any-enemy knight-line > 1)
    (unit-type-count-total pikeman < 6)
    (can-train pikeman)
=>
    (train pikeman)
;;    (chat-local-to-self "長槍兵を生産します(陸軍指令)")
)
(defrule
    (current-age == castle-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (soldier-count > 10)
    (can-train my-unique-unit-line)
=>
    (train my-unique-unit-line)
;;    (chat-local-to-self "ユニークユニットを生産します(陸軍指令)")
)
;   帝王(標準)
(defrule
    (soldier-count > 9)
    (goal ARMY_UNIT TRUE)
    (unit-type-count-total trebuchet < 4)
    (unit-type-count-total 42 < 3)
    (can-train trebuchet)
=>
    (set-goal NEED_SIEGH_UNIT FALSE)
    (train trebuchet)
;;     (chat-local-to-self "遠投投石器を生産します")
)
(defrule
    (current-age == imperial-age)
    (warboat-count < 5)
    (can-train galleon)
=>
    (train galleon)
;;    (chat-local-to-self "大型ガレー船を生産します")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (soldier-count > 12)
    (gold-amount > 300)
    (wood-amount > 600)
    (unit-type-count-total scorpion-line < 5)
    (unit-type-count-total trebuchet > 1)
    (can-train scorpion-line)
=>
    (train scorpion-line)
;;    (chat-local-to-self "スコーピオンを生産します")
)
;   城主(海軍強化)
(defrule
    (current-age == imperial-age)
    (goal NAVY_UNIT TRUE)
    (research-completed ri-galleon)
    (or
        (players-unit-type-count any-enemy fire-ship-line > 0)
        (players-unit-type-count any-enemy galley-line > 0)
    )
    (unit-type-count-total fire-ship-line < 6)
    (can-train fire-ship-line)
=>
    (train fire-ship-line)
;;    (chat-local-to-self "火炎船を生産します(海軍指令)")
)
(defrule
    (current-age == imperial-age)
    (research-completed ri-galleon)
    (goal NAVY_UNIT TRUE)
    (or
        (players-unit-type-count any-enemy fire-ship-line > 0)
        (players-unit-type-count any-enemy galley-line > 0)
    )
    (can-train longboat-line)
=>
    (train longboat-line)
;;    (chat-local-to-self "バイキング船を生産します(海軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal NAVY_UNIT TRUE)
    (can-train galleon)
=>
    (train galleon)
;;    (chat-local-to-self "ガリオン船を生産します(海軍指令)")
)
;   帝王(陸軍強化)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total long-swordsman < 10)
    (can-train long-swordsman)
=>
    (train long-swordsman)
;;    (chat-local-to-self "長剣剣士を生産します(陸軍指令)")
)
(defrule
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total militiaman-line < 14)
    (research-completed ri-two-handed-swordsman)
    (not (research-completed ri-champion))
    (can-train militiaman-line)
=>
    (train militiaman-line)
;;    (chat-local-to-self "重剣剣士を生産します(陸軍指令)")
)
(defrule
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (research-completed ri-champion)
    (can-train militiaman-line)
=>
    (train militiaman-line)
;;    (chat-local-to-self "近衛剣士を生産します(陸軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total knight < 10)
    (can-train knight)
=>
    (train knight)
;;    (chat-local-to-self "騎士を生産します(陸軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total cavalier < 14)
    (can-train cavalier)
=>
    (train cavalier)
;;    (chat-local-to-self "重騎士を生産します(陸軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (can-train paladin)
=>
    (train paladin)
;;    (chat-local-to-self "近衛騎士を生産します(陸軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (or
        (civ-selected saracen)
        (players-unit-type-count any-enemy knight-line > 10)
    )
    (can-train heavy-camel)
=>
    (train heavy-camel)
;;    (chat-local-to-self "重装らくだ騎兵を生産します(陸軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (players-unit-type-count any-enemy knight-line > 1)
    (unit-type-count-total halberdier < 6)
    (can-train halberdier)
=>
    (train pikeman)
;;    (chat-local-to-self "矛槍兵を生産します(陸軍指令)")
)
(defrule
    (current-age == imperial-age)
    (goal ARMY_UNIT TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (unit-type-count-total my-unique-unit-line < 14)
    (can-train my-unique-unit-line)
=>
    (train my-unique-unit-line)
;;    (chat-local-to-self "ユニークユニットを生産します(陸軍指令)")
)
(defrule
    (goal NAVY_ATTACK TRUE)
    (goal NEED_SIEGH_UNIT FALSE)
    (not (goal NAVY_LEVEL NONE))
    (unit-type-count-total cannon-galleon-line < 5)
    (can-train cannon-galleon-line)
=>
    (train cannon-galleon-line)
;;     (chat-local-to-self "キャノンガリオン船（５隻まで）を生産します")
)

; -----------------------
; ■ 町の大きさ調整 ■
; -----------------------
;   デフォルト
(defrule
    (soldier-count < 15)
    (timer-triggered TIMER_BUILDING)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 25)
    (set-goal BUILDING TRUE)
    (disable-timer TIMER_BUILDING)
)
(defrule
    (soldier-count >= 15)
    (timer-triggered TIMER_BUILDING)
=>
    (set-strategic-number sn-minimum-town-size 1)
    (set-strategic-number sn-maximum-town-size 35)
    (set-goal BUILDING TRUE)
    (disable-timer TIMER_BUILDING)
)
(defrule
    (goal ARMY_ATTACK FALSE)
    (strategic-number sn-maximum-town-size > 35)
=>
    (set-goal BUILDING FALSE)
    (enable-timer TIMER_BUILDING 1)
)
;   タウンサイズアタック！
(defrule
    (goal ARMY_ATTACK TRUE)
=>
    (enable-timer TIMER_EXPANSION 1)
    (disable-self)
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size < 40)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 40)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "19 勢力範囲を拡大します:40")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 40)
    (strategic-number sn-maximum-town-size < 50)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 50)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:50")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 50)
    (strategic-number sn-maximum-town-size < 60)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 60)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:60")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 60)
    (strategic-number sn-maximum-town-size < 65)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 65)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:65")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 65)
    (strategic-number sn-maximum-town-size < 70)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 70)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:70")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 70)
    (strategic-number sn-maximum-town-size < 75)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 75)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:75")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 75)
    (strategic-number sn-maximum-town-size < 80)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 80)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:80")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 80)
    (strategic-number sn-maximum-town-size < 85)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 85)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:85")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 85)
    (strategic-number sn-maximum-town-size < 90)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 90)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:90")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 90)
    (strategic-number sn-maximum-town-size < 95)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 95)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:95")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 95)
    (strategic-number sn-maximum-town-size < 100)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 100)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:100")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 100)
    (strategic-number sn-maximum-town-size < 105)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 105)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:105")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 105)
    (strategic-number sn-maximum-town-size < 110)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 110)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:110")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 110)
    (strategic-number sn-maximum-town-size < 120)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 120)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:120")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 120)
    (strategic-number sn-maximum-town-size < 130)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 130)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:130")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 130)
    (strategic-number sn-maximum-town-size < 140)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 140)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:140")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 140)
    (strategic-number sn-maximum-town-size < 160)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 160)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:160")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 160)
    (strategic-number sn-maximum-town-size < 180)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 180)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:180")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 180)
    (strategic-number sn-maximum-town-size < 200)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 200)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:200")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal BUILDING TRUE)
    (timer-triggered TIMER_EXPANSION)
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (strategic-number sn-maximum-town-size >= 200)
    (strategic-number sn-maximum-town-size < 999)
=>
    (set-goal RESET_EXPANTION FALSE)
    (set-strategic-number sn-maximum-town-size 999)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲を拡大します:999")
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal RESET_EXPANTION FALSE)
    (timer-triggered TIMER_EXPANSION)
=>
    (enable-timer TIMER_EXPANSION 120)
    (set-goal RESET_EXPANTION TRUE)
)
(defrule
    (goal ARMY_ATTACK TRUE)
    (goal RESET_EXPANTION TRUE)
    (timer-triggered TIMER_EXPANSION)
=>
    (set-strategic-number sn-maximum-town-size 40)
    (set-goal RESET_EXPANTION FALSE)
    (enable-timer TIMER_EXPANSION 3)
    (chat-local-to-self "勢力範囲をリセットします:40")
)
(defrule
    (goal ARMY_ATTACK FALSE)
    (timer-triggered TIMER_EXPANSION)
=>
    (enable-timer TIMER_EXPANSION 10)
)

; -----------------------
; ■ 資源搾取距離調整 ■
; -----------------------
(defrule
    (current-age <= feudal-age)
    (strategic-number sn-camp-max-distance > 50)
=>
    (set-strategic-number sn-camp-max-distance 50)
    (disable-timer TIMER_DISTANCE)
    (set-goal DISTANCE TRUE)
;;    (chat-to-player my-player-number "資源搾取距離調整(FEUDAL_MAX)")
)
(defrule
    (current-age == castle-age)
    (strategic-number sn-camp-max-distance > 100)
=>
    (set-strategic-number sn-camp-max-distance 100)
    (disable-timer TIMER_DISTANCE)
    (set-goal DISTANCE TRUE)
;;    (chat-to-player my-player-number "資源搾取距離調整(CASTLE_MAX)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance < 20)
=>
    (set-strategic-number sn-camp-max-distance 20)
    (enable-timer TIMER_DISTANCE 2)
;;    (chat-to-player my-player-number "資源搾取距離調整(20)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance >= 20)
    (strategic-number sn-camp-max-distance < 30)
=>
    (set-strategic-number sn-camp-max-distance 30)
    (enable-timer TIMER_DISTANCE 2)
;;    (chat-to-player my-player-number "資源搾取距離調整(30)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance >= 30)
    (strategic-number sn-camp-max-distance < 50)
=>
    (set-strategic-number sn-camp-max-distance 50)
    (enable-timer TIMER_DISTANCE 2)
;;    (chat-to-player my-player-number "資源搾取距離調整(50)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance >= 50)
    (strategic-number sn-camp-max-distance < 70)
=>
    (set-strategic-number sn-camp-max-distance 70)
    (enable-timer TIMER_DISTANCE 2)
;;    (chat-to-player my-player-number "資源搾取距離調整(70)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance >= 70)
    (strategic-number sn-camp-max-distance < 100)
=>
    (set-strategic-number sn-camp-max-distance 100)
    (enable-timer TIMER_DISTANCE 2)
;;    (chat-to-player my-player-number "資源搾取距離調整(100)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance >= 100)
    (strategic-number sn-camp-max-distance < 150)
=>
    (set-strategic-number sn-camp-max-distance 150)
    (enable-timer TIMER_DISTANCE 2)
;;    (chat-to-player my-player-number "資源搾取距離調整(150)")
)
(defrule
    (timer-triggered TIMER_DISTANCE)
    (strategic-number sn-camp-max-distance >= 150)
=>
    (set-strategic-number sn-camp-max-distance 999)
    (disable-timer TIMER_DISTANCE)
    (set-goal DISTANCE TRUE)
;;    (chat-to-player my-player-number "資源搾取距離調整(MAX)")
)

; -----------------------
; ■ 索敵管理 ■
; -----------------------
#load-if-not-defined NOMAD-MAP
;   初期索敵中止
(defrule
    (game-time > 24)
    (or
        (game-time > 60)
        (or
            (unit-type-count 594 > 1)   ;958
            (unit-type-count 833 > 1)
        )
    )
=>
    (set-strategic-number sn-percent-civilian-explorers  0)
    (set-strategic-number sn-percent-civilian-builders  10)
    (set-strategic-number sn-percent-civilian-gatherers 90)
    (set-strategic-number sn-cap-civilian-explorers      0)
    (set-strategic-number sn-minimum-civilian-explorers  1)
    (set-strategic-number sn-number-explore-groups       1)
    (set-strategic-number sn-total-number-explorers      1)
    (chat-local-to-self "町の人の索敵を中止します")
    (disable-self)
)
;   食料探索
#load-if-not-defined SCANDANAVIA-MAP
(defrule
    (game-time > 45)
    (building-type-count-total mill == 0)
    (wood-amount > 130)
    (unit-type-count 594 == 0)  ;958
    (unit-type-count 833 == 0)
=>
    (set-strategic-number sn-food-dropsite-distance 15)
    (set-strategic-number sn-maximum-food-drop-distance 20)
    (set-strategic-number sn-percent-civilian-explorers 75)
    (set-strategic-number sn-percent-civilian-gatherers 15)
    (set-strategic-number sn-cap-civilian-explorers      3)
    (set-strategic-number sn-minimum-civilian-explorers  8)
    (set-strategic-number sn-number-explore-groups       8)
    (set-strategic-number sn-total-number-explorers      8)
    (chat-local-to-self "粉ひき所が建つよう食料を探します")
    (disable-self)
)
(defrule
    (building-type-count-total mill > 0)
    (strategic-number sn-cap-civilian-explorers > 2)
=>
    (set-strategic-number sn-percent-civilian-explorers  0)
    (set-strategic-number sn-percent-civilian-gatherers 90)
    (set-strategic-number sn-cap-civilian-explorers      0)
    (set-strategic-number sn-minimum-civilian-explorers  1)
    (set-strategic-number sn-number-explore-groups       1)
    (set-strategic-number sn-total-number-explorers      1)
    (chat-local-to-self "食料を探す索敵を中止します")
    (disable-self)
)
#end-if
(defrule
    (building-type-count mill > 0)
    (building-type-count lumber-camp > 0)
=>
    (set-strategic-number sn-food-dropsite-distance      3)
    (set-strategic-number sn-maximum-food-drop-distance  8)
    (set-strategic-number sn-maximum-hunt-drop-distance 30)
    (chat-local-to-self "食料の距離調整を行います")
    (disable-self)
)
;   食料探索
(defrule
    (current-age == dark-age)
    (building-type-count mill == 1)
    (unit-type-count 216 == 0)  ;鹿
    (unit-type-count 122 == 0)
    (sheep-and-forage-too-far)
=>
    (set-strategic-number sn-percent-civilian-explorers 75)
    (set-strategic-number sn-percent-civilian-gatherers 15)
    (set-strategic-number sn-cap-civilian-explorers      3)
    (set-strategic-number sn-minimum-civilian-explorers  9)
    (set-strategic-number sn-number-explore-groups       9)
    (set-strategic-number sn-total-number-explorers      9)
    (chat-local-to-self "鹿を探します")
    (disable-self)
)
#end-if
(defrule
    (or
        (or
            (game-time > 780)
            (goal FEUDAL_AGE_FLAG TRUE)
        )
        (or
            (unit-type-count 216 > 0)   ;鹿
            (unit-type-count 122 > 0)
        )
    )
    (strategic-number sn-cap-civilian-explorers > 1)
=>
    (set-strategic-number sn-percent-civilian-explorers  0)
    (set-strategic-number sn-percent-civilian-gatherers 90)
    (set-strategic-number sn-cap-civilian-explorers      0)
    (set-strategic-number sn-minimum-civilian-explorers  1)
    (set-strategic-number sn-number-explore-groups       1)
    (set-strategic-number sn-total-number-explorers      1)
    (chat-local-to-self "食料を探す索敵を中止します")
    (disable-self)
)
;   敵探索
(defrule
    (current-age == feudal-age)
    (goal MAPTYPE LANDMAP)
    (players-building-count any-enemy == 0)
=>
    (set-strategic-number sn-number-explore-groups       5)
    (set-strategic-number sn-total-number-explorers      5)
    (chat-local-to-self "敵の建物を探します")
    (disable-self)
)
(defrule
    (current-age >= feudal-age)
    (goal MAPTYPE LANDMAP)
    (players-building-count any-enemy > 0)
=>
    (set-strategic-number sn-number-explore-groups       1)
    (set-strategic-number sn-total-number-explorers      1)
    (chat-local-to-self "索敵を中止します")
    (disable-self)
)

; -----------------------
; ■ 貿易 ■
; -----------------------
(defrule
    (not (town-under-attack))
    (not (enemy-buildings-in-town))
    (player-in-game any-ally)
    (current-age >= castle-age)
    (players-building-type-count any-ally dock > 0)
    (unit-type-count-total trade-cog < 5)
    (building-type-count town-center > 1)
    (goal NAVY_LEVEL BIG)
    (can-train trade-cog)
=>
    (train trade-cog)
)
(defrule
    (goal MAPTYPE LANDMAP)
    (player-in-game any-ally)
    (goal ARMY_ATTACK TRUE)
    (players-building-type-count any-ally market > 0)
    (unit-type-count-total trade-cart < 5)
    (building-type-count town-center > 1)
    (can-train trade-cart)
=>
    (train trade-cart)
)

; -----------------------
; ■ 文明別 ■
; -----------------------
#load-if-defined AZTEC-CIV

#end-if
#load-if-defined BRITON-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_ARCHER TRUE)
    (disable-self)
)
#end-if
#load-if-defined BYZANTINE-CIV

#end-if
#load-if-defined CELTIC-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_SOLDIER TRUE)
    (disable-self)
)
#end-if
#load-if-defined CHINESE-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_ARCHER TRUE)
    (disable-self)
)
#end-if
#load-if-defined FRANKISH-CIV

#end-if
#load-if-defined GOTHIC-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_SOLDIER TRUE)
    (disable-self)
)
(defrule
    (goal IMPERIAL_AGE_FLAG TRUE)
=>
    (set-goal FORMATION_SOLDIER TRUE)
    (disable-self)
)
#end-if
#load-if-defined HUN-CIV

#end-if
#load-if-defined JAPANESE-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_SOLDIER TRUE)
    (disable-self)
)
(defrule
    (goal IMPERIAL_AGE_FLAG TRUE)
=>
    (set-goal FORMATION_SOLDIER TRUE)
    (disable-self)
)
#end-if
#load-if-defined KOREAN-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_ARCHER TRUE)
    (disable-self)
)
#end-if
#load-if-defined MAYAN-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_ARCHER TRUE)
    (disable-self)
)
#end-if
#load-if-defined MONGOL-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_ARCHER TRUE)
    (disable-self)
)
#end-if
#load-if-defined PERSIAN-CIV

#end-if
#load-if-defined SARACEN-CIV

#end-if
#load-if-defined SPANISH-CIV

#end-if
#load-if-defined TEUTONIC-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_SOLDIER TRUE)
    (disable-self)
)
#end-if
#load-if-defined TURKISH-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_ARCHER TRUE)
    (disable-self)
)
#end-if
#load-if-defined VIKING-CIV
(defrule
    (unit-type-count-total my-unique-unit-line > 3)
=>
    (set-goal RESEARCH_SOLDIER TRUE)
    (disable-self)
)
#end-if
; -----------------------
; ■ マルチプレイ ■
; -----------------------

    ;   思案中(^^;

; -----------------------
; ■ チート管理 ■
; -----------------------
;
;   対人間戦のみ使用します
;   ~~~~~~~~~~~~
#load-if-defined DIFFICULTY-HARD
(defrule
    (player-in-game any-human-enemy)
    (game-time > 300)
=>
    (chat-to-all "39 [5:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "羊を中心の下でまとめて取れないため、")
    (chat-to-all "食料80 追加されました")
    (cc-add-resource food 80)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 600)
=>
    (chat-to-all "39 [10:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "猪２匹分の食料を取れない、建築制限のため、")
    (chat-to-all "木100 食料400 追加されました")
    (cc-add-resource food 400)
    (cc-add-resource wood 100)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 900)
=>
    (chat-to-all "39 [15:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "ＡＩの収集、建築制限を回避するため、")
    (chat-to-all "木50 石175 追加されました")
    (cc-add-resource wood 50)
    (cc-add-resource stone 175)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 1200)
=>
    (chat-to-all "39 [20:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "ＡＩは塔や城で非常に弱くなるので、")
    (chat-to-all "食料400 木480 金225 石650 追加されました")
    (cc-add-resource food 400)
    (cc-add-resource wood 480)
    (cc-add-resource gold 225)
    (cc-add-resource stone 650)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 1500)
=>
    (chat-to-all "39 [25:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "あきらかな無駄死にする軍隊分の資源、")
    (chat-to-all "食料300 金375 追加されました")
    (cc-add-resource food 600)
    (cc-add-resource gold 750)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 1800)
=>
    (chat-to-all "39 [30:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "採掘所危機問題があるため")
    (chat-to-all "木300 金300 追加されました")
    (cc-add-resource wood 500)
    (cc-add-resource gold 500)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 2100)
=>
    (chat-to-all "39 [35:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "あきらかな無駄死にする軍隊分の資源、")
    (chat-to-all "食料600 金750 追加されました")
    (cc-add-resource food 600)
    (cc-add-resource gold 750)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 2400)
=>
    (chat-to-all "39 [40:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "採掘所危機問題があるため")
    (chat-to-all "木500 金500 追加されました")
    (cc-add-resource wood 500)
    (cc-add-resource gold 500)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 3600)
=>
    (chat-to-all "39 [60:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "ＡＩは終盤、資源収集できないため")
    (chat-to-all "木1000 食料1000 金1000 追加されました")
    (cc-add-resource wood 1000)
    (cc-add-resource food 1000)
    (cc-add-resource gold 1000)
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 4200)
=>
    (chat-to-all "39 [70:00] 難易度『難しい』なので、警告します！")
    (chat-to-all "あと２０分でデスモードに突入します")
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 4800)
=>
    (chat-to-all "39 [80:00] 難易度『難しい』なので、警告します！")
    (chat-to-all "あと１０分でデスモードに突入します")
    (disable-self)
)
(defrule
    (player-in-game any-human-enemy)
    (game-time > 5400)
=>
    (chat-to-all "39 [90:00] 難易度『難しい』なので、チートを発動します")
    (chat-to-all "デスモードに突入します")
    (chat-to-all "木90000 食料90000 金90000 石3250 追加されました")
    (cc-add-resource wood 90000)
    (cc-add-resource food 90000)
    (cc-add-resource gold 90000)
    (cc-add-resource stone 2500)
    (disable-self)
)
#end-if

; -----------------------
; ■ チャット ■
; -----------------------
;   進化勝ち        10:Age1に戻してやるぜ
(defrule
    (current-age >= castle-age)
    (players-current-age every-enemy < castle-age)
=>
    (chat-to-player every-enemy "10 (Age1に戻してやるぜ)")
    (disable-self)
)
;   攻撃されている  12:攻撃されている
(defrule
    (current-age < castle-age)
    (players-military-population any-enemy > 15)
    (military-population < 10)
    (town-under-attack)
    (unit-type-count 112 > 0)
=>
    (chat-to-player this-any-enemy "12 (攻撃されている)")
    (disable-self)
)
;   スコア勝ち  13:プロバイダを恨むんだな
(defrule
    (current-score > 10000)
    (players-score any-enemy < 5000)
=>
    (chat-to-player this-any-enemy "13 (プロバイダを恨むんだな)");
    (disable-self)
)
;   敵戦力発見！    14:早く始めろよ
(defrule
    (not (player-in-game any-computer-ally))
    (military-population > 20)
    (players-military-population any-enemy > 10)
    (not (town-under-attack))
=>
    (chat-to-player this-any-enemy "14 (早く始めろよ)");
    (disable-self)
)
;   裏小屋発見！    15:俺を狙うなよ
(defrule
    (current-age <= castle-age)
    (not (goal ARMY_ATTACK TRUE))
    (enemy-buildings-in-town)
=>
    (chat-to-player every-enemy "15 (俺を狙うなよ)")
    (disable-self)
)
;  敵の建物発見！   16:敵を発見
(defrule
    (not (player-in-game any-computer-ally))
    (players-building-count any-enemy > 2)
=>
    (chat-to-player this-any-enemy "16 (敵を発見)")
    (disable-self)
)
;   帝王入り        17:王様になるのはいい気分だぜ
(defrule
    (current-age == imperial-age)
=>
    (chat-to-all "17 (王様になるのはいい気分だぜ)")
    (disable-self)
)
;   聖職者を生産  18:聖職者が必要だ
(defrule
    (unit-type-count-total monk > 0)
=>
    (chat-to-all "18 (聖職者が必要だ)")
    (disable-self)
)
;   勝利目前        20:ヘタクソ
(defrule
    (current-age >= castle-age)
    (players-population any-enemy < 10)
    (goal ARMY_ATTACK TRUE)
=>
    (chat-to-player this-any-enemy "20 (ヘタクソ)");
    (disable-self)
)
;   突撃開始        21:いい町だ。いただくぜ
(defrule
    (current-age >= imperial-age)
    (players-building-count any-enemy > 0)
    (goal ARMY_ATTACK TRUE)
=>
    (chat-to-player this-any-enemy "21 (いい町だ。いただくぜ)")
    (disable-self)
)
;   攻撃されている  22:俺に触るのはよせ
(defrule
    (current-age >= castle-age)
    (players-military-population any-enemy > 15)
    (military-population < 10)
    (not (goal ARMY_ATTACK TRUE))
    (town-under-attack)
    (unit-type-count 112 > 0)
=>
    (chat-to-player every-enemy "22 (俺に触るのはよせ)");
    (disable-self)
)
;   突撃開始        23:略奪にお出かけだ
(defrule
    (current-age >= feudal-age)
    (players-building-count any-enemy > 0)
    (warboat-count > 2)
    (goal NAVY_ATTACK TRUE)
=>
    (chat-to-player every-enemy "23 (略奪にお出かけだ)")
    (disable-self)
)
;   攻撃されている  25:やれるもんならやってみな！
(defrule
    (current-age >= castle-age)
    (players-military-population any-enemy < 15)
    (military-population > 25)
    (town-under-attack)
    (unit-type-count 112 > 0)
=>
    (chat-to-player every-enemy "25 (やれるもんならやってみな！)")
    (disable-self)
)
;   ゲーム終了    27:２時間もやったあげくに
(defrule
    (not (player-in-game any-computer-ally))
    (game-time > 7200)
    (game-time <= 9000)
    (players-military-population every-enemy < 30)
=>
    (chat-to-player every-enemy "27 (２時間もやったあげくに)")
    (disable-self)
)
;   農民の数で叫ぶ
(defrule
    (not (player-in-game any-computer-ally))
    (unit-type-count villager == 10)
=>
    (chat-to-all "■ 我が軍は永久に不滅なり！")
    (chat-to-all "■ 無敵の艦隊、そして豪腕の戦士。")
    (disable-self)
)
(defrule
    (not (player-in-game any-computer-ally))
    (unit-type-count villager == 11)
=>
    (chat-to-all "■ 全てを貫く矛を掲げ、")
    (chat-to-all "■ 全てを防ぐ盾を持つ。")
    (disable-self)
)
(defrule
    (not (player-in-game any-computer-ally))
    (unit-type-count villager == 12)
=>
    (chat-to-all "■ 我に挑む愚かな奴よ！")
    (chat-to-all "■ 貴様に「悪夢」を見せてやろう！")
    (disable-self)
)
; -----------------------
; ■ 命令操作 ■
; -----------------------
;   強制攻撃        31:攻撃しろ！
(defrule
    (taunt-detected any-ally 31)
=>
    (acknowledge-taunt this-any-ally 31)
    (enable-timer TIMER_ARMY_ATTACK 120)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "【軍事指令部】我が軍の力をみせてあげます！")
)
(defrule
    (taunt-detected my-player-number 31)
=>
    (acknowledge-taunt my-player-number 31)
    (enable-timer TIMER_ARMY_ATTACK 300)
    (set-goal ARMY_ATTACK TRUE)
    (chat-local-to-self "【デバッグ】攻撃を開始します(最低300秒)")
)
;   撤退            36:私が合図するまで攻撃するな
(defrule
    (taunt-detected any-ally 36)
=>
    (acknowledge-taunt this-any-ally 36)
    (enable-timer TIMER_ARMY_ATTACK 3600)
    (set-goal ARMY_ATTACK FALSE)
    (chat-local-to-self "【軍事指令部】我が軍は撤退します！")
)
(defrule
    (taunt-detected my-player-number 36)
=>
    (acknowledge-taunt my-player-number 36)
    (enable-timer TIMER_ARMY_ATTACK 300)
    (set-goal ARMY_ATTACK FALSE)
    (chat-local-to-self "【デバッグ】攻撃を中止します(最低300秒)")
)
#load-if-defined I-USE-DEBUG-MODE
(defrule                        ; Start resource controll
    (true)
=>
    (set-strategic-number 138 90000)
    (set-strategic-number 139 90000)
    (set-strategic-number 140 90000)
    (set-strategic-number 141 90000)
    (disable-self)
)
#end-if
