(load "rmresign")

;-------------------------------------------------
;●ApricotKnight(仮) Ver 0.90β Build:1011.2332
;	製作者：夜杏[m_yoan@hotmail.com]
;	AI Wars用AIです。

;●推奨条件
;	人口：125人
;	難易度：難しい
;	マップサイズ：普通
;	マップの種類：アラビア、深い森、凍結湖、オアシス、アリーナ、モンゴリア、高地、スカンジディナビア、
;	              大陸、沿岸、ユカタン、海辺の沼地、流域、その他敵地と陸続きなマップ
;	文明：全文明
;	チーム戦対応

;●Ver 0.80βからの変更点
;	○海軍強化。バグフィックス他色々
;●Ver 0.70βからの変更点
;	○バグフィックス他色々
;●Ver 0.60βからの変更点
;	○バグフィックス
;	○荷馬車導入
;	○その他バランス調整・編成変更など
;-------------------------------------------------


(defconst NO 0)
(defconst YES 1)
(defconst SINKA 2)
(defconst TAIKYAKU 3)
(defconst CONTROL_TOWNSIZE 4)
(defconst MAP_TYPE 5)

(defconst PALADIN 6)
(defconst KNIGHT 7)
(defconst SPEAR 8)
(defconst SCORP 9)
(defconst RAM 10)
(defconst RAKUDA 11)
(defconst GUN 12)
(defconst HOHEI 13)
(defconst UNIQ 14)
(defconst ENTOU 15)
(defconst TOUSEKI 16)
(defconst EAGLE 17)
(defconst BAKUHA 18)
(defconst SAKANA 19)
(defconst GARE 20)
(defconst CANON 21)
(defconst MONK 22)
(defconst ELUNIQ 23)
(defconst UNIQTECH 24)
(defconst ARCHER 25)
(defconst DEL_FARM 26)
(defconst SANPEI 27)
(defconst C-ARCHER 31)
(defconst KIHEI 32)

(defconst ESFOOD 28)
(defconst ESGOLD 29)
(defconst ESWOOD 30)

(defconst HELP 33)
(defconst F_RUSH 34)

;(defconst TIMER_BUILDING 1);予約
(defconst TIMER_FR 4)
(defconst TIMER_ESFOOD 5)
(defconst TIMER_ESGOLD 6)
(defconst TIMER_ESWOOD 7)
(defconst TIMER_BALANCE 8)
(defconst TIMER_HELP 9)

(defrule
	(true)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(disable-self)
)

;●goal初期化
(defrule
	(true)
=>
	(set-goal 5 0)
	(set-goal 7 0)
	(set-goal 8 0)
	(set-goal 9 0)
	(set-goal 10 0)
	(set-goal 11 0)
	(set-goal 12 0)
	(set-goal 13 0)
	(set-goal 14 0)
	(set-goal 15 0)
	(set-goal 16 0)
	(disable-self)
)
(defrule
	(true)
=>
	(set-goal 17 0)
	(set-goal 18 0)
	(set-goal 19 0)
	(set-goal 20 0)
	(set-goal 21 0)
	(set-goal 22 0)
	(set-goal 23 0)
	(set-goal 24 0)
	(set-goal 25 0)
	(set-goal 26 0)
	(set-goal 27 0)
	(disable-self)
)
(defrule
	(true)
=>
	(set-goal 31 0)
	(set-goal 32 0)
	(set-goal 33 0)
	(set-goal 34 0) ;領主ラッシュ
	(disable-self)
)

;●MAP_TYPE マップのタイプ(0：アラビア系, 1：大陸系)
(defrule
	(true)
=>
	(set-goal MAP_TYPE 0)
	(disable-self)
)
(defrule
	(or
		(map-type continental)					;★大陸
		(or
			(map-type baltic)					;バルト海
			(or
				(map-type mediterranean)		;地中海
				(or
					(map-type rivers)			;★流域
					(or
						(map-type salt-marsh)	;★浅瀬
						(or
							(map-type nomad)	;遊牧
							(map-type coastal)		;★沿岸
						)
					)
				)
			)
		)
	)
=>
	(set-goal MAP_TYPE 1)
	(disable-self)
)
(defrule
	(nor
		(map-type oasis)					;★オアシス
		(nor
			(map-type baltic)					;バルト海
			(nor
				(map-type mediterranean)		;地中海
				(map-type nomad)			;遊牧
			)
		)
	)
=>
	(set-strategic-number sn-gather-idle-soldiers-at-center 1) ;【陸戦ユニットをマップの中央に集合させるか】
	(disable-self)
)
(defrule
	(current-age == imperial-age)
=>
	(set-strategic-number sn-gather-idle-soldiers-at-center 0) ;【陸戦ユニットをマップの中央に集合させるか】
	(disable-self)
)


;------------------区切り--------------------------------

;● 町の人
(defrule
	(true)
=>
	(set-strategic-number sn-percent-civilian-builders 35 ) ;【建築を行う町の人の割合(％)】
	(set-strategic-number sn-percent-civilian-explorers 65 ) ;【探索を行う町の人の割合(％)】
	(set-strategic-number sn-percent-civilian-gatherers 0 ) ;【収集を行う町の人の割合(％)】

	(set-strategic-number sn-cap-civilian-builders 20 ) ;【建設に割り当てる町の人の最大人数】
	(set-strategic-number sn-minimum-civilian-explorers 2 ) ;【探索に割り当てる町の人の最少人数】
	(set-strategic-number sn-cap-civilian-explorers 2 ) ;【探索に割り当てる町の人の最大人数】
	(set-strategic-number sn-cap-civilian-gatherers 200 ) ;【収集に割り当てる町の人の最大人数】

	(set-strategic-number sn-maximum-gaia-attack-response 0 ) ;【野生動物から攻撃を受けた際、反撃を行う町の人の最大人数】
	(disable-self)
)

;● 建設
(defrule
	(true)
=>

	(set-strategic-number sn-max-build-plan-gatherer-percentage 50 ) ;【収集者が建設に割り当てられる最大の割合(％)】
	(set-strategic-number sn-minimum-town-size 5 ) ;【町の最小範囲】
	(set-strategic-number sn-maximum-town-size 8 ) ;【町の最大範囲】
	(set-strategic-number sn-minimum-water-body-size-for-dock 400 ) ;【港を建てる水域の最小タイル数】
	(set-strategic-number sn-required-forest-tiles 0 ) ;【最初の伐採所を建設する森として認識する森のタイル数】
	(set-strategic-number sn-mill-max-distance 100 ) ;【粉引き所の町の中心からの最大距離】
	(set-strategic-number sn-camp-max-distance 18 ) ;【伐採所及び採掘所の町の中心からの最大距離】
	(set-strategic-number sn-minimum-dropsite-buffer 50 ) ;【集積所を敵の町の中心から離す距離】
	(set-strategic-number sn-random-placement-factor 10 ) ;【建物を建てる場所を、予定よりどの程度ずらしても構わないか】
	(disable-self)
)

;● 探索
(defrule
	(true)
=>

	(set-strategic-number sn-total-number-explorers 4 ) ;【探索に割り当てるユニットの総数】
	(set-strategic-number sn-percent-exploration-required 5 ) ;【最低限達成すべき開拓率(％)】
	(set-strategic-number sn-initial-exploration-required 0 ) ;【建物を建設する前に探索する割合(％)】
	(set-strategic-number sn-blot-size 2 ) ;【未開拓領域とみなして探索する領域】
	(set-strategic-number sn-percent-half-exploration 10 ) ;【探索する町の人を半分に減らす前までに探索しておくべきマップの開拓率(％)】
	(set-strategic-number sn-number-enemy-objects-required 10 ) ;【探索する町の人を最少人数に減らす前までに発見しておくべき敵オブジェクト数】
	(set-strategic-number sn-blot-exploration-map 0 ) ;【すでに探索された領域を再び探索するか】
	(set-strategic-number sn-coop-share-information 1 ) ;【同盟者と開拓領域についての情報を共有するか】
	(disable-self)
)


;● 収集
(defrule
	(true)
=>

	(set-strategic-number sn-food-gatherer-percentage 80 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 20 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 0 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 0 ) ;【石を収集する町の人の割合(％)】

	(set-strategic-number sn-food-dropsite-distance 100 ) ;【町の人が食料を歩いて持ち運ぶ最大のタイル数】
	(set-strategic-number sn-wood-dropsite-distance 100 ) ;【町の人が木を歩いて持ち運ぶ最大のタイル数】
	(set-strategic-number sn-gold-dropsite-distance 100 ) ;【町の人が金を歩いて持ち運ぶ最大のタイル数】
	(set-strategic-number sn-stone-dropsite-distance 100 ) ;【町の人が石を歩いて持ち運ぶ最大のタイル数】
	(disable-self)
)
(defrule
	(true)
=>
	(set-strategic-number sn-maximum-food-drop-distance 18 ) ;【町の人が木苺、羊を認識する最大距離】
	(set-strategic-number sn-maximum-hunt-drop-distance 15 ) ;【町の人が鹿を認識する最大距離】
	(set-strategic-number sn-maximum-fish-boat-drop-distance 100 ) ;【漁船が魚を認識する最大距離】
	(set-strategic-number sn-maximum-wood-drop-distance 20 ) ;【町の人が森を認識する最大距離】
	(set-strategic-number sn-maximum-gold-drop-distance 35 ) ;【町の人が金鉱を認識する最大距離】
	(set-strategic-number sn-maximum-stone-drop-distance 35 ) ;【町の人が石地を認識する最大距離】

	(set-strategic-number sn-retask-gather-amount 0 ) ;【特定資源を収集中の町の人が、最低限収集すべき資源量】
	(set-strategic-number sn-max-retask-gather-amount 40 ) ;【特定資源を収集中の町の人が、最大限収集すべき資源量】
	(set-strategic-number sn-use-by-type-max-gathering 0 ) ;【(set-strategic-number sn-retask-gather-amountと(set-strate	gic-number sn-max-retask-gather-amountを資源別に適用するか】
	(set-strategic-number sn-minimum-boar-hunt-group-size 10 ) ;【猪を狩る最少人数】
	(disable-self)
)
(defrule
	(map-type scandanavia)
=>
	(set-strategic-number sn-maximum-hunt-drop-distance 25 ) ;【町の人が鹿を認識する最大距離】
	(disable-self)
)

;● 軍事ユニット
(defrule
	(true)
=>

	(set-strategic-number sn-easier-reaction-percentage 70 ) ;【視界内の敵に対する反応(％)】
	(set-strategic-number sn-easiest-reaction-percentage 100 ) ;【視界内の敵に対する反応(％)】
	(set-strategic-number sn-group-commander-selection-method 1 ) ;【グループの司令官を決める方法】
	(set-strategic-number sn-attack-group-gather-spacing 5 ) ;【そのグループが集合したと認められる、集合地点から各ユニットへの相対距離】
	(set-strategic-number sn-consecutive-idle-unit-limit 5 ) ;【グループを待機状態と見なすまでの秒数】
	(set-difficulty-parameter ability-to-dodge-missiles 0);飛び道具を避ける度合い0(最高) 〜 100(最低)
	(set-difficulty-parameter ability-to-maintain-distance 20);射程を持つユニットが目標との距離を保つ度合い0(最高) 〜 100(最低)
	(disable-self)
)

;● 陸戦
(defrule
	(true)
=>

	(set-strategic-number sn-number-attack-groups 0 ) ;【陸戦攻撃グループの数】
	(set-strategic-number sn-minimum-attack-group-size 0 ) ;【陸戦攻撃グループの最小人数】
	(set-strategic-number sn-maximum-attack-group-size 0 ) ;【陸戦攻撃グループの最大人数】

	(set-strategic-number sn-number-defend-groups 100 ) ;【陸戦防御グループの数】
	(set-strategic-number sn-minimum-defend-group-size 4 ) ;【陸戦防御グループの最小人数】
	(set-strategic-number sn-maximum-defend-group-size 5 ) ;【陸戦防御グループの最大人数】
	(disable-self)
)
(defrule
	(true)
=>
	(set-strategic-number sn-number-explore-groups 1 ) ;【陸戦探索グループの数】
	(set-strategic-number sn-minimum-explore-group-size 1 ) ;【陸戦探索グループの最小人数】
	(set-strategic-number sn-maximum-explore-group-size 1 ) ;【陸戦探索グループの最大人数】
	(set-strategic-number sn-percentage-explore-exterminators 0 ) ;【陸戦探索グループに農民狩りを行わせる割合(％)】

	(set-strategic-number sn-percent-attack-soldiers 100 ) ;【attack-nowに参加する陸戦ユニットの割合(％)】
	(set-strategic-number sn-gather-idle-soldiers-at-center 0) ;【陸戦ユニットをマップの中央に集合させるか】
	(disable-self)
)

;● 海戦
(defrule
	(true)
=>

	(set-strategic-number sn-number-boat-attack-groups 0 ) ;【海戦攻撃グループの数】
	(set-strategic-number sn-minimum-boat-attack-group-size 0 ) ;【海戦攻撃グループの最小人数】
	(set-strategic-number sn-maximum-boat-attack-group-size 0 ) ;【海戦攻撃グループの最大人数】

	(set-strategic-number sn-number-boat-defend-groups 1 ) ;【海戦防御グループの数】
	(set-strategic-number sn-minimum-boat-defend-group-size 1 ) ;【海戦防御グループの最小人数】
	(set-strategic-number sn-maximum-boat-defend-group-size 30 ) ;【海戦防御グループの最大人数】
	(disable-self)
)
(defrule
	(true)
=>

	(set-strategic-number sn-number-boat-explore-groups 0 ) ;【海戦探索グループの数】
	(set-strategic-number sn-minimum-boat-explore-group-size 0 ) ;【海戦探索グループの最小人数】
	(set-strategic-number sn-maximum-boat-explore-group-size 0 ) ;【海戦探索グループの最大人数】

	(set-strategic-number sn-percent-attack-boats 100 ) ;【attack-nowに参加する海戦ユニットの割合(％)】
	(disable-self)
)

;● 攻撃
(defrule
	(true)
=>

	(set-strategic-number sn-attack-group-size-randomness 0 ) ;【攻撃グループの最小人数のランダムさ】
	(set-strategic-number sn-attack-intelligence 1 ) ;【intelligent attack systemを使用するか】
	(set-strategic-number sn-initial-attack-delay 0 ) ;【初回の攻撃の延期秒数】
	(set-strategic-number sn-initial-attack-delay-type 0 ) ;【初回の攻撃を延期する条件】
	(set-strategic-number sn-attack-separation-time-randomness 0 ) ;【攻撃の間隔のランダムさ】
	(set-strategic-number sn-group-leader-defense-distance 5 ) ;【最も重要な攻撃グループの司令官が護衛される距離】
	(disable-self)
)

;● 防御
(defrule
	(true)
=>

	(set-strategic-number sn-town-defend-priority 1 ) ;【町を防御グループが守る優先度】
	(set-strategic-number sn-forage-defend-priority 2 ) ;【食料源を防御グループが守る優先度】
	(set-strategic-number sn-gold-defend-priority 3 ) ;【金鉱を防御グループが守る優先度】
	(set-strategic-number sn-stone-defend-priority 4 ) ;【石地を防御グループが守る優先度】
	(set-strategic-number sn-relic-defend-priority 5 ) ;【聖なる箱を防御グループが守る優先度】
	(set-strategic-number sn-zero-priority-distance 5 ) ;【優先度0の場合の防衛距離】
	(disable-self)
)
(defrule
	(true)
=>

	(set-strategic-number sn-allow-civilian-defense 0 ) ;【町の人が防衛に参加するか】
	(set-strategic-number sn-dock-defend-priority 1 ) ;【港の防衛を行うか】
	(set-strategic-number sn-task-ungrouped-soldiers 0 ) ;【グループ化されていない陸戦ユニットを散開させ、個別に町の領域を警備させるか】
	(set-strategic-number sn-sentry-distance 0 ) ;【防御グループが町を守る際の距離】
	(set-strategic-number sn-defense-distance 0 ) ;【防御グループが町以外のものを守る際の、その対象との距離】
	(set-strategic-number sn-defend-overlap-distance 30 ) ;【個々の防御グループが受け持つ円状の防御範囲】
	(set-strategic-number sn-sentry-distance-variation 5 ) ;【他のコードで設定した防御範囲を、どの程度変更してもかまわないか】
	(set-strategic-number sn-percent-enemy-sighted-response 100 ) ;【他のユニットが攻撃を受けたときに、待機中の軍隊が反撃に加わる割合(％)】
	(set-strategic-number sn-enemy-sighted-response-distance 30 ) ;【攻撃を受けた際、その地点からどの程度の範囲に存在するユニットが反撃を行うか】
	(disable-self)
)

;● 攻撃目標
(defrule
	(true)
=>

	(set-strategic-number sn-attack-winning-player 1 ) ;【現在勝っているプレイヤーに対して攻撃を行うかどうか】
	(set-strategic-number sn-attack-winning-player-factor 100 ) ;【勝利しているプレイヤーに対して攻撃を行う割合(％)】

	(set-strategic-number sn-target-evaluation-ally-proximity 0 ) ;【目標を同盟者との近さによって優先する倍率】
	(set-strategic-number sn-target-evaluation-attack-attempts 0 ) ;【目標をattack-attemptsによって優先する倍率】
	(set-strategic-number sn-target-evaluation-damage-capability 0 ) ;【目標をdamege-capabilityによって優先する倍率】
	(set-strategic-number sn-target-evaluation-distance 50 ) ;【目標を距離によって優先する倍率】
	(set-strategic-number sn-target-evaluation-hitpoints 50 ) ;【目標をＨＰによって優先する倍率】
	(disable-self)
)
(defrule
	(true)
=>

	(set-strategic-number sn-target-evaluation-kills 0 ) ;【目標を倒した人数によって優先する倍率】
	(set-strategic-number sn-target-evaluation-range 80 ) ;【目標を射程によって優先する倍率】
	(set-strategic-number sn-target-evaluation-rof 30 ) ;【目標を射撃速度によって優先する倍率】
	(set-strategic-number sn-target-evaluation-in-progress 50 ) ;【攻撃中のターゲットを目標とさせる作用】
	(set-strategic-number sn-target-evaluation-time-kill-ratio 100 ) ;【ターゲットを倒す時間による作用】
	(set-strategic-number sn-target-evaluation-continent 0 ) ;【目標を同大陸にいる敵司令官によって優先する加数】
	(set-strategic-number sn-target-evaluation-siege-weapon 60 ) ;【砲撃兵器に動かないターゲットを目標とさせる加数】
	(set-strategic-number sn-target-evaluation-boat 70 ) ;【陸戦ユニットが敵海戦ユニットを目標とする加数】
	(set-strategic-number sn-target-evaluation-randomness 0 ) ;【目標を決定する際のランダムさ】
	(disable-self)
)
;(defrule
;	(true)
;=>
;	(set-strategic-number sn-special-attack-type1 villager ) ;【攻撃目標とする対象の種類】
;	(set-strategic-number sn-special-attack-influence1 100 ) ;【(set-strategic-number sn-special-attack-type1で指定した対象物を攻撃する優先度】
;	(disable-self)
;)
(defrule
	(or
		(enemy-captured-relics)
		(players-civ any-enemy aztec)
	)
=>
	(set-strategic-number sn-special-attack-type1 1)
)

;● 外交
(defrule
	(true)
=>
	(set-strategic-number sn-coop-share-attacking 1 ) ;【同盟者を守るための攻撃を行うか】
	(set-strategic-number sn-coop-share-attacking-interval 5 ) ;【他のコンピュータープレイヤーに救援を求めるまでの秒数】
;	(set-strategic-number sn-minimum-peace-like-level 0 ) ;【同盟を結ぶ際に必要とする友好度(％)】
;	(set-strategic-number sn-attack-diplomacy-impact 100 ) ;【攻撃を受けた際の、外交姿勢への影響の度合(％)】
;	(set-strategic-number sn-hits-before-alliance-change 1 ) ;【同盟を破棄するまでの、同盟者からの攻撃回数】
	(set-strategic-number sn-minimum-amount-for-trading 0 ) ;【資源をどの程度保有した上で交易を行うか】
	(disable-self)
)

;● 未訳
(defrule
	(true)
=>
;	(set-strategic-number sn-relic-return-distance 10 ) ;【聖職者が箱を取りに行く最大距離】

;	(set-strategic-number sn-build-frequency 1 ) ;【未訳】
;	(set-strategic-number sn-max-skips-per-attempt 10 ) ;【未訳】
;	(set-strategic-number sn-number-build-attempts-before-skip 25 ) ;【未訳】
;	(set-strategic-number sn-scale-maximum-attack-group-size 0 ) ;【未訳】
;	(set-strategic-number sn-scale-minimum-attack-group-size 1 ) ;【未訳】
;	(set-strategic-number sn-scaling-frequency 10 ) ;【未訳】
	(disable-self)
)


;● 情報無し
(defrule
	(true)
=>

;	(set-strategic-number sn-do-not-scale-for-difficulty-level  ) ;【情報無し】
	(set-strategic-number sn-gather-defense-units 1 ) ;【情報無し】
;	(set-strategic-number sn-group-form-distance  ) ;【情報無し】
;	(set-strategic-number sn-ignore-attack-group-under-attack  ) ;【情報無し】
	(set-strategic-number sn-intelligent-gathering 1 ) ;【情報無し】
;	(set-strategic-number sn-number-forward-builders  ) ;【情報無し】
;	(set-strategic-number sn-number-max-skip-cycles  ) ;【情報無し】
	(disable-self)
)


;------------------区切り--------------------------------

;●家
(defrule
	(current-age < castle-age)
	(housing-headroom < 3)
	(can-build house)
=>
	(build house)
;	(chat-local-to-self "家を建てます。")
)
(defrule
	(or
		(current-age >= castle-age)
		(building-type-count-total dock >= 1 )
	)
	(housing-headroom < 5)
	(can-build house)
=>
	(build house)
;	(chat-local-to-self "家を建てます。")
)


;●粉ひき所
(defrule
	(building-type-count-total mill < 1)
	(or
		(resource-found food)
		(or
			(map-type scandanavia)
			(map-type nomad)
		)
	)
	(can-build mill)
=>
	(build mill)
	(chat-local-to-self "3)粉引き所を作ります。")
	(set-strategic-number sn-minimum-civilian-explorers 0 ) ;【探索に割り当てる町の人の最少人数】
	(set-strategic-number sn-cap-civilian-explorers 0 ) ;【探索に割り当てる町の人の最大人数】
	(disable-self)
)
(defrule
	(building-type-count-total mill < 1)
	(current-age >= feudal-age)
	(can-build-with-escrow mill)
=>
	(release-escrow wood)
	(build mill)
	(chat-local-to-self "3)粉引き所を作ります。")
)
(defrule
	(map-type yucatan)
	(sheep-and-forage-too-far)
	(building-type-count-total mill < 2)
	(can-build-with-escrow mill)
=>
	(release-escrow wood)
	(build mill)
	(chat-local-to-self "3)粉引き所を作ります。")
)
;●建設場所の制御
(defrule
	(timer-triggered 1)
=>
;   (chat-local-to-self "建設制御を解除します。")
	(disable-timer 1)
	(set-goal CONTROL_TOWNSIZE NO)
)
(defrule
	(current-age <= castle-age)
	(goal CONTROL_TOWNSIZE NO)
=>
	(set-strategic-number sn-minimum-town-size 15)
	(set-strategic-number sn-maximum-town-size 20)
)
(defrule
	(current-age <= imperial-age)
	(goal CONTROL_TOWNSIZE NO)
=>
	(set-strategic-number sn-minimum-town-size 20)
	(set-strategic-number sn-maximum-town-size 25)
)
(defrule
	(goal SINKA 8)
	(goal CONTROL_TOWNSIZE NO)
=>
	(set-strategic-number sn-minimum-town-size 30)
	(set-strategic-number sn-maximum-town-size 35)
)
(defrule
	(game-time > 3600)
	(goal CONTROL_TOWNSIZE NO)
=>
	(set-strategic-number sn-minimum-town-size 30)
	(set-strategic-number sn-maximum-town-size 35)
)

;●伐採所
(defrule
	(resource-found wood)
	(or
		(dropsite-min-distance wood > 5)
		(building-type-count-total lumber-camp < 1)
	)
	(can-build lumber-camp)
	(unit-type-count-total villager >= 14)
=>
	(chat-local-to-self "4)伐採所を作ります。")
	(build lumber-camp)
)
(defrule
	(or
		(current-age >= castle-age)
		(goal SINKA 3)
	)
	(building-type-count-total lumber-camp < 2)
	(can-build lumber-camp)
=>
	(chat-local-to-self "4)伐採所を作ります。")
	(build lumber-camp)
)
;●畑(アラビア)
(defrule
;	(goal MAP_TYPE 0)
	(unit-type-count-total villager >= 16)
	(current-age == dark-age)
	(building-type-count-total farm <= 14)
;	(idle-farm-count <= 3)
	(can-build farm)
=>
	(build farm)
	;(chat-local-to-self "畑を作ります。")
)

(defrule
;	(goal MAP_TYPE 0)
	(current-age == feudal-age)
	(or
		(building-type-count-total stable >= 1)
		(or
			(building-type-count-total archery-range >= 1)
			(building-type-count-total market >= 1)
		)
	)
	(building-type-count-total blacksmith >= 1)
	(idle-farm-count < 2)
	(can-build farm)
=>
	(build farm)
	;(chat-local-to-self "畑を作ります。")
)
(defrule
;	(or
;		(goal MAP_TYPE 0)
		(wood-amount >= 100)
;	)
	(current-age >= castle-age)
;	(building-type-count-total farm <= 25)
	(idle-farm-count < 2)
	(can-build farm)
=>
	(build farm)
	;(chat-local-to-self "畑を作ります。")
)


;●畑(大陸)
(defrule
(false)
	(goal MAP_TYPE 1)
	(unit-type-count-total villager >= 16)
	(or
		(unit-type-count-total fishing-ship >= 4)
		(wood-amount >= 200)
	)
	(current-age <= feudal-age)
	(building-type-count-total farm <= 8)
	(idle-farm-count <= 3)
	(can-build farm)
=>
	(build farm)
	;(chat-local-to-self "畑を作ります。")
)

(defrule
(false)
	(goal MAP_TYPE 1)
	(current-age == feudal-age)
	(or
		(building-type-count-total stable >= 1)
		(or
			(building-type-count-total archery-range >= 1)
			(building-type-count-total market >= 1)
		)
	)
	(building-type-count-total blacksmith >= 1)
;	(building-type-count-total farm <= 14)
	(idle-farm-count <= 3)
	(can-build farm)
=>
	(build farm)
	;(chat-local-to-self "畑を作ります。")
)
(defrule
(false)
	(or
		(goal MAP_TYPE 1)
		(wood-amount >= 100)
	)
	(current-age >= castle-age)
;	(building-type-count-total farm <= 25)
	(idle-farm-count < 2)
	(can-build farm)
=>
	(build farm)
	;(chat-local-to-self "畑を作ります。")
)

;●畑削除
(defrule
(false)
	(not(town-under-attack))
	(goal DEL_FARM NO)
	(idle-farm-count >= 5)

=>
	(set-goal DEL_FARM YES)
)
(defrule
	(goal DEL_FARM YES)
	(idle-farm-count != 0)
=>
	(delete-building farm)
)
(defrule
	(goal DEL_FARM YES)
	(idle-farm-count == 0)
=>
	(set-goal DEL_FARM NO)
)

;●採掘所(石)
(defrule
	(can-build mining-camp)
	(resource-found stone)
	(dropsite-min-distance stone > 6)
	(or
		(current-age == feudal-age)
		(goal SINKA 1)
	)
=>
	(release-escrow wood)
	(build mining-camp)
	(chat-local-to-self "6)採掘所を作ります。")
)
;●採掘所(金)
(defrule
	(or
		(goal SINKA 1)
		(current-age == feudal-age)
	)
	(dropsite-min-distance gold > 6)
	(resource-found gold)
	(can-build mining-camp)
=>
	(set-strategic-number sn-camp-max-distance 35 ) ;【伐採所及び採掘所の町の中心からの最大距離】
	(build mining-camp)
	(chat-local-to-self "5)採掘所を作ります。")
)

;●三つ目以降の採掘所
(defrule
	(building-type-count-total monastery >= 1 )
	(current-age >= castle-age)
	(resource-found gold)
	(dropsite-min-distance gold > 6)
	(can-build-with-escrow mining-camp)
=>
	(release-escrow wood)
	(build mining-camp)
	(chat-local-to-self "5)採掘所を作ります。")
)
(defrule
	(building-type-count-total monastery >= 1 )
	(current-age >= castle-age)
	(resource-found stone)
	(dropsite-min-distance stone > 6)
	(can-build-with-escrow mining-camp)
=>
	(release-escrow wood)
	(build mining-camp)
	(chat-local-to-self "6)採掘所を作ります。")
)
;●採掘所が5つを超えたら採集距離を広げる
(defrule
	(building-type-count-total mining-camp > 3)
=>
	(set-strategic-number sn-camp-max-distance 600 ) ;【伐採所及び採掘所の町の中心からの最大距離】
	(set-strategic-number sn-wood-dropsite-distance 600 ) ;【町の人が木を歩いて持ち運ぶ最大のタイル数】
	(set-strategic-number sn-gold-dropsite-distance 600 ) ;【町の人が金を歩いて持ち運ぶ最大のタイル数】
	(set-strategic-number sn-stone-dropsite-distance 600 ) ;【町の人が石を歩いて持ち運ぶ最大のタイル数】
	(chat-local-to-self "30)採集領域を広げます")
	(disable-self)
)
;●射手育成所
(defrule
	(or
		(civ-selected mayan)
		(civ-selected chinese)
	)
	(goal ELUNIQ YES)
	(building-type-count-total monastery >= 1 )
	(building-type-count-total archery-range < 1)
	(can-build-with-escrow archery-range)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(release-escrow wood)
	(build archery-range)
	(chat-local-to-self "7)射手育成所を建てます。")
)
(defrule
	(or
		(goal ARCHER YES)
		(or
			(goal C-ARCHER YES)
			(goal SANPEI YES)
		)
	)
	(building-type-count-total monastery >= 1 )
	(building-type-count-total archery-range < 2)
	(current-age <= castle-age)
	(can-build-with-escrow archery-range)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(release-escrow wood)
	(build archery-range)
	(chat-local-to-self "7)射手育成所を建てます。")
)
(defrule
	(or
		(goal ARCHER YES)
		(or
			(goal C-ARCHER YES)
			(goal SANPEI YES)
		)
	)
	(building-type-count-total monastery >= 1 )
	(building-type-count-total archery-range < 3)
	(current-age == imperial-age)
	(can-build-with-escrow archery-range)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(release-escrow wood)
	(build archery-range)
	(chat-local-to-self "7)射手育成所を建てます。")
)
;●騎兵育成所
(defrule
	(or
		(goal RAKUDA YES)
		(or
			(goal KNIGHT YES)
			(goal PALADIN YES)
		)
	)
	(building-type-count-total monastery >= 1 )
	(building-type-count-total stable < 2 )
	(can-build-with-escrow stable)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(release-escrow wood)
	(build stable)
	(chat-local-to-self "7)騎兵育成所を建てます。")
)

;●戦士育成所(一つ目)
(defrule
	(building-type-count-total barracks == 0 )
	(or
		(current-age >= castle-age)
		(goal SINKA 3)
	)
	(can-build-with-escrow barracks)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(release-escrow wood)
	(build barracks)
	(chat-local-to-self "7)戦士育成所を建てます。")
)
;●戦士育成所(二つ目以降)
(defrule
	(or
		(and
			(or
				(goal HOHEI YES)
				(goal EAGLE YES)
			)
			(building-type-count-total barracks < 3 )
		)
		(and
			(goal SPEAR YES)
			(building-type-count-total barracks < 2 )
		)
	)
	(building-type-count-total monastery >= 1 )
	(can-build-with-escrow barracks)
=>
	(release-escrow wood)
	(build barracks)
	(chat-local-to-self "7)戦士育成所を建てます。")
)

;●鉄工所
(defrule
	(current-age >= feudal-age)
;	(wood-amount >= 180)
	(can-build-with-escrow blacksmith)
	(building-type-count-total blacksmith == 0 )
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 20)
	(set-strategic-number sn-maximum-town-size 25)
	(enable-timer 1 5)
	(release-escrow wood)
	(build blacksmith)
	(chat-local-to-self "鉄工所を建てます。")
)
;●市場
(defrule
	(can-build-with-escrow market)
	(building-type-count-total market == 0 )
=>
	(release-escrow wood)
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 13)
	(set-strategic-number sn-maximum-town-size 16)
	(enable-timer 1 5)
	(build market)
	(chat-local-to-self "市場を建てます。")
)

;●城
(defrule
	(can-build castle)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 5)
	(set-strategic-number sn-maximum-town-size 16)
	(enable-timer 1 5)
	(build castle)
	(chat-local-to-self "城")
)

;●砲台
(defrule
	(or
		(building-type-count-total castle >= 2)
		(goal ELUNIQ NO)
	)
	(can-build bombard-tower)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 5)
	(set-strategic-number sn-maximum-town-size 14)
	(enable-timer 1 5)
	(build bombard-tower)
	(chat-local-to-self "砲台")
)
;●塔
(defrule
	(goal MAP_TYPE 0)
	(building-type-count-total watch-tower-line < 2)
	(can-build watch-tower-line)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 1)
	(set-strategic-number sn-maximum-town-size 8)
	(enable-timer 1 5)
	(build watch-tower-line)
	(chat-local-to-self "塔")
)
(defrule
	(goal MAP_TYPE 0)
	(goal F_RUSH YES)
	(players-current-age any-enemy <= feudal-age)
	(can-build watch-tower-line)
	(building-type-count-total watch-tower-line < 6)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 1)
	(set-strategic-number sn-maximum-town-size 8)
	(enable-timer 1 5)
	(build watch-tower-line)
;	(chat-local-to-self "塔")
)
(defrule
	(goal MAP_TYPE 1)
	(building-type-count-total watch-tower-line < 2)
	(can-build watch-tower-line)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 1)
	(set-strategic-number sn-maximum-town-size 9)
	(enable-timer 1 5)
	(build watch-tower-line)
	(chat-local-to-self "塔")
)
(defrule
	(goal MAP_TYPE 1)
	(can-build watch-tower-line)
	(building-type-count-total watch-tower-line < 4)
=>
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 1)
	(set-strategic-number sn-maximum-town-size 11)
	(enable-timer 1 5)
	(build watch-tower-line)
	(chat-local-to-self "塔")
)

;●包囲攻撃訓練所
(defrule
	(or
		(goal RAM YES)
		(or
			(goal SCORP YES)
			(goal TOUSEKI YES)
		)
	)
	(building-type-count-total monastery >= 1 )
	(building-type-count-total siege-workshop < 1 )
	(can-build-with-escrow siege-workshop)
=>
	(release-escrow wood)
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(build siege-workshop)
	(chat-local-to-self "包囲攻撃訓練所")
)

;●神殿
(defrule
	(building-type-count-total monastery < 1 )
	(can-build-with-escrow monastery)
=>
	(release-escrow wood)
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(build monastery)
	(chat-local-to-self "神殿")
)
;●学門所
(defrule
	(building-type-count-total monastery >= 1 )
	(building-type-count-total university == 0)
	(can-build-with-escrow university)
=>
	(release-escrow wood)
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 18)
	(set-strategic-number sn-maximum-town-size 22)
	(enable-timer 1 5)
	(build university)
	(chat-local-to-self "学門所")
)
;●町の中心
(defrule
	(building-type-count-total castle >= 1)
	(building-type-count-total town-center < 3 )
	(can-build-with-escrow town-center)
=>
	(release-escrow wood)
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 10)
	(set-strategic-number sn-maximum-town-size 15)
	(enable-timer 1 5)
	(build town-center)
	(chat-local-to-self "町の中心")
)
;●町の中心(nomad)
(defrule
	(building-type-count-total town-center == 0 )
	(can-build-with-escrow town-center)
=>
	(build town-center)
	(chat-local-to-self "町の中心")
)

;●港
(defrule
	(or
		(goal MAP_TYPE 1)
		(goal SAKANA YES)
	)
	(building-type-count-total lumber-camp >= 1)
	(building-type-count-total dock < 1 )
	(can-build dock)
=>
	(build dock)
	(chat-local-to-self "港")
)
(defrule
	(goal MAP_TYPE 1)
	(or
		(current-age >= feudal-age)
		(goal SINKA 1)
	)
	(building-type-count-total dock < 3 )
	(can-build-with-escrow dock)
=>
	(release-escrow wood)
	(build dock)
	(chat-local-to-self "港")
)


;●壁・門
;●壁建設許可
(defrule
(false)
	(or
		(civ-selected mayan)
		(players-civ any-ally mayan)
	)
=>
	(enable-wall-placement 2)
	(disable-self)
)

;●壁建設
(defrule
(false)
	(or
		(civ-selected mayan)
		(players-civ any-ally mayan)
	)
	(can-build-wall 1 stone-wall-line)
	(can-afford-complete-wall 1 stone-wall-line)
=>
	(build-wall 2 stone-wall-line)
;	(chat-local-to-self "町を壁で囲みます。")
)

;●門建設
(defrule
(false)
	(or
		(civ-selected mayan)
		(players-civ any-ally mayan)
	)
	(can-build-gate 1)
=>
	(build-gate 1)
;	(chat-local-to-self "門を建てます。")
)

;●柵建設許可
(defrule
	(false)
=>
	(enable-wall-placement 0)
	(disable-self)
)

;●柵建設
(defrule
	(false)
	(can-build-wall 0 palisade-wall)
	(can-afford-complete-wall 0 palisade-wall)
=>
	(build-wall 0 palisade-wall)
;	(chat-local-to-self "町を壁で囲みます。")
)


;------------------区切り--------------------------------

;●町の人293 待機中の人(女)993 待機中の人(男)

;●機織り
(defrule
	(population >= 8)
	(can-research ri-loom)
=>
	(research ri-loom)
;	(chat-local-to-self "機織りの研究をします。")
)
;●領主ボタンＰＵＳＨ
(defrule
	(can-research feudal-age)
	(unit-type-count-total villager >= 25)
=>
	(research feudal-age)
	(set-goal SINKA 1)
	(chat-local-to-self "30)領主ボタンＰＵＳＨ")
)
;●領主入り
(defrule
	(current-age == feudal-age)
=>
	(set-goal SINKA 2)
	(disable-self)
)

;●城主ボタンＰＵＳＨ
(defrule
	(can-research-with-escrow castle-age)
=>
	(set-goal SINKA 3)
	(release-escrow gold)
	(release-escrow food)
	(research castle-age)
	(chat-local-to-self "30)城主ボタンＰＵＳＨ")
)
;●城主入り
(defrule
	(current-age == castle-age)
=>
	(set-goal SINKA 4)
	(disable-self)
)

;●帝王スムーズ化
(defrule
	(false)
	(current-age == castle-age)
	(food-amount >= 1000)
=>
	(set-escrow-percentage gold 80)
	(set-escrow-percentage food 0)
)
(defrule
	(false)
	(current-age == castle-age)
	(gold-amount >= 800)
=>
	(set-escrow-percentage food 80)
	(set-escrow-percentage gold 0)
)

;●帝王ボタンＰＵＳＨ
(defrule
	(can-research-with-escrow imperial-age)
=>
	(set-goal SINKA 5)
	(release-escrow gold)
	(release-escrow food)
	(research imperial-age)
	(chat-local-to-self "30)帝王ボタンＰＵＳＨ")
)
;●帝王入り
(defrule
	(current-age == imperial-age)
=>
	(set-goal SINKA 6)
	(disable-self)
)
;●手押し車
(defrule
	(can-research-with-escrow ri-wheel-barrow)
	(current-age >= feudal-age)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-wheel-barrow)
	(chat-local-to-self "手押し車の研究をします。")
)
;●荷車
(defrule
	(can-research-with-escrow ri-hand-cart )
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-hand-cart)
	(chat-local-to-self "荷車の研究をします。")
)
;●見張り
(defrule
	(or
		(goal SINKA 3)
		(current-age >= castle-age)
	)
	(can-research ri-town-watch )
=>
	(research ri-town-watch )
	(chat-local-to-self "見張りの研究をします。")
)
;●巡回
(defrule
	(or
		(current-age == imperial-age)
		(goal SINKA 5)
	)
	(can-research ri-town-patrol )
=>
	(research ri-town-patrol)
	(chat-local-to-self "巡回の研究をします。")
)
;●町の人生産
(defrule
	(current-age == dark-age)
	(unit-type-count-total villager < 28)
	(can-train villager)
=>
	(train villager)
)
(defrule
(false)
	(current-age == feudal-age)
	(unit-type-count-total villager < 40)
	(can-train villager)
=>
	(train villager)
)
(defrule
(false)
	(current-age >= castle-age)
	(unit-type-count villager < 45 )
	(can-train villager)
=>
	(train villager)
)
(defrule
(false)
	(research-completed ri-hand-cart )
	(current-age >= castle-age)
	(unit-type-count-total villager < 60 )
	(can-train villager)
=>
	(train villager)
)
(defrule
	(current-age > dark-age)
	(unit-type-count-total villager < 105 )
	(or
		(not (goal SINKA 8) )
		(unit-type-count-total villager < 65 )
	)
	(unit-type-count 293 == 0)
	(unit-type-count 993 == 0)
	(can-train villager)
=>
	(train villager)
)

;------------------区切り--------------------------------


;●矢羽根
(defrule
	(or
		(building-type-count castle >= 1)
		(or
			(building-type-count watch-tower-line >= 1)
			(goal GARE YES)
		)
	)
	(can-research-with-escrow ri-fletching)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-fletching)
	(chat-local-to-self "矢羽根")
)
;●錐状矢じり
(defrule
	(or
		(building-type-count castle >= 1)
		(goal GARE YES)
	)
	(current-age >= castle-age)
	(can-research-with-escrow ri-bodkin-arrow)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-bodkin-arrow)
	(chat-local-to-self "錐状矢じり")
)
;●小手
(defrule
	(goal GARE YES)
	(can-research-with-escrow ri-bracer)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-bracer)
	(chat-local-to-self "小手")
)

(defrule
	(or
		(building-type-count castle >= 3)
		(or
			(goal ARCHER YES)
			(or
				(goal C-ARCHER YES)
				(or
					(civ-selected chinese)
					(civ-selected mayan)
				)
			)
		)
	)
	(can-research-with-escrow ri-bracer)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-bracer)
	(chat-local-to-self "小手")
)
;●鍛造
(defrule
	(current-age >= castle-age)
	(can-research-with-escrow ri-forging)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-forging)
	(chat-local-to-self "鍛造")
)
;●鋳造
(defrule
	(can-research-with-escrow ri-iron-casting)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-iron-casting)
	(chat-local-to-self "鋳造")
)
;●高温溶鉱炉
(defrule
	(can-research-with-escrow ri-blast-furnace)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-blast-furnace)
	(chat-local-to-self "高温溶鉱炉")
)
;●歩兵用うろこの鎧
(defrule
	(or
		(goal HOHEI YES)
		(or
			(goal SPEAR YES)
			(goal EAGLE YES)
		)
	)
	(can-research-with-escrow ri-scale-mail)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-scale-mail)
	(chat-local-to-self "歩兵用うろこの鎧")
)
(defrule
	(or
		(civ-selected teutonic)
		(civ-selected aztec)
	)
	(current-age >= castle-age)
	(can-research-with-escrow ri-scale-mail)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-scale-mail)
	(chat-local-to-self "歩兵用うろこの鎧")
)

;●歩兵用鎖かたびら
(defrule
	(can-research-with-escrow ri-chain-mail)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-chain-mail)
	(chat-local-to-self "歩兵用鎖かたびら")
)
;●歩兵用甲冑
(defrule
	(can-research-with-escrow ri-plate-mail)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-plate-mail)
	(chat-local-to-self "歩兵用甲冑")
)

;●騎兵用うろこの鎧
(defrule
	(current-age >= castle-age)
;	(or
		(building-type-count-total stable >= 1)
;		(civ-selected persian)
;	)
	(can-research-with-escrow ri-scale-barding)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-scale-barding)
	(chat-local-to-self "騎兵用うろこの鎧")
)
;●騎兵用鎖かたびら
(defrule
	(can-research-with-escrow ri-chain-barding)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-chain-barding)
	(chat-local-to-self "騎兵用鎖かたびら")
)
;●騎兵用甲冑
(defrule
	(can-research-with-escrow ri-plate-barding)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-plate-barding)
	(chat-local-to-self "騎兵用甲冑")
)
;●射手用胸当て
(defrule
	(current-age >= castle-age)
	(or
		(goal ARCHER YES)
		(or
			(goal SANPEI YES)
			(or
				(goal C-ARCHER YES)
				(or
					(civ-selected chinese)
					(civ-selected mayan)
				)
			)
		)
	)
	(can-research-with-escrow ri-padded-archer-armor)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-padded-archer-armor)
	;(chat-local-to-self "射手用胸当て")
)
;●射手用革の鎧
(defrule
	(can-research-with-escrow ri-leather-archer-armor)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-leather-archer-armor)
	(chat-local-to-self "射手用革の鎧")
)
;●弓兵用鎖の鎧
(defrule
	(or
		(goal ARCHER YES)
		(or
			(goal C-ARCHER YES)
			(civ-selected chinese)
		)
	)
	(can-research-with-escrow ri-ring-archer-armor)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-ring-archer-armor)
	(chat-local-to-self "弓兵用鎖の鎧")
)
;------------------区切り--------------------------------

;-------------------------------------------------------------

;●EL−イーグルウォーリアーにUP
(defrule
	(civ-selected mayan)
	(can-research ri-elite-eagle-warrior)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-elite-eagle-warrior)
	(chat-local-to-self "EL−イーグルウォーリアーにUP")
)

;●イーグルウォーリアー生産
(defrule
	(unit-type-count-total eagle-warrior-line < 15)
	(population < 120)
	(civ-selected mayan)
	(goal EAGLE YES)
	(can-train eagle-warrior-line )
=>
	(train eagle-warrior-line )
	;(chat-local-to-self "イーグルウォーリアーを作ります。")
)
;●軍兵にUP
(defrule
	(goal HOHEI YES)
	(can-research-with-escrow ri-man-at-arms)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-man-at-arms)
	(chat-local-to-self "軍兵にUP")
)
;●長剣剣士にUP
(defrule
	(can-research-with-escrow ri-long-swordsman)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-long-swordsman)
	(chat-local-to-self "長剣剣士にUP")
)
;●重剣剣士にUP
(defrule
	(can-research-with-escrow ri-two-handed-swordsman)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-two-handed-swordsman)
	(chat-local-to-self "重剣剣士にUP")
)
;●近衛剣士にUP
(defrule
	(can-research-with-escrow ri-champion)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-champion)
	(chat-local-to-self "近衛剣士にUP")
)

;●歩兵生産
(defrule
	(population < 120)
	(goal HOHEI YES)
	(can-train militiaman-line)
=>
	(train militiaman-line)
	(chat-local-to-self "歩兵を作ります。")
)
;●長槍兵にUP
(defrule
	(goal SPEAR YES)
	(can-research-with-escrow ri-pikeman)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-pikeman)
	(chat-local-to-self "9)長槍兵にUP")
)
;●矛槍兵にUP
(defrule
	(can-research-with-escrow ri-halberdier)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-halberdier)
	(chat-local-to-self "9)矛槍兵にUP")
)

;●槍兵生産
(defrule
	(population < 120)
	(goal SPEAR YES)
	(or
		(unit-type-count-total spearman-line < 10)
		(and
			(players-unit-type-count any-enemy knight-line >= 12)
			(unit-type-count-total spearman-line < 20)
		)
	)
	(can-train spearman-line)
=>
	(train spearman-line)
;	(chat-local-to-self "槍兵を作ります。")
)


;●追跡術
(defrule
	(current-age == imperial-age)
	(can-research ri-tracking )
=>
	(research ri-tracking )
	(chat-local-to-self "追跡術の研究")
)

;●武者修行
(defrule
	(can-research ri-squires)
=>
	(research ri-squires )
	(chat-local-to-self "武者修行の研究")
)

;-------------------------------------------------------------

;●射手生産
(defrule
	(goal ARCHER YES)
	(population < 120)
	(can-train archer-line)
=>
	(train archer-line)
	;(chat-local-to-self "射手を作ります。")
)
;●石弓射手にUP
(defrule
	(goal ARCHER YES)
	(can-research-with-escrow ri-crossbow)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-crossbow)
	(chat-local-to-self "石弓射手にUP")
)
;●重石弓射手にUP
(defrule
	(can-research-with-escrow ri-arbalest)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-arbalest)
	(chat-local-to-self "重石弓射手にUP")
)


;●散兵生産
(defrule
	(goal SANPEI YES)
	(current-age <= castle-age)
	(population < 120)
	(unit-type-count-total skirmisher-line < 10)
	(can-train skirmisher-line)
=>
	(train skirmisher-line  )
	;(chat-local-to-self "散兵を作ります。")
)
;●精鋭散兵にUP
(defrule
	(goal SANPEI YES)
	(can-research-with-escrow ri-elite-skirmisher )
=>
	(release-escrow gold)
	(research ri-elite-skirmisher )
	(chat-local-to-self "精鋭散兵にUP")
)
;●弓騎兵生産
(defrule
	(goal C-ARCHER YES)
	(population < 120)
	(unit-type-count-total cavalry-archer-line < 10)
	(can-train skirmisher-line)
=>
	(train cavalry-archer-line)
	;(chat-local-to-self "弓騎兵を作ります。")
)
;●重弓騎兵にUP
(defrule
	(goal C-ARCHER YES)
	(can-research-with-escrow ri-heavy-cavalry-archer)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-heavy-cavalry-archer )
	(chat-local-to-self "重弓騎兵にUP")
)

;●砲撃手生産
(defrule
	(goal CANON YES)
	(unit-type-count-total hand-cannoneer < 10)
	(population < 120)
	(can-train hand-cannoneer )
=>
	(train hand-cannoneer  )
	(chat-local-to-self "砲撃手を作ります。")
)

;●弓懸の研究
(defrule
	(or
		(goal ARCHER YES)
		(or
			(goal SANPEI YES)
			(or
				(goal C-ARCHER YES)
				(or
					(civ-selected chinese)
					(civ-selected mayan)
				)
			)
		)
	)
	(can-research-with-escrow ri-thumb-ring )
=>
	(release-escrow food)
	(research ri-thumb-ring )
	(chat-local-to-self "弓懸の研究")
)
;●パルティアン戦術
(defrule
	(goal C-ARCHER YES)
	(can-research-with-escrow ri-parthian-tactics )
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-parthian-tactics )
	(chat-local-to-self "パルティアン戦術の研究")
)



;-------------------------------------------------------------



;●騎兵生産
(defrule
	(goal KIHEI YES)
	(unit-type-count-total scout-cavalry-line  < 20)
	(population < 120)
	(can-train scout-cavalry-line)
=>
	(train scout-cavalry-line )
	;(chat-local-to-self "騎兵を作ります。")
)

;●軽騎兵にUP
(defrule
	(goal KIHEI YES)
	(can-research-with-escrow ri-light-cavalry)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-light-cavalry)
	(chat-local-to-self "軽騎兵にUP")
)
;●精鋭騎兵にUP
(defrule
	(can-research-with-escrow ri-hussar)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-hussar)
	(chat-local-to-self "ハサーにUP")
)

;●騎士生産
(defrule
	(goal KNIGHT YES)
	(unit-type-count-total knight-line  < 10)
	(population < 120)
	(can-train knight-line)
=>
	(train knight-line)
;	(chat-local-to-self "騎士を作ります。")
)
(defrule
	(goal PALADIN YES)
	(population < 120)
	(can-train knight-line)
=>
	(train knight-line)
;	(chat-local-to-self "騎士を作ります。")
)

;●重騎士にUP
(defrule
	(or
		(goal KNIGHT YES)
		(goal PALADIN YES)
	)
	(can-research-with-escrow ri-cavalier)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-cavalier)
	(chat-local-to-self "30)重騎士にUP")
;	(enable-timer 2 60)
)
;●近衛騎士にUP
(defrule
	(goal PALADIN YES)
	(can-research-with-escrow ri-paladin)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-paladin)
	(chat-local-to-self "30)近衛騎士にUP")
)

;●らくだ騎兵生産
(defrule
	(goal RAKUDA YES)
	(population < 120)
	(can-train camel-line )
=>
	(train camel-line )
	;(chat-local-to-self "らくだ騎兵を作ります。")
)


;●重装らくだ騎兵にUP
(defrule
	(goal RAKUDA YES)
	(can-research-with-escrow ri-heavy-camel)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-heavy-camel)
	(chat-local-to-self "重装らくだ騎兵にUP")
)


;●繁殖
(defrule
	(can-research-with-escrow ri-husbandry)
=>
	(release-escrow food)
	(research ri-husbandry)
	(chat-local-to-self "9)繁殖の研究をします。")
)
;●血統
(defrule
	(current-age >= castle-age)
	(can-research-with-escrow ri-bloodlines)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-bloodlines)
	(chat-local-to-self "9)血統の研究をします。")
)

;-------------------------------------------------------------
;●スコーピオン生産
(defrule
	(goal SCORP YES)
	(population < 120)
	(unit-type-count-total scorpion-line < 20)
	(can-train scorpion-line)
=>
	(train scorpion-line)
	(chat-local-to-self "スコーピオン")
)
;●ヘビースコーピオンにUP
(defrule
	(civ-selected celtic)
	(can-research-with-escrow ri-heavy-scorpion)
=>
	(release-escrow food)
	(research ri-heavy-scorpion)
	;(chat-local-to-self "ヘビースコーピオンにUP")
)
;●破城槌生産
(defrule
	(population < 120)
	(unit-type-count-total battering-ram-line < 3)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
;	(chat-local-to-self "10)破城槌を作ります。")
)
(defrule
	(goal RAM YES)
	(population < 120)
	(unit-type-count-total battering-ram-line < 8)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
;	(chat-local-to-self "10)破城槌を作ります。")
)
;●強化破城槌にUP
(defrule
	(goal RAM YES)
	(can-research ri-capped-ram)
=>
	(research ri-capped-ram)
	(chat-local-to-self "強化破城槌にUP")
)
;●改良強化破城槌にUP
(defrule
	(false)
	(can-research ri-siege-ram)
=>
	(research ri-siege-ram)
	(chat-local-to-self "改良強化破城槌にUP")
)

;●投石器生産
(defrule
	(goal TOUSEKI YES)
	(unit-type-count-total mangonel-line < 5)
	(population < 120)
	(can-train mangonel-line)
=>
	(train mangonel-line)
	(chat-local-to-self "投石器を作ります。")
)
;●改良型投石器にUP
(defrule
	(false)
	(can-research ri-onager)
=>
	(research ri-onager)
	(chat-local-to-self "改良型投石器にUP")
)
;●破城投石器にUP
(defrule
	(false)
	(can-research ri-siege-onager)
=>
	(research ri-siege-onager)
	(chat-local-to-self "破城投石器にUP")
)

;-------------------------------------------------------------
;●ユニークユニット

(defrule
	(or
		(and
			(goal UNIQ YES)
			(unit-type-count-total my-unique-unit-line < 15)
		)
		(goal ELUNIQ YES)
	)
	(current-age == castle-age)
	(population < 120)
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
;	(chat-local-to-self "10)ユニークユニットを作ります。")
)
(defrule
	(goal ELUNIQ YES)
	(population < 120)
	(current-age == imperial-age)
	(can-train my-unique-unit-line)
=>
	(train my-unique-unit-line)
;	(chat-local-to-self "10)ユニークユニットを作ります。")
)

;●エリートにアップ
(defrule
	(goal ELUNIQ YES)
	(can-research-with-escrow my-unique-unit-upgrade)
=>
	(release-escrow gold)
	(release-escrow food)
	(research my-unique-unit-upgrade)
	(chat-local-to-self "29)エリートユニークユニットにUP")
)
;●遠投投石機
(defrule
	(population >= 120)
	(unit-type-count-total trebuchet < 6)
	(unit-type-count-total 42 <= 4)
	(can-train trebuchet)
=>
 	(chat-local-to-self "7)遠投投石機を作ります。")
	(train trebuchet)
)
(defrule
	(unit-type-count-total 42 > 0)
=>
 	(chat-to-all "19)包囲戦は久しぶりだぜーーーー！")
	(disable-self)
)
(defrule
	(unit-type-count-total 42 > 4)
=>
 	(chat-to-all "10)暗黒の時代に戻してやるぜーー！")
	(disable-self)
)
(defrule
	(unit-type-count-total 42 > 6)
=>
 	(chat-to-all "23)死ね死ねーーーー！！！！！")
	(disable-self)
)
(defrule
	(unit-type-count-total 42 > 8)
=>
 	(chat-to-all "11)とどめだーーーー！！！！")
	(disable-self)
)
;●爆破工作人
(defrule
	(false)
	(goal BAKUHA YES)
	(population > 110)
	(or
		(unit-type-count-total knight-line > 20)
		(unit-type-count-total militiaman-line > 20)
	)
	(unit-type-count-total petard > 8)
	(goal SINKA 8)
	(can-train petard)
=>
 	(chat-local-to-self "7)爆破工作人を作ります。")
	(train petard)
)


;-------------------------------------------------------------

;●聖職者
(defrule
	(gold-amount > 150)
	(or
		(and
			(current-age >= castle-age)
			(unit-type-count monk < 2 )
		)
		(and
			(goal SINKA 8)
			(unit-type-count monk < 5 )
		)
	)
	(can-train monk)
=>
	(train monk)
	(chat-local-to-self "18)聖職者を作ります。")
)
(defrule
	(population < 120)
	(gold-amount > 150)
	(or
		(and
			(current-age >= castle-age)
			(unit-type-count missionary < 4 )
		)
		(and
			(goal SINKA 8)
			(unit-type-count missionary < 8 )
		)
	)
	(can-train missionary)
=>
	(train missionary)
	(chat-local-to-self "18)宣教師を作ります。")
)
(defrule
	(goal MONK YES)
	(current-age == imperial-age)
	(unit-type-count monk < 10 )
	(can-train monk)
=>
	(train monk)
	(chat-local-to-self "18)聖職者を作ります。")
)


;-------------------------------------------------------------

;------------------区切り--------------------------------

;●市場関係
;●飯売却
(defrule
	(current-age >= castle-age)
	(food-amount > 1500)
;	(goal SINKA 8)
=>
	(sell-commodity food)
;	(chat-local-to-self "5)飯を売ります")
)
;●木売却
(defrule
	(current-age >= castle-age)
	(wood-amount > 1500)
=>
	(sell-commodity wood)
;	(chat-local-to-self "5)木を売ります")
)
;●石売却(建物建てない病対策)
(defrule
	(current-age == imperial-age)
	(stone-amount > 1000)
=>
	(sell-commodity stone)
;	(chat-local-to-self "5)石を売ります")
)

;●貨幣制度
(defrule
	(false)
	(goal SINKA 8)
	(can-research-with-escrow ri-coinage )
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-coinage)
	(chat-local-to-self "貨幣制度")
)
;●銀行取引
(defrule
	(false)
	(goal SINKA 8)
	(can-research-with-escrow ri-banking )
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-banking)
	(chat-local-to-self "銀行取引")
)
;●地図製作
(defrule
	(or
		(current-age >= castle-age)
		(goal SINKA 5)
	)
	(can-research-with-escrow ri-cartography )
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-cartography )
	(chat-local-to-self "地図製作")
)

;●キャラバン
(defrule
	(or
		(unit-type-count-total trade-cart >= 3)
		(unit-type-count-total trade-cog >= 3)
	)
	(can-research-with-escrow ri-caravan )
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-caravan)
	(chat-local-to-self "キャラバン")
)

;●組合
(defrule
	(unit-type-count-total trade-cart >= 3)
	(can-research-with-escrow ri-guilds)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-guilds )
	(chat-local-to-self "組合")
)


;●中心が全て壊されたとき
(defrule
	(building-type-count-total town-center == 0)
	(current-age >= feudal-age)
	(wood-amount < 275)
=>
	(buy-commodity wood)
)
(defrule
	(building-type-count-total town-center == 0)
	(current-age >= castle-age)
	(stone-amount < 100)
=>
	(buy-commodity stone)
)
(defrule
	(building-type-count-total town-center == 0)
	(current-age >= feudal-age)
	(food-amount > 200)
=>
	(sell-commodity food)
)



;●貢物を送る
(defrule
	(false)
	(research-completed ri-banking)
	(research-completed ri-hand-cart)
	(wood-amount >= 500)
=>
	(tribute-to-player any-ally wood 200)
)
(defrule
	(false)
	(research-completed ri-banking)
	(research-completed ri-hand-cart)
	(food-amount >= 500)
=>
	(tribute-to-player any-ally food 200)
)
(defrule
	(false)
	(research-completed ri-banking)
	(research-completed ri-hand-cart)
	(gold-amount >= 500)
=>
	(tribute-to-player any-ally gold 200)
)
(defrule
	(false)
	(research-completed ri-banking)
	(research-completed ri-hand-cart)
	(stone-amount >= 500)
=>
	(tribute-to-player any-ally stone 200)
)
;●荷馬車
(defrule
;	(not (map-type continental) )
	(current-age >= castle-age)
	(or
		(wood-amount > 375)
		(building-type-count-total town-center >= 3)
	)
	(building-type-count-total monastery >= 1)
	(unit-type-count-total trade-cart < 15)
	(players-building-type-count any-ally market >= 1)
	(player-in-game any-ally)
	(can-train trade-cart)
=>
	(train trade-cart)
)

;------------------区切り--------------------------------

;●贖い
(defrule
	(goal SINKA 8)
	(gold-amount > 500)
	(unit-type-count monk >= 2)
	(can-research ri-redemption)
=>
	(research ri-redemption)
	(chat-local-to-self "贖い")
)
;●篤信
(defrule
	(goal SINKA 8)
	(gold-amount > 500)
	(unit-type-count monk >= 2)
	(can-research ri-fervor)
=>
	(research ri-fervor)
	(chat-local-to-self "篤信")
)
;●神聖
(defrule
	(goal SINKA 8)
	(gold-amount > 500)
	(unit-type-count monk >= 2)
	(can-research ri-sanctity)
=>
	(research ri-sanctity)
	(chat-local-to-self "神聖")
)
;●償い
(defrule
	(goal SINKA 8)
	(gold-amount > 500)
	(unit-type-count monk >= 2)
	(can-research ri-atonement)
=>
	(research ri-atonement)
	(chat-local-to-self "償い")
)
;●活版印刷
(defrule
	(goal SINKA 8)
	(gold-amount > 500)
	(unit-type-count monk >= 2)
	(can-research ri-block-printing)
=>
	(research ri-block-printing)
	(chat-local-to-self "活版印刷")
)
;●啓蒙
(defrule
	(goal SINKA 8)
	(gold-amount > 500)
	(unit-type-count monk >= 2)
	(can-research ri-illumination)
=>
	(research ri-illumination)
	(chat-local-to-self "啓蒙")
)
;●信仰
(defrule
	(population > 120)
	(can-research ri-faith)
=>
	(research ri-faith)
	(chat-local-to-self "信仰")
)
;●異端
(defrule
	(goal SINKA 8)
	(gold-amount > 1500)
	(can-research ri-heresy)
=>
	(research ri-heresy)
	(chat-local-to-self "異端")
)
;●神政
(defrule
	(goal SINKA 8)
	(gold-amount > 1000)
	(can-research ri-theocracy)
=>
	(research ri-theocracy)
	(chat-local-to-self "神政")
)

;●薬草学
(defrule
	(can-research 441)
	(civ-selected aztec)
=>
	(research 441)
	(chat-local-to-self "薬草学")
)

;------------------区切り--------------------------------

;●金の採掘
(defrule
	(can-research-with-escrow ri-gold-mining)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-gold-mining)
	(chat-local-to-self "金の採掘")
)
;●金の掘削
(defrule
	(can-research-with-escrow ri-gold-shaft-mining)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-gold-shaft-mining)
	(chat-local-to-self "金の掘削")
)
;●石の切り出し
(defrule
	(can-research-with-escrow ri-stone-mining)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-stone-mining)
	(chat-local-to-self "石の切り出し")
)
;●石の掘削
(defrule
	(can-research-with-escrow ri-stone-shaft-mining)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-stone-shaft-mining)
	(chat-local-to-self "金の掘削")
	(chat-local-to-self "石の採掘")
)
;●両刃斧
(defrule
	(can-research-with-escrow ri-double-bit-axe)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-double-bit-axe)
	(chat-local-to-self "両刃斧")
)
;●のこぎり
(defrule
	(can-research-with-escrow ri-bow-saw)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-bow-saw)
	(chat-local-to-self "のこぎり")
)
;●両ひきのこごり
(defrule
	(can-research-with-escrow ri-two-man-saw)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-two-man-saw)
	(chat-local-to-self "両ひきのこごり")
)
;●畑関係
(defrule
	(can-research-with-escrow ri-horse-collar)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-horse-collar)
	(disable-self)
)
(defrule
	(can-research-with-escrow ri-heavy-plow)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-heavy-plow)
	(disable-self)
)
(defrule
	(can-research-with-escrow ri-crop-rotation)
=>
	(release-escrow food)
	(release-escrow wood)
	(research ri-crop-rotation)
	(disable-self)
)
;---------------------------------------------------------------
;●弾道学
(defrule
	(can-research ri-ballistics)
=>
	(research ri-ballistics)
	(chat-local-to-self "弾道学")
)
;●包囲攻撃技術
(defrule
	(can-research-with-escrow ri-siege-engineers)
=>
	(release-escrow food)
	(research ri-siege-engineers)
	(chat-local-to-self "包囲攻撃技術")
)
;●化学
(defrule
	(can-research-with-escrow ri-chemistry)
=>
	(release-escrow food)
	(release-escrow gold)
	(research ri-chemistry)
	(chat-local-to-self "化学")
)
;●迎撃用窓

(defrule
	(can-research-with-escrow ri-murder-holes)
=>
	(release-escrow food)
	(research ri-murder-holes)
)
;●砲台の研究

(defrule
	(can-research-with-escrow ri-bombard-tower)
=>
	(release-escrow food)
	(research ri-bombard-tower)
)
;●徴用
(defrule
	(can-research-with-escrow ri-conscription)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-conscription)
	(chat-local-to-self "徴用")
)

;●ユニークテクノロジー
(defrule
	(goal UNIQTECH YES)
	(can-research-with-escrow my-unique-research)
=>
	(release-escrow gold)
	(release-escrow food)
	(research my-unique-research)
	(chat-local-to-self "ユニークテクノロジー")
	(set-goal UNIQTECH NO)
)

;------------------区切り--------------------------------

;●漁船生産
(defrule
(false)
	(or
		(goal MAP_TYPE 1)
		(map-type scandanavia)
	)
=>
	(set-goal SAKANA YES)
	(disable-self)
)
;●軍船生産
(defrule
	(goal MAP_TYPE 1)
;	(building-type-count-total blacksmith >= 1)
=>
	(set-goal GARE YES)
	(disable-self)
)
;●歩兵生産
(defrule
	(goal SINKA 3)
	(or
		(civ-selected celtic)
		(or
			(civ-selected turkish)
			(or
				(civ-selected viking)
				(or
					(civ-selected japanese)
					(civ-selected saracen)
				)
			)
		)
	)
=>
	(set-goal HOHEI YES)
	(disable-self)
)
;●槍兵生産
(defrule
	(or
		(goal SINKA 3)
		(current-age >= castle-age)
	)
	(nor
		(civ-selected turkish)
		(civ-selected saracen)
	)
;	(or
;		(players-unit-type-count any-enemy knight-line >= 2)
;		(or
;			(players-unit-type-count any-enemy camel-line >= 2)
;			(or
;				(players-unit-type-count any-enemy mameluke-line >= 2)
;				(players-unit-type-count any-enemy war-elephant-line >= 2)
;			)
;		)
;	)
=>
	(set-goal SPEAR YES)
;	(chat-local-to-self "11)槍を作ります。")
	(disable-self)
)

;●イーグル生産
(defrule
	(goal SINKA 3)
	(civ-selected mayan)
=>
	(set-goal EAGLE YES)
	(disable-self)
)

;●射手生産
(defrule
	(goal SINKA 3)
	(or
		(civ-selected briton)
		(civ-selected korean)
	)
=>
	(set-goal ARCHER YES)
	(disable-self)
)
;●散兵生産
(defrule
	(goal SINKA 3)
	(or
		(civ-selected aztec)
		(civ-selected byzantine)
	)
=>
	(set-goal SANPEI YES)
	(disable-self)
)
;●弓騎兵生産
(defrule
	(or
		(and
			(goal SINKA 3)
			(civ-selected mongol)
		)
		(and
			(goal SINKA 6)
			(civ-selected hun)
		)
	)
=>
	(set-goal C-ARCHER YES)
	(disable-self)
)

;●鉄砲生産
(defrule
	(false)
=>
	(set-goal CANON YES)
	(disable-self)
)

;●騎士(主力)生産
(defrule
	(or
		(civ-selected frankish)
		(or
			(civ-selected spanish)
			(or
				(civ-selected persian)
				(civ-selected hun)
			)
		)
	)
=>
	(set-goal PALADIN YES)
	(disable-self)
)
;●騎士(補助)生産
(defrule
	(or
		(civ-selected gothic)
		(or
			(civ-selected chinese)
			(or
				(civ-selected korean)
				(or
					(civ-selected japanese)
					(or
						(civ-selected viking)
						(or
							(civ-selected teutonic)
							(civ-selected briton)
						)
					)
				)
			)
		)
	)
=>
	(set-goal KNIGHT YES)
	(disable-self)
)
;●らくだ生産
(defrule
	(goal SINKA 3)
	(or
		(civ-selected turkish)
		(civ-selected saracen)
	)
=>
	(set-goal RAKUDA YES)
	(disable-self)
)

;●騎兵生産
(defrule
	(or
		(and
			(goal SINKA 3)
			(civ-selected mongol)
		)
		(and
			(goal SINKA 5)
			(civ-selected turkish)
		)
	)
=>
	(set-goal KIHEI YES)
	(disable-self)
)

;●スコピ生産
(defrule
	(goal SINKA 4)
=>
	(set-goal SCORP YES)
	(disable-self)
)
(defrule
	(goal SINKA 6)
	(not(civ-selected celtic))
=>
	(set-goal SCORP NO)
	(disable-self)
)
;●破城槌生産
(defrule
	(civ-selected celtic)
=>
	(set-goal RAM YES)
	(disable-self)
)

;●ユニークユニット生産
(defrule
	(or
		(civ-selected spanish)
		(or
			(civ-selected briton)
			(civ-selected turkish)
		)
	)
=>
	(set-goal UNIQ YES)
	(disable-self)
)
;●EL-ユニークユニット
(defrule
	(or
		(civ-selected aztec)
		(or
			(civ-selected chinese)
			(or
				(civ-selected gothic)
				(or
					(civ-selected byzantine)
					(or
						(civ-selected mayan)
						(civ-selected teutonic)
					)
				)
			)
		)
	)
=>
	(set-goal ELUNIQ YES)
	(disable-self)
)

;●ユニークテクノロジー
(defrule
	(or
		(civ-selected celtic)
		(or
			(civ-selected chinese)
			(or
				(civ-selected byzantine)
				(civ-selected briton)
			)
		)
	)
=>
	(set-goal UNIQTECH YES)
	(disable-self)
)
(defrule
	(or
		(civ-selected saracen)
		(or
			(civ-selected mayan)
			(civ-selected aztec)
		)
	)
=>
	(set-goal UNIQTECH YES)
	(disable-self)
)

;●聖職者生産
(defrule
	(civ-selected aztec)
=>
	(set-goal MONK YES)
	(disable-self)
)


;------------------区切り--------------------------------

;●漁船
(defrule
	(not (goal SINKA 8) )
	(goal SAKANA YES)
	(can-train fishing-ship)
	(unit-type-count-total fishing-ship < 8)
	(current-age == dark-age)
=>
	(train fishing-ship)
;	(chat-local-to-self "漁船を作ります。")
)
(defrule
	(not (goal SINKA 8) )
	(goal SAKANA YES)
	(can-train fishing-ship)
	(current-age >= feudal-age)
	(unit-type-count-total fishing-ship < 15)
	(current-age >= feudal-age)
	(unit-type-count-total galley-line >= 10)
=>
	(train fishing-ship)
;	(chat-local-to-self "漁船を作ります。")
)

;●ガレー船
(defrule
	(population < 120)
	(goal GARE YES)
	(warboat-count < 20)
	(can-train galley-line)
=>
	(train galley-line)
	(chat-local-to-self "ガレー船を作ります。")
)
;●大型ガレー船にUP
(defrule
	(can-research-with-escrow ri-war-galley)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-war-galley)
	(set-escrow-percentage gold 40)
	(set-escrow-percentage food 40)
	(chat-local-to-self "大型ガレー船にUP")
)
;●ガリオン船にUP
(defrule
	(can-research-with-escrow ri-galleon )
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-galleon )
	(set-escrow-percentage gold 40)
	(set-escrow-percentage food 40)
	(chat-local-to-self "ガリオン船にUP")
)


;●火炎船
(defrule
	(population < 120)
	(goal GARE YES)
	(warboat-count < 20)
	(can-train fire-ship-line)
=>
	(train fire-ship-line)
	(chat-local-to-self "火炎船を作ります。")
)

;●爆破船
(defrule
	(population < 120)
	(goal GARE YES)
	(unit-type-count-total demolition-ship-line < 3)
	(warboat-count < 20)
	(can-train demolition-ship-line )
=>
	(train demolition-ship-line )
	(chat-local-to-self "爆破船を作ります。")
)

;●キャノンガリオン船の研究
(defrule
	(can-research-with-escrow ri-cannon-galleon)
=>
	(release-escrow gold)
	(release-escrow food)
	(research ri-cannon-galleon)
	(set-escrow-percentage gold 40)
	(set-escrow-percentage food 40)
	(chat-local-to-self "キャノンガリオン船の研究")
)

;●キャノンガリオン船
(defrule
	(warboat-count < 25)
	(unit-type-count-total cannon-galleon-line < 5)
	(can-train cannon-galleon-line )
=>
	(train cannon-galleon-line )
	(chat-local-to-self "23)キャノンガリオン船を作ります。")
)

;●バイキング船
(defrule
	(warboat-count < 30)
	(population < 120)
	(goal GARE YES)
	(unit-type-count-total longboat-line < 10)
	(can-train longboat-line)
=>
	(train longboat-line)
	(chat-local-to-self "バイキング船を作ります。")
)

;●亀甲船
(defrule
	(warboat-count < 30)
	(goal GARE YES)
	(unit-type-count-total turtle-ship-line < 5)
	(can-train turtle-ship-line)
=>
	(train turtle-ship-line)
	(chat-local-to-self "亀甲船を作ります。")
)
;●交易貨物船
(defrule
(false)
	(warboat-count > 15)
	(wood-amount > 300)
	(goal GARE YES)
	(unit-type-count-total trade-cog < 10)
	(can-train trade-cog)
=>
	(train trade-cog)
	(chat-local-to-self "交易貨物船を作ります。")
)


;●海軍の侵攻
(defrule
	(warboat-count >= 20)
=>
(set-strategic-number sn-number-boat-attack-groups 10 ) ;【海戦攻撃グループの数】
(set-strategic-number sn-minimum-boat-attack-group-size 1 ) ;【海戦攻撃グループの最小人数】
(set-strategic-number sn-maximum-boat-attack-group-size 10 ) ;【海戦攻撃グループの最大人数】
(set-strategic-number sn-number-boat-defend-groups 0 ) ;【海戦防御グループの数】
(set-strategic-number sn-minimum-boat-defend-group-size 0 ) ;【海戦防御グループの最小人数】
(set-strategic-number sn-maximum-boat-defend-group-size 0 ) ;【海戦防御グループの最大人数】
(set-strategic-number sn-number-boat-explore-groups 1 ) ;【海戦探索グループの数】
(set-strategic-number sn-minimum-boat-explore-group-size 1 ) ;【海戦探索グループの最小人数】
(set-strategic-number sn-maximum-boat-explore-group-size 1 ) ;【海戦探索グループの最大人数】
)
;●海軍の守備
(defrule
	(warboat-count < 20)
=>
(set-strategic-number sn-number-boat-attack-groups 0 ) ;【海戦攻撃グループの数】
(set-strategic-number sn-minimum-boat-attack-group-size 0 ) ;【海戦攻撃グループの最小人数】
(set-strategic-number sn-maximum-boat-attack-group-size 0 ) ;【海戦攻撃グループの最大人数】
(set-strategic-number sn-number-boat-defend-groups 1 ) ;【海戦防御グループの数】
(set-strategic-number sn-minimum-boat-defend-group-size 1 ) ;【海戦防御グループの最小人数】
(set-strategic-number sn-maximum-boat-defend-group-size 100 ) ;【海戦防御グループの最大人数】
(set-strategic-number sn-number-boat-explore-groups 0 ) ;【海戦探索グループの数】
(set-strategic-number sn-minimum-boat-explore-group-size 0 ) ;【海戦探索グループの最小人数】
(set-strategic-number sn-maximum-boat-explore-group-size 0 ) ;【海戦探索グループの最大人数】
)

;------------------区切り--------------------------------

;●暗黒(共通)
(defrule
	(false)
	(unit-type-count-total villager >= 10)
=>
	(set-strategic-number sn-food-gatherer-percentage 75 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 25 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 0 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 0 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)

;●暗黒中盤
(defrule
	(goal MAP_TYPE 0)
	(unit-type-count-total villager >= 16)
=>
	(set-strategic-number sn-food-gatherer-percentage 60 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 40 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 0 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 0 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)

;●領主ボタンＰＵＳＨ
(defrule
	(goal MAP_TYPE 0)
	(goal SINKA 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 50 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 50 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 0 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 0 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)
;●領主入り
(defrule
	(goal MAP_TYPE 0)
	(goal SINKA 2)
=>
	(set-strategic-number sn-food-gatherer-percentage 47 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 33 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 10 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)
;●城主ボタンＰＵＳＨ
(defrule
	(goal MAP_TYPE 0)
	(goal SINKA 3)
=>
	(set-strategic-number sn-food-gatherer-percentage 35 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 45 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 10 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)
;●城主入り
(defrule
	(current-age >= castle-age)
=>
	(set-goal ESFOOD 20)
	(set-goal ESGOLD 20)
	(enable-timer TIMER_BALANCE 5)
	(disable-self)
)
;-------------------------------------------------------------------------------------------------------------------
;●暗黒中盤(海マップ)
(defrule
	(goal MAP_TYPE 1)
	(unit-type-count-total villager >= 16)
=>
	(set-strategic-number sn-food-gatherer-percentage 60 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 40 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 0 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 0 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)

;●領主ボタンＰＵＳＨ(海マップ)
(defrule
	(goal SINKA 1)
	(goal MAP_TYPE 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 20 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 75 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 5 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 0 ) ;【石を収集する町の人の割合(％)】
	(set-goal ESWOOD 10)
	(disable-self)
)

;●領主入り(海マップ)
(defrule
	(goal SINKA 2)
	(goal MAP_TYPE 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 15 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 65 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 10 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)
;●領主中盤(海マップ)
(defrule
	(goal MAP_TYPE 1)
	(building-type-count-total market >= 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 30 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 45 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 15 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)
;●城主ボタンPUSH(海マップ)
(defrule
	(goal SINKA 3)
	(goal MAP_TYPE 1)
=>
	(set-strategic-number sn-food-gatherer-percentage 30 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 35 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 20 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 15 ) ;【石を収集する町の人の割合(％)】
	(disable-self)
)
;●城主入り(海マップ)
(defrule
	(goal SINKA 4)
	(goal MAP_TYPE 1)
=>
	(set-goal ESFOOD 20)
	(set-goal ESGOLD 20)
	(enable-timer TIMER_BALANCE 5)
	(disable-self)
)

;●バランス微調整--------------------------------------------------------------------
;●全資源少ない
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount < 300)
	(gold-amount < 300)
	(wood-amount < 200)
=>
	(set-strategic-number sn-food-gatherer-percentage 40 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 15 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 35 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：全資源が少ない")
)
;●全資源多い
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount > 500)
	(gold-amount > 500)
	(wood-amount > 400)
=>
	(set-strategic-number sn-food-gatherer-percentage 40 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 15 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 35 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：全資源が多い")
)
;●飯が多い
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount > 500)
	(gold-amount < 300)
	(wood-amount < 200)
=>
	(set-strategic-number sn-food-gatherer-percentage 30 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 20 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 40 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：食料が多い")
)
;●金が多い
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount < 300)
	(gold-amount > 500)
	(wood-amount < 200)
=>
	(set-strategic-number sn-food-gatherer-percentage 45 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 5 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 40 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：金が多い")
)
;●木が多い
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount < 300)
	(gold-amount < 300)
	(wood-amount > 400)
=>
	(set-strategic-number sn-food-gatherer-percentage 45 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 20 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 25 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：木が多い")
)
;●飯が少ない
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount < 300)
	(gold-amount > 500)
	(wood-amount > 400)
=>
	(set-strategic-number sn-food-gatherer-percentage 50 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 10 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 30 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：食料が少ない")
)
;●金が少ない
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount > 500)
	(gold-amount < 300)
	(wood-amount > 400)
=>
	(set-strategic-number sn-food-gatherer-percentage 35 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 25 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 20 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：金が少ない")
)
;●木が少ない
(defrule
	(timer-triggered TIMER_BALANCE)
	(food-amount > 500)
	(gold-amount > 500)
	(wood-amount < 200)
=>
	(set-strategic-number sn-food-gatherer-percentage 35 ) ;【食料を収集する町の人の割合(％)】
	(set-strategic-number sn-gold-gatherer-percentage 10 ) ;【金を収集する町の人の割合(％)】
	(set-strategic-number sn-wood-gatherer-percentage 45 ) ;【木を収集する町の人の割合(％)】
	(set-strategic-number sn-stone-gatherer-percentage 10 ) ;【石を収集する町の人の割合(％)】
	(enable-timer TIMER_BALANCE 40)
	(chat-local-to-self "バランス調整：木が少ない")
)

;------------------区切り--------------------------------

;●進化レベル８(精鋭化終了条件)

;●近衛騎士文明(フランク・フン・スペイン)の場合
(defrule
	(goal PALADIN YES)
	(research-completed ri-paladin)
	(goal UNIQTECH NO)
=>
	(set-goal SINKA 8)
	(disable-self)
)

;●近衛剣士文明(ケルト・バイキング・日本)の場合
(defrule
	(goal HOHEI YES)
	(nor
		(civ-selected saracen)
		(civ-selected turkish)
	)
	(research-completed ri-champion)
	(goal UNIQTECH NO)
=>
	(set-goal SINKA 8)
	(disable-self)
)

;●射手文明(ブリトン・朝鮮)の場合
(defrule
	(goal ARCHER YES)
	(research-completed ri-arbalest)
	(goal UNIQTECH NO)
=>
	(set-goal SINKA 8)
	(disable-self)
)

;●弓騎兵文明(モンゴル)の場合
(defrule
	(civ-selected mongol)
	(research-completed ri-heavy-cavalry-archer)
	(research-completed ri-hussar)
	(goal UNIQTECH NO)
=>
	(set-goal SINKA 8)
	(disable-self)
)

;●らくだ騎兵文明(サラセン・トルコ)の場合
(defrule
	(or
		(civ-selected saracen)
		(civ-selected turkish)
	)
	(research-completed ri-heavy-camel)
	(research-completed ri-champion)
	(goal UNIQTECH NO)
=>
	(set-goal SINKA 8)
	(disable-self)
)

;●ELユニーク文明(チュートン・中国・ゴート・アステカ・ビザンティン・マヤ)の場合
(defrule
	(goal ELUNIQ YES)
	(research-completed my-unique-unit-upgrade)
	(or
		(not (civ-selected mayan))
		(research-completed ri-elite-eagle-warrior)
	)
	(goal UNIQTECH NO)
=>
	(set-goal SINKA 8)
	(disable-self)
)

;●escrow解除
(defrule
	(goal SINKA 8)
=>
	(release-escrow gold)
	(release-escrow food)
)
(defrule
	(building-type-count-total town-center >= 2 )
=>
	(release-escrow wood)
)


;------------------区切り--------------------------------

;●編成
(defrule
	(goal TAIKYAKU NO)
=>
	(set-strategic-number sn-number-attack-groups 100)
	(set-strategic-number sn-minimum-attack-group-size 9)
	(set-strategic-number sn-maximum-attack-group-size 10)
	(set-strategic-number sn-number-defend-groups 0 ) ;【陸戦防御グループの数】
	(set-strategic-number sn-minimum-defend-group-size 0 ) ;【陸戦防御グループの最小人数】
	(set-strategic-number sn-maximum-defend-group-size 0 ) ;【陸戦防御グループの最大人数】
	(set-strategic-number sn-enemy-sighted-response-distance 2 ) ;【攻撃を受けた際、その地点からどの程度の範囲に存在するユニットが反撃を行うか】
	(set-strategic-number sn-task-ungrouped-soldiers 0 ) ;【グループ化されていない陸戦ユニットを散開させ、個別に町の領域を警備させるか】
	(set-goal CONTROL_TOWNSIZE YES)
	(set-strategic-number sn-minimum-town-size 15 ) ;【町の最小範囲】
	(set-strategic-number sn-maximum-town-size 100 ) ;【町の最大範囲】
;	(attack-now)
)
;●全軍退却
(defrule
	(goal TAIKYAKU YES)
=>
	(set-strategic-number sn-number-attack-groups 0)
	(set-strategic-number sn-minimum-attack-group-size 0)
	(set-strategic-number sn-maximum-attack-group-size 0)
	(set-strategic-number sn-number-defend-groups 100 ) ;【陸戦防御グループの数】
	(set-strategic-number sn-minimum-defend-group-size 15 ) ;【陸戦防御グループの最小人数】
	(set-strategic-number sn-maximum-defend-group-size 18 ) ;【陸戦防御グループの最大人数】
	(set-strategic-number sn-enemy-sighted-response-distance 20 ) ;【攻撃を受けた際、その地点からどの程度の範囲に存在するユニットが反撃を行うか】
	(set-strategic-number sn-task-ungrouped-soldiers 0 ) ;【グループ化されていない陸戦ユニットを散開させ、個別に町の領域を警備させるか】
	(set-goal CONTROL_TOWNSIZE NO)
)


;●全軍突撃
(defrule
	(goal SINKA 8)
	(population > 120)
	(unit-type-count-total villager < 70)
	(not(town-under-attack))
	(goal TAIKYAKU YES)
=>
	(set-goal TAIKYAKU NO)
;	(chat-to-allies "23)総攻撃をかけるので援軍を要請します。")
)


;●援軍
(defrule
(false)
	(or
		(taunt-detected any-ally 23)
		(taunt-detected any-ally 12)
	)
	(soldier-count >= 20)
	(not (town-under-attack))
;	(population >= 110)
=>
	(set-goal TAIKYAKU NO)
	(chat-to-allies "1)援軍を送ります。")
	(acknowledge-taunt this-any-ally 23)
	(acknowledge-taunt this-any-ally 12)
)
(defrule
(false)
	(taunt-detected any-ally 23)
	(nor
		(soldier-count >= 20)
		(nor
			(not (town-under-attack))
			(population >= 110)
		)
	)
=>
	(set-goal TAIKYAKU NO)
	(chat-to-allies "2)無理ですーーーー")
	(acknowledge-taunt this-any-ally 23)
)
;●兵隊が減ったら
(defrule
	(population < 95 )
=>
	(set-goal TAIKYAKU YES)
)


;●漁船・農民削除
(defrule
	(goal SINKA 8)
	(population > 118)
	(food-amount > 500)
=>
	(delete-unit fishing-ship)
)
(defrule
	(goal SINKA 8)
	(food-amount > 1000)
	(wood-amount > 1000)
	(gold-amount > 1000)
	(population > 118)
	(unit-type-count-total villager > 65)
	(unit-type-count-total fishing-ship == 0)
=>
	(delete-unit villager)
)


;●街が攻撃されてるとき
(defrule
	(town-under-attack)
	(current-age == castle-age)
=>
	(release-escrow food)
	(release-escrow gold)
)
(defrule
	(town-under-attack)
	(players-military-population any-enemy >= 3)
	(current-age == feudal-age)
=>
	(set-goal F_RUSH YES)
	(disable-self)
)



;------------------区切り--------------------------------

;●飯
(defrule
	(goal ESFOOD 10)
=>
	(enable-timer TIMER_ESFOOD 5)
	(disable-self)
)
(defrule
	(goal ESFOOD 10)
	(timer-triggered TIMER_ESFOOD)
=>
	(set-escrow-percentage food 10)
	(enable-timer TIMER_ESFOOD 5)
)
(defrule
	(goal ESFOOD 20)
=>
	(enable-timer TIMER_ESFOOD 5)
	(disable-self)
)
(defrule
	(goal ESFOOD 20)
	(timer-triggered TIMER_ESFOOD)
=>
	(set-escrow-percentage food 20)
	(enable-timer TIMER_ESFOOD 5)
)
(defrule
	(goal ESFOOD 30)
=>
	(enable-timer TIMER_ESFOOD 5)
	(disable-self)
)
(defrule
	(goal ESFOOD 30)
	(timer-triggered TIMER_ESFOOD)
=>
	(set-escrow-percentage food 30)
	(enable-timer TIMER_ESFOOD 5)
)
(defrule
	(goal ESFOOD 40)
=>
	(enable-timer TIMER_ESFOOD 5)
	(disable-self)
)
(defrule
	(goal ESFOOD 40)
	(timer-triggered TIMER_ESFOOD)
=>
	(set-escrow-percentage food 40)
	(enable-timer TIMER_ESFOOD 5)
)

;●金
(defrule
	(goal ESGOLD 10)
=>
	(enable-timer TIMER_ESGOLD 5)
	(disable-self)
)
(defrule
	(goal ESGOLD 10)
	(timer-triggered TIMER_ESGOLD)
=>
	(set-escrow-percentage gold 10)
	(enable-timer TIMER_ESGOLD 5)
)
(defrule
	(goal ESGOLD 20)
=>
	(enable-timer TIMER_ESGOLD 5)
	(disable-self)
)
(defrule
	(goal ESGOLD 20)
	(timer-triggered TIMER_ESGOLD)
=>
	(set-escrow-percentage gold 20)
	(enable-timer TIMER_ESGOLD 5)
)
(defrule
	(goal ESGOLD 30)
=>
	(enable-timer TIMER_ESGOLD 5)
	(disable-self)
)
(defrule
	(goal ESGOLD 30)
	(timer-triggered TIMER_ESGOLD)
=>
	(set-escrow-percentage gold 30)
	(enable-timer TIMER_ESGOLD 5)
)
(defrule
	(goal ESGOLD 40)
=>
	(enable-timer TIMER_ESGOLD 5)
	(disable-self)
)
(defrule
	(goal ESGOLD 40)
	(timer-triggered TIMER_ESGOLD)
=>
	(set-escrow-percentage gold 40)
	(enable-timer TIMER_ESGOLD 5)
)

;●木
(defrule
	(goal ESWOOD 10)
=>
	(enable-timer TIMER_ESWOOD 5)
	(disable-self)
)
(defrule
	(goal ESWOOD 10)
	(timer-triggered TIMER_ESWOOD)
=>
	(set-escrow-percentage wood 10)
	(enable-timer TIMER_ESWOOD 5)
)
(defrule
	(goal ESWOOD 20)
=>
	(enable-timer TIMER_ESWOOD 5)
	(disable-self)
)
(defrule
	(goal ESWOOD 20)
	(timer-triggered TIMER_ESWOOD)
=>
	(set-escrow-percentage wood 20)
	(enable-timer TIMER_ESWOOD 5)
)
(defrule
	(goal ESWOOD 30)
=>
	(enable-timer TIMER_ESWOOD 5)
	(disable-self)
)
(defrule
	(goal ESWOOD 30)
	(timer-triggered TIMER_ESWOOD)
=>
	(set-escrow-percentage wood 30)
	(enable-timer TIMER_ESWOOD 5)
)
(defrule
	(goal ESWOOD 40)
=>
	(enable-timer TIMER_ESWOOD 5)
	(disable-self)
)
(defrule
	(goal ESWOOD 40)
	(timer-triggered TIMER_ESWOOD)
=>
	(set-escrow-percentage wood 40)
	(enable-timer TIMER_ESWOOD 5)
)


;●著作情報
(defrule
	(true)
=>
	(set-author-name "夜杏")
	(set-author-email "m_yoan@hotmail.com")
	(set-author-version "2.02")
	(disable-self)
)

;●食べ物発見
(defrule
	(or
		(resource-found food)
		(and
			(game-time > 90)
			(not(map-type nomad))
		)
;		(unit-type-count-total 594 >= 6)
	)
=>
	(set-strategic-number sn-percent-civilian-explorers 0)
	(set-strategic-number sn-percent-civilian-gatherers 65)
	(set-strategic-number sn-total-number-explorers 1)
	(set-strategic-number sn-minimum-civilian-explorers 0)
	(set-strategic-number sn-cap-civilian-explorers 0)
	(disable-self)
)

;●探索精度変更
(defrule
	(game-time > 480)
=>
	(set-strategic-number sn-blot-size 40 ) ;【未開拓領域とみなして探索する領域】
	(disable-self)
)

;●敵中心発見
(defrule
	(players-building-type-count any-enemy town-center == 1 )
=>
	(chat-local-to-self "21) いい町だ。いただくぜ！")
	(disable-self)
)

;●敵発見
(defrule
	(players-building-count any-enemy > 0)
=>
	(chat-local-to-self "16) 敵を発見！！")
	(disable-self)
)

;●敗北判定----------------------------------------

(defrule
	(game-time > 1000)
	(current-age >= feudal-age)
	(population < 15)
=>
	(chat-to-all "8) バンザーーーイ！！ 敗軍の将のお通りだぜーーーーーー")
	(disable-self)
)

(defrule
	(false)
	(population == 0)
	(building-type-count-total town-center == 0)
	(building-type-count-total castle == 0)
	(building-type-count-total bombard-tower == 0)
	(building-type-count-total watch-tower-line == 0)
	(building-type-count-total market == 0)
=>
	(chat-to-all "負けました・・・・。")
	(resign)
	(disable-self)
)

;●２時間もやった挙句にこのざまか！
(defrule
	(game-time > 7200)
=>
	(chat-to-all "27) ２時間もやった挙句にこのざまか！")
	(disable-self)
)

;●王様になるのはいい気分だぜ！
(defrule
	(building-type-count castle == 1)
=>
	(chat-to-all "17) 王様になるのはいい気分だぜ！")
	(disable-self)
)

;●俺に触るのはよせ
(defrule
	(unit-type-count-total -66 > 0)
=>
	(chat-local-to-self "22) 俺に触るのはよせ")
	(disable-self)
)
