; --------------------------------------------------------------------------
; File: Slak_MilitaryBuildings.per
; Author: SlakTheEldar
; Date: 2000-10-25
;
; Available under BSD-like license; see accompanying Copying.txt file
;
; --------------------------------------------------------------------------

;*********************************************************
; Buildings
;*********************************************************
; --------------------------------------------------------------------------
; Archery
; --------------------------------------------------------------------------
(defrule
  (building-type-count-total archery-range < 2)
  (can-build archery-range)
  =>
  (build archery-range)
)

(defrule
  (building-type-count-total archery-range < 2)
  (can-build-with-escrow archery-range)
  =>
  (release-escrow wood)
  (build archery-range)
)

(defrule
  (wood-amount > 750)
  (building-type-count-total archery-range < 6)
  (building-type-count-total archery-range > 1)
  (can-build archery-range)
  =>
  (build archery-range)
)

(defrule ; just in case...
  (building-type-count-total archery-range < 2)
  (can-build archery-range)
  =>
  (build archery-range)
)

; --------------------------------------------------------------------------
; Barracks
; --------------------------------------------------------------------------
(defrule
  (or (and (current-age > dark-age)
	   (building-type-count-total barracks == 0))
      (and (current-age == dark-age)
	   (not (goal age-advancement NO))))
  (building-type-count-total barracks < 3)
  (can-build barracks)
  =>
  (build barracks)
)

(defrule
  (wood-amount > 750)
  (building-type-count-total barracks > 2)
  (building-type-count-total barracks < 6)
  (can-build barracks)
  =>
  (build barracks)
)

; --------------------------------------------------------------------------
; Stable
; --------------------------------------------------------------------------

; --------------------------------------------------------------------------
; Siege workshop
; --------------------------------------------------------------------------
(defrule
  (building-type-count-total barracks > 0)
  (building-type-count-total siege-workshop < 2)
  (can-build-with-escrow siege-workshop)
  =>
  (release-escrow wood)
  (build siege-workshop)
  (chat-local-to-self "maintain siege-workshops")
)

(defrule
  (building-type-count-total barracks > 0)
  (building-type-count-total siege-workshop < 2)
  (can-build siege-workshop)
  =>
  (build siege-workshop)
  (chat-local-to-self "maintain siege-workshops")
)

; --------------------------------------------------------------------------
; Castle
; --------------------------------------------------------------------------
(defrule ; build home castle first for research and trebs
  (building-type-count-total castle == 0)
  (can-build castle)
  =>
  (build castle)
  (chat-local-to-self "building base castle")
)

(defrule
  (building-type-count-total castle == 0)
  (can-build-with-escrow castle)
  =>
  (release-escrow stone)
  (build castle)
  (chat-local-to-self "building base castle")
)

(defrule
  (building-type-count-total castle > 0)
  (can-build-with-escrow castle)
  =>
  (release-escrow stone)
  (build-forward castle)
  (chat-local-to-self "building castle")
)

(defrule
  (building-type-count-total castle > 0)
  (can-build castle)
  =>
  (build-forward castle)
  (chat-local-to-self "building castle")
)

; --------------------------------------------------------------------------
; Monastery
; --------------------------------------------------------------------------
(defrule
  (building-type-count-total monastery == 0)
  (can-build-with-escrow monastery)
  =>
  (release-escrow wood)
  (build monastery)
  (chat-local-to-self "maintain first monastery")
)

(defrule
  (building-type-count-total monastery == 1)
  (can-build-with-escrow monastery)
  =>
  (release-escrow wood)
  (build monastery)
  (chat-local-to-self "maintain next monastery")
)

; --------------------------------------------------------------------------
; Monks
; --------------------------------------------------------------------------
; always have a monk on hand
(defrule
  (unit-type-count-total monk == 0)
  (can-train monk)
  =>
  (train monk)
  (chat-local-to-self "first monk")
)

(defrule
  (unit-type-count-total monk == 0)
  (not (can-train monk))
  (can-train-with-escrow monk)
  =>
  (release-escrow gold)
  (train monk)
  (chat-local-to-self "first escrow monk")
)

; --------------------------------------------------------------------------
; Towers
; --------------------------------------------------------------------------
(defrule
  (current-age == feudal-age)
  (can-build watch-tower-line)
  (building-type-count-total watch-tower-line <= feudal-tower)
  =>
  (build-forward watch-tower-line)
  (chat-local-to-self "building feudal watch-towers")
)

(defrule
  (current-age == feudal-age)
  (can-build-with-escrow watch-tower-line)
  (building-type-count-total watch-tower-line <= feudal-tower)
  =>
  (release-escrow stone)
  (release-escrow wood)
  (build-forward watch-tower-line)
  (chat-local-to-self "building FEUDAL watch-towers")
)

(defrule
  (current-age == castle-age)
  (can-build watch-tower-line)
  (not (research-available ri-murder-holes))
  (building-type-count-total castle > 1)
  (building-type-count-total town-center > 1)
  (building-type-count-total watch-tower-line <= castle-tower)
  =>
  (build-forward watch-tower-line)
  (chat-local-to-self "building castle watch-towers")
) 

(defrule
  (can-build-with-escrow watch-tower-line)
  (not (research-available ri-murder-holes))
  (building-type-count-total castle > 1)
  (building-type-count-total town-center > 1)
  (building-type-count-total watch-tower-line <= castle-tower)
  =>
  (release-escrow stone)
  (release-escrow wood)
  (build-forward watch-tower-line)
  (chat-local-to-self "building CASTLE-OFF watch-towers")
)

(defrule
  (current-age == imperial-age)
  (not (research-available ri-murder-holes))
  (building-type-count-total castle > 1)
  (building-type-count-total town-center > 2)
  (building-type-count-total watch-tower-line <= imperial-tower)
  (can-build watch-tower-line)
  =>
  (build-forward watch-tower-line)
  (chat-local-to-self "building imperial watch-towers")
) 





